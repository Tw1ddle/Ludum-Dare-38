// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
var ShapeMesh = function(mesh,shape,height,isSea) {
	this.mesh = mesh;
	this.shape = shape;
	this.height = height;
	this.isSea = isSea;
};
ShapeMesh.__name__ = true;
ShapeMesh.prototype = {
	__class__: ShapeMesh
};
var Main = function() {
	this.shapes = [];
	this.dt = 0.0;
	this.lastAnimationTime = 0.0;
	this.signal_clicked = new msignal_Signal2();
	this.pointer = new THREE.Vector2(0.0,0.0);
	this.worldScene = new THREE.Scene();
	this.sceneGUI = new dat.GUI({ autoPlace : true});
	this.shaderGUI = new dat.GUI({ autoPlace : true});
	this.guiItemCount = 0;
	window.onload = $bind(this,this.onWindowLoaded);
	this.worldBuilder = new ludum_WorldBuilder();
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Main.prototype = {
	colorCloseTo: function(color,compare,range) {
		if(range == null) {
			range = 168430080;
		}
		var ar = color >>> 24 & 255;
		var ag = color >>> 16 & 255;
		var ab = color >>> 8 & 255;
		var br = compare >>> 24 & 255;
		var bg = compare >>> 16 & 255;
		var bb = compare >>> 8 & 255;
		var rr = range >>> 24 & 255;
		var rg = range >>> 16 & 255;
		var rb = range >>> 8 & 255;
		if(Math.abs(ar - br) < (range >>> 24 & 255) && Math.abs(ag - bg) < (range >>> 16 & 255) && Math.abs(ab - bb) < (range >>> 8 & 255)) {
			return true;
		}
		return false;
	}
	,perceivedLuminance: function(rgba) {
		return ((rgba >>> 24 & 255) * 0.299 + (rgba >>> 16 & 255) * 0.587 + (rgba >>> 8 & 255) * 0.114) / 255;
	}
	,onWindowLoaded: function() {
		var _gthis = this;
		this.gameAttachPoint = window.document.getElementById("game");
		var gameDiv = window.document.createElement("attach");
		this.gameAttachPoint.appendChild(gameDiv);
		var glSupported = WebGLDetector.detect();
		if(glSupported != 0) {
			var unsupportedInfo = window.document.createElement("div");
			unsupportedInfo.style.position = "absolute";
			unsupportedInfo.style.top = "10px";
			unsupportedInfo.style.width = "100%";
			unsupportedInfo.style.textAlign = "center";
			unsupportedInfo.style.color = "#ffffff";
			switch(glSupported) {
			case 1:
				unsupportedInfo.innerHTML = "Your browser supports WebGL, but the feature appears to be disabled. Click <a href=\"" + "https://github.com/Tw1ddle/Ludum-Dare-38" + "\" target=\"_blank\">here for screenshots</a> instead.";
				break;
			case 2:
				unsupportedInfo.innerHTML = "Your browser does not support WebGL. Click <a href=\"" + "https://github.com/Tw1ddle/Ludum-Dare-38" + "\" target=\"_blank\">here for screenshots</a> instead.";
				break;
			default:
				unsupportedInfo.innerHTML = "Could not detect WebGL support. Click <a href=\"" + "https://github.com/Tw1ddle/Ludum-Dare-38" + "\" target=\"_blank\">here for screenshots</a> instead.";
			}
			gameDiv.appendChild(unsupportedInfo);
			return;
		}
		var credits = window.document.createElement("div");
		credits.style.position = "absolute";
		credits.style.bottom = "-170px";
		credits.style.width = "100%";
		credits.style.textAlign = "center";
		credits.style.color = "#333333";
		credits.innerHTML = "Created for <a href=" + "https://ldjam.com/events/ludum-dare/38" + " target=\"_blank\"> " + "Ludum Dare 38" + "</a> by <a href=" + "https://twitter.com/Sam_Twidale" + " target=\"_blank\"> " + "Sam Twidale" + "</a> using <a href=" + "http://haxe.org/" + " target=\"_blank\">Haxe</a> and <a href=" + "https://github.com/mrdoob/three.js/" + " target=\"_blank\">three.js</a>. Get the code <a href=" + "https://github.com/Tw1ddle/Ludum-Dare-38" + " target=\"_blank\">here</a>.";
		gameDiv.appendChild(credits);
		this.renderer = new THREE.WebGLRenderer({ antialias : false});
		this.renderer.sortObjects = true;
		this.renderer.autoClear = false;
		this.renderer.setSize(800,600);
		this.renderer.setClearColor(new THREE.Color(2236962));
		this.worldCamera = new THREE.PerspectiveCamera(30,1.3333333333333333,0.5,2000000);
		this.worldCamera.position.set(0,-1145,-617);
		this.worldCamera.rotation.set(1,0,0);
		this.skyEffectController = new shaders_SkyEffectController(this);
		var skyMaterial = new THREE.ShaderMaterial({ fragmentShader : shaders_SkyShader.fragmentShader, vertexShader : shaders_SkyShader.vertexShader, uniforms : shaders_SkyShader.uniforms, side : THREE.BackSide});
		var skyMesh = new THREE.Mesh(new THREE.SphereBufferGeometry(450000,32,15),skyMaterial);
		skyMesh.name = "Sky Mesh";
		this.worldScene.add(skyMesh);
		var seaRgb = 185217536;
		var seaRgbTolerance = 336860160;
		this.worldMapObject = new THREE.Object3D();
		this.worldScene.add(this.worldMapObject);
		var _g = 0;
		var _g1 = this.worldBuilder.shapes;
		while(_g < _g1.length) {
			var shapeData = _g1[_g];
			++_g;
			var isSea = this.colorCloseTo(shapeData.rgb,seaRgb,seaRgbTolerance);
			var height = isSea ? 1 : this.perceivedLuminance(shapeData.rgb) * 32;
			var shape = new ShapeMesh(new THREE.Mesh(new THREE.CylinderGeometry(shapeData.r,shapeData.r,height,6,6),new THREE.MeshBasicMaterial({ transparent : true, depthWrite : false, depthTest : false, opacity : 1, color : "rgb(" + (shapeData.rgb >>> 24 & 255) + "," + (shapeData.rgb >>> 16 & 255) + "," + (shapeData.rgb >>> 8 & 255) + ")"})),shapeData,height,isSea);
			shape.mesh.position.set(shapeData.x - 400.,300. - shapeData.y,0);
			this.worldMapObject.add(shape.mesh);
			this.shapes.push(shape);
		}
		var _g11 = 0;
		var _g2 = this.shapes.length;
		while(_g11 < _g2) {
			var i = [_g11++];
			var delay = Math.sqrt(i[0] * 0.05);
			motion_Actuate.tween(this.shapes[i[0]].mesh.position,10,{ z : -1378}).delay(delay).onComplete((function(i1) {
				return function() {
					if(_gthis.shapes[i1[0]].isSea) {
						motion_Actuate.tween(_gthis.shapes[i1[0]].mesh.position,10,{ z : -1400}).repeat().reflect();
					}
				};
			})(i));
		}
		window.document.addEventListener("resize",function(event) {
		},false);
		window.document.addEventListener("contextmenu",function(event1) {
			event1.preventDefault();
		},true);
		this.signal_clicked.add(function(x,y) {
			var raycaster = new THREE.Raycaster();
			raycaster.setFromCamera(_gthis.pointer,_gthis.worldCamera);
		});
		window.document.addEventListener("mousedown",function(event2) {
			var value = (event2.x - _gthis.gameAttachPoint.offsetLeft) / _gthis.gameAttachPoint.clientWidth * 2 - 1;
			_gthis.pointer.x = value < -1 ? -1 : value > 1 ? 1 : value;
			var value1 = -((event2.y - _gthis.gameAttachPoint.offsetTop) / _gthis.gameAttachPoint.clientHeight) * 2 + 1;
			_gthis.pointer.y = value1 < -1 ? -1 : value1 > 1 ? 1 : value1;
			_gthis.signal_clicked.dispatch(_gthis.pointer.x,_gthis.pointer.y);
		},true);
		window.document.addEventListener("touchstart",function(event3) {
			var value2 = (event3.x - _gthis.gameAttachPoint.offsetLeft) / _gthis.gameAttachPoint.clientWidth * 2 - 1;
			_gthis.pointer.x = value2 < -1 ? -1 : value2 > 1 ? 1 : value2;
			var value3 = -((event3.y - _gthis.gameAttachPoint.offsetTop) / _gthis.gameAttachPoint.clientHeight) * 2 + 1;
			_gthis.pointer.y = value3 < -1 ? -1 : value3 > 1 ? 1 : value3;
			_gthis.signal_clicked.dispatch(_gthis.pointer.x,_gthis.pointer.y);
		},true);
		this.addGUIItem(this.shaderGUI,this.skyEffectController,"Sky Shader");
		this.addGUIItem(this.sceneGUI,this.worldCamera,"World Camera");
		this.addGUIItem(this.sceneGUI,this.worldMapObject,"World Scene");
		gameDiv.appendChild(this.renderer.domElement);
		window.requestAnimationFrame($bind(this,this.animate));
	}
	,animate: function(time) {
		this.dt = (time - this.lastAnimationTime) * 0.001;
		this.lastAnimationTime = time;
		this.renderer.clear();
		this.renderer.render(this.worldScene,this.worldCamera);
		window.requestAnimationFrame($bind(this,this.animate));
	}
	,addGUIItem: function(gui,object,tag) {
		if(gui == null || object == null) {
			return null;
		}
		var folder = null;
		if(tag != null) {
			folder = gui.addFolder(tag + " (" + this.guiItemCount++ + ")");
		} else {
			var name = Std.string(Reflect.field(object,"name"));
			if(name == null || name.length == 0) {
				folder = gui.addFolder("Item (" + this.guiItemCount++ + ")");
			} else {
				folder = gui.addFolder(Std.string(Reflect.getProperty(object,"name")) + " (" + this.guiItemCount++ + ")");
			}
		}
		if(js_Boot.__instanceof(object,THREE.Scene)) {
			var scene = object;
			var _g = 0;
			var _g1 = scene.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				this.addGUIItem(gui,child);
			}
		}
		if(js_Boot.__instanceof(object,THREE.Object3D)) {
			var object3d = object;
			folder.add(object3d.position,"x",-5000.0,5000.0,2).listen();
			folder.add(object3d.position,"y",-5000.0,5000.0,2).listen();
			folder.add(object3d.position,"z",-20000.0,20000.0,2).listen();
			folder.add(object3d.rotation,"x",0.0,Math.PI * 2,0.1).listen();
			folder.add(object3d.rotation,"y",0.0,Math.PI * 2,0.1).listen();
			folder.add(object3d.rotation,"z",0.0,Math.PI * 2,0.1).listen();
			folder.add(object3d.scale,"x",0.0,10.0,0.1).listen();
			folder.add(object3d.scale,"y",0.0,10.0,0.1).listen();
			folder.add(object3d.scale,"z",0.0,10.0,0.1).listen();
		}
		if(js_Boot.__instanceof(object,shaders_SkyEffectController)) {
			var controller = object;
			controller.addGUIItem(controller,gui);
		}
		return folder;
	}
	,__class__: Main
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var Type = function() { };
Type.__name__ = true;
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,__class__: haxe_ds_ObjectMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var ludum_WorldBuilder = function() {
	this.shapes = [];
	this.loadWorld("{\"shapes\":\r\n[{\"type\":32, \"data\":[299,484,32],\"color\":[171,129,88,255],\"score\":0.119632},\r\n{\"type\":32, \"data\":[448,63,32],\"color\":[133,131,128,255],\"score\":0.116808},\r\n{\"type\":32, \"data\":[302,264,32],\"color\":[147,127,88,255],\"score\":0.114202},\r\n{\"type\":32, \"data\":[357,302,33],\"color\":[136,121,78,255],\"score\":0.11187},\r\n{\"type\":32, \"data\":[234,467,32],\"color\":[146,105,71,255],\"score\":0.109728},\r\n{\"type\":32, \"data\":[487,42,17],\"color\":[182,184,188,255],\"score\":0.107746},\r\n{\"type\":32, \"data\":[338,216,32],\"color\":[111,108,61,255],\"score\":0.106366},\r\n{\"type\":32, \"data\":[621,417,32],\"color\":[107,96,63,255],\"score\":0.105191},\r\n{\"type\":32, \"data\":[515,36,13],\"color\":[164,164,175,255],\"score\":0.104199},\r\n{\"type\":32, \"data\":[399,66,30],\"color\":[97,97,109,255],\"score\":0.103088},\r\n{\"type\":32, \"data\":[196,481,30],\"color\":[136,99,68,255],\"score\":0.101921},\r\n{\"type\":32, \"data\":[617,477,32],\"color\":[96,90,60,255],\"score\":0.101001},\r\n{\"type\":32, \"data\":[263,451,32],\"color\":[133,103,66,255],\"score\":0.100214},\r\n{\"type\":32, \"data\":[589,542,19],\"color\":[121,115,97,255],\"score\":0.0994522},\r\n{\"type\":32, \"data\":[373,248,32],\"color\":[93,99,48,255],\"score\":0.0987123},\r\n{\"type\":32, \"data\":[706,385,32],\"color\":[85,85,42,255],\"score\":0.097996},\r\n{\"type\":32, \"data\":[335,501,32],\"color\":[116,97,62,255],\"score\":0.0973925},\r\n{\"type\":32, \"data\":[442,270,32],\"color\":[55,78,18,255],\"score\":0.0969449},\r\n{\"type\":32, \"data\":[743,337,32],\"color\":[77,80,35,255],\"score\":0.0963764},\r\n{\"type\":32, \"data\":[521,109,23],\"color\":[92,92,80,255],\"score\":0.0958231},\r\n{\"type\":32, \"data\":[308,82,32],\"color\":[78,73,67,255],\"score\":0.0952787},\r\n{\"type\":32, \"data\":[275,234,20],\"color\":[109,99,61,255],\"score\":0.0949479},\r\n{\"type\":32, \"data\":[665,433,32],\"color\":[68,78,32,255],\"score\":0.0944798},\r\n{\"type\":32, \"data\":[592,263,32],\"color\":[63,80,24,255],\"score\":0.0939725},\r\n{\"type\":32, \"data\":[253,494,22],\"color\":[135,93,64,255],\"score\":0.0935493},\r\n{\"type\":32, \"data\":[316,455,23],\"color\":[132,108,70,255],\"score\":0.0931307},\r\n{\"type\":32, \"data\":[542,34,11],\"color\":[119,119,138,255],\"score\":0.0927595},\r\n{\"type\":32, \"data\":[77,123,32],\"color\":[63,71,31,255],\"score\":0.0923925},\r\n{\"type\":32, \"data\":[685,312,32],\"color\":[44,66,13,255],\"score\":0.0920542},\r\n{\"type\":32, \"data\":[646,367,32],\"color\":[53,68,19,255],\"score\":0.091718},\r\n{\"type\":32, \"data\":[602,513,19],\"color\":[107,94,66,255],\"score\":0.0913744},\r\n{\"type\":32, \"data\":[399,112,31],\"color\":[66,63,48,255],\"score\":0.0910713},\r\n{\"type\":32, \"data\":[168,129,31],\"color\":[65,71,42,255],\"score\":0.0907368},\r\n{\"type\":32, \"data\":[590,343,32],\"color\":[51,65,21,255],\"score\":0.0904432},\r\n{\"type\":32, \"data\":[609,393,15],\"color\":[153,125,90,255],\"score\":0.0901518},\r\n{\"type\":32, \"data\":[287,179,32],\"color\":[52,66,22,255],\"score\":0.0898542},\r\n{\"type\":32, \"data\":[318,299,15],\"color\":[131,116,75,255],\"score\":0.0895654},\r\n{\"type\":32, \"data\":[488,95,17],\"color\":[91,95,87,255],\"score\":0.0892368},\r\n{\"type\":32, \"data\":[496,218,32],\"color\":[42,62,16,255],\"score\":0.0889578},\r\n{\"type\":32, \"data\":[636,278,32],\"color\":[47,66,15,255],\"score\":0.0886771},\r\n{\"type\":32, \"data\":[231,145,32],\"color\":[54,63,26,255],\"score\":0.0884125},\r\n{\"type\":32, \"data\":[400,225,32],\"color\":[58,77,25,255],\"score\":0.0881488},\r\n{\"type\":32, \"data\":[424,45,11],\"color\":[148,148,149,255],\"score\":0.0879265},\r\n{\"type\":32, \"data\":[553,513,32],\"color\":[11,11,49,255],\"score\":0.087721},\r\n{\"type\":32, \"data\":[296,491,30],\"color\":[174,129,89,255],\"score\":0.0874488},\r\n{\"type\":32, \"data\":[381,176,32],\"color\":[45,58,21,255],\"score\":0.08727},\r\n{\"type\":32, \"data\":[117,122,28],\"color\":[65,72,35,255],\"score\":0.0870494},\r\n{\"type\":32, \"data\":[762,470,32],\"color\":[11,10,50,255],\"score\":0.0868991},\r\n{\"type\":32, \"data\":[532,36,6],\"color\":[201,201,204,255],\"score\":0.0866835},\r\n{\"type\":32, \"data\":[359,321,21],\"color\":[143,126,84,255],\"score\":0.0865227},\r\n{\"type\":32, \"data\":[469,50,20],\"color\":[167,168,166,255],\"score\":0.0862762},\r\n{\"type\":32, \"data\":[744,213,33],\"color\":[11,10,50,255],\"score\":0.0861152},\r\n{\"type\":32, \"data\":[573,313,32],\"color\":[49,67,21,255],\"score\":0.0858957},\r\n{\"type\":32, \"data\":[386,531,32],\"color\":[12,11,48,255],\"score\":0.0857288},\r\n{\"type\":32, \"data\":[346,117,28],\"color\":[65,63,39,255],\"score\":0.0855226},\r\n{\"type\":32, \"data\":[605,443,14],\"color\":[134,113,85,255],\"score\":0.0853526},\r\n{\"type\":32, \"data\":[370,23,28],\"color\":[12,11,51,255],\"score\":0.0851816},\r\n{\"type\":32, \"data\":[765,546,32],\"color\":[11,10,50,255],\"score\":0.085028},\r\n{\"type\":32, \"data\":[565,414,32],\"color\":[11,10,50,255],\"score\":0.0847829},\r\n{\"type\":32, \"data\":[486,5,25],\"color\":[12,11,51,255],\"score\":0.0845531},\r\n{\"type\":32, \"data\":[518,20,10],\"color\":[14,13,52,255],\"score\":0.0843551},\r\n{\"type\":32, \"data\":[362,428,32],\"color\":[11,10,50,255],\"score\":0.0841924},\r\n{\"type\":32, \"data\":[477,529,32],\"color\":[11,10,50,255],\"score\":0.084037},\r\n{\"type\":32, \"data\":[594,374,11],\"color\":[122,104,71,255],\"score\":0.0838481},\r\n{\"type\":32, \"data\":[521,172,32],\"color\":[51,55,25,255],\"score\":0.0836642},\r\n{\"type\":32, \"data\":[254,543,32],\"color\":[12,11,50,255],\"score\":0.0834689},\r\n{\"type\":32, \"data\":[117,545,33],\"color\":[11,10,50,255],\"score\":0.0833024},\r\n{\"type\":32, \"data\":[583,76,32],\"color\":[11,10,50,255],\"score\":0.0831454},\r\n{\"type\":32, \"data\":[745,108,32],\"color\":[11,10,50,255],\"score\":0.082988},\r\n{\"type\":32, \"data\":[625,318,32],\"color\":[34,57,11,255],\"score\":0.0828285},\r\n{\"type\":32, \"data\":[157,180,31],\"color\":[13,14,48,255],\"score\":0.0826637},\r\n{\"type\":32, \"data\":[234,36,33],\"color\":[11,10,50,255],\"score\":0.0824956},\r\n{\"type\":32, \"data\":[99,215,33],\"color\":[11,10,50,255],\"score\":0.0823271},\r\n{\"type\":32, \"data\":[538,120,18],\"color\":[91,87,78,255],\"score\":0.0821606},\r\n{\"type\":32, \"data\":[39,339,32],\"color\":[11,10,50,255],\"score\":0.0820013},\r\n{\"type\":32, \"data\":[151,33,32],\"color\":[11,10,50,255],\"score\":0.0818418},\r\n{\"type\":32, \"data\":[459,466,32],\"color\":[11,10,50,255],\"score\":0.0816819},\r\n{\"type\":32, \"data\":[658,202,32],\"color\":[11,10,50,255],\"score\":0.0815217},\r\n{\"type\":32, \"data\":[181,426,30],\"color\":[11,10,50,255],\"score\":0.0813543},\r\n{\"type\":32, \"data\":[735,32,32],\"color\":[11,10,50,255],\"score\":0.0811935},\r\n{\"type\":32, \"data\":[634,117,33],\"color\":[11,10,50,255],\"score\":0.0810223},\r\n{\"type\":32, \"data\":[98,373,32],\"color\":[11,10,50,255],\"score\":0.0808608},\r\n{\"type\":32, \"data\":[445,64,23],\"color\":[117,115,113,255],\"score\":0.0806846},\r\n{\"type\":32, \"data\":[539,7,24],\"color\":[11,10,50,255],\"score\":0.0805022},\r\n{\"type\":32, \"data\":[767,277,33],\"color\":[11,10,50,255],\"score\":0.08033},\r\n{\"type\":32, \"data\":[609,410,13],\"color\":[178,143,110,255],\"score\":0.0801542},\r\n{\"type\":32, \"data\":[38,522,32],\"color\":[11,10,50,255],\"score\":0.079991},\r\n{\"type\":32, \"data\":[98,470,32],\"color\":[11,10,50,255],\"score\":0.0798275},\r\n{\"type\":32, \"data\":[405,281,25],\"color\":[63,81,24,255],\"score\":0.0796499},\r\n{\"type\":32, \"data\":[211,263,32],\"color\":[11,10,50,255],\"score\":0.0794856},\r\n{\"type\":32, \"data\":[33,439,33],\"color\":[11,10,50,255],\"score\":0.0793108},\r\n{\"type\":32, \"data\":[225,496,21],\"color\":[128,92,62,255],\"score\":0.0791442},\r\n{\"type\":32, \"data\":[77,56,32],\"color\":[11,10,50,255],\"score\":0.0789789},\r\n{\"type\":32, \"data\":[438,198,32],\"color\":[36,49,19,255],\"score\":0.0788074},\r\n{\"type\":32, \"data\":[699,498,32],\"color\":[11,10,50,255],\"score\":0.0786414},\r\n{\"type\":32, \"data\":[662,56,32],\"color\":[11,10,50,255],\"score\":0.078475},\r\n{\"type\":32, \"data\":[189,563,32],\"color\":[11,10,50,255],\"score\":0.0783083},\r\n{\"type\":32, \"data\":[693,146,32],\"color\":[11,10,50,255],\"score\":0.0781412},\r\n{\"type\":32, \"data\":[419,67,6],\"color\":[202,203,201,255],\"score\":0.0779692},\r\n{\"type\":32, \"data\":[508,398,33],\"color\":[11,10,50,255],\"score\":0.0778004},\r\n{\"type\":32, \"data\":[702,563,32],\"color\":[11,10,50,255],\"score\":0.0776322},\r\n{\"type\":32, \"data\":[161,369,32],\"color\":[11,10,50,255],\"score\":0.0774651},\r\n{\"type\":32, \"data\":[525,66,23],\"color\":[14,13,52,255],\"score\":0.0773019},\r\n{\"type\":32, \"data\":[503,38,10],\"color\":[221,222,222,255],\"score\":0.0770935},\r\n{\"type\":32, \"data\":[528,571,32],\"color\":[11,10,50,255],\"score\":0.0769276},\r\n{\"type\":32, \"data\":[324,374,32],\"color\":[11,10,50,255],\"score\":0.0767606},\r\n{\"type\":32, \"data\":[526,461,32],\"color\":[11,10,50,255],\"score\":0.0765971},\r\n{\"type\":32, \"data\":[223,385,32],\"color\":[11,10,50,255],\"score\":0.0764306},\r\n{\"type\":32, \"data\":[437,569,32],\"color\":[11,10,50,255],\"score\":0.0762685},\r\n{\"type\":32, \"data\":[26,34,32],\"color\":[11,10,50,255],\"score\":0.0761136},\r\n{\"type\":32, \"data\":[63,574,32],\"color\":[11,10,50,255],\"score\":0.0759598},\r\n{\"type\":32, \"data\":[609,23,32],\"color\":[11,10,50,255],\"score\":0.0758063},\r\n{\"type\":32, \"data\":[780,411,32],\"color\":[11,10,50,255],\"score\":0.0756614},\r\n{\"type\":32, \"data\":[358,58,13],\"color\":[79,79,100,255],\"score\":0.0754705},\r\n{\"type\":32, \"data\":[268,86,28],\"color\":[69,63,57,255],\"score\":0.0753076},\r\n{\"type\":32, \"data\":[31,182,32],\"color\":[12,11,50,255],\"score\":0.0751569},\r\n{\"type\":32, \"data\":[594,566,13],\"color\":[89,90,76,255],\"score\":0.0749792},\r\n{\"type\":32, \"data\":[346,577,32],\"color\":[11,11,49,255],\"score\":0.0748341},\r\n{\"type\":32, \"data\":[416,419,32],\"color\":[11,10,50,255],\"score\":0.0746709},\r\n{\"type\":32, \"data\":[770,162,32],\"color\":[11,10,50,255],\"score\":0.0745104},\r\n{\"type\":32, \"data\":[644,565,32],\"color\":[12,11,50,255],\"score\":0.074358},\r\n{\"type\":32, \"data\":[321,200,20],\"color\":[118,112,67,255],\"score\":0.0742092},\r\n{\"type\":32, \"data\":[507,318,33],\"color\":[11,10,50,255],\"score\":0.0740233},\r\n{\"type\":32, \"data\":[123,422,32],\"color\":[11,10,50,255],\"score\":0.0738726},\r\n{\"type\":32, \"data\":[444,110,22],\"color\":[70,65,58,255],\"score\":0.0737137},\r\n{\"type\":32, \"data\":[347,260,23],\"color\":[112,106,63,255],\"score\":0.0735759},\r\n{\"type\":32, \"data\":[200,210,32],\"color\":[11,10,49,255],\"score\":0.073428},\r\n{\"type\":32, \"data\":[181,69,32],\"color\":[11,10,50,255],\"score\":0.0732804},\r\n{\"type\":32, \"data\":[709,241,32],\"color\":[11,10,50,255],\"score\":0.0731386},\r\n{\"type\":32, \"data\":[399,477,32],\"color\":[11,10,50,255],\"score\":0.0729785},\r\n{\"type\":32, \"data\":[591,139,32],\"color\":[11,10,50,255],\"score\":0.0728268},\r\n{\"type\":32, \"data\":[311,529,14],\"color\":[103,93,54,255],\"score\":0.0726712},\r\n{\"type\":32, \"data\":[33,385,32],\"color\":[11,10,50,255],\"score\":0.0725358},\r\n{\"type\":32, \"data\":[296,20,32],\"color\":[11,10,50,255],\"score\":0.0723766},\r\n{\"type\":32, \"data\":[190,512,15],\"color\":[95,87,48,255],\"score\":0.0722302},\r\n{\"type\":32, \"data\":[164,144,6],\"color\":[150,153,140,255],\"score\":0.072082},\r\n{\"type\":32, \"data\":[464,258,32],\"color\":[51,73,20,255],\"score\":0.0719368},\r\n{\"type\":32, \"data\":[729,386,26],\"color\":[84,82,41,255],\"score\":0.0717932},\r\n{\"type\":32, \"data\":[778,58,32],\"color\":[11,10,50,255],\"score\":0.0716549},\r\n{\"type\":32, \"data\":[272,257,19],\"color\":[127,112,73,255],\"score\":0.0715137},\r\n{\"type\":32, \"data\":[697,84,32],\"color\":[11,10,50,255],\"score\":0.0713794},\r\n{\"type\":32, \"data\":[373,352,14],\"color\":[71,80,37,255],\"score\":0.071255},\r\n{\"type\":32, \"data\":[143,509,31],\"color\":[11,10,50,255],\"score\":0.0711221},\r\n{\"type\":32, \"data\":[164,306,32],\"color\":[13,14,47,255],\"score\":0.0709867},\r\n{\"type\":32, \"data\":[290,574,32],\"color\":[11,10,50,255],\"score\":0.070849},\r\n{\"type\":32, \"data\":[374,67,6],\"color\":[179,180,185,255],\"score\":0.0707094},\r\n{\"type\":32, \"data\":[406,44,6],\"color\":[196,198,199,255],\"score\":0.0705309},\r\n{\"type\":32, \"data\":[476,44,15],\"color\":[201,202,201,255],\"score\":0.0704036},\r\n{\"type\":32, \"data\":[651,475,18],\"color\":[74,81,38,255],\"score\":0.0702853},\r\n{\"type\":32, \"data\":[102,280,19],\"color\":[38,62,14,255],\"score\":0.0701583},\r\n{\"type\":32, \"data\":[327,314,12],\"color\":[82,84,42,255],\"score\":0.0700449},\r\n{\"type\":32, \"data\":[280,378,32],\"color\":[11,11,49,255],\"score\":0.069921},\r\n{\"type\":32, \"data\":[22,74,32],\"color\":[11,10,50,255],\"score\":0.0698108},\r\n{\"type\":32, \"data\":[530,265,29],\"color\":[11,11,49,255],\"score\":0.069676},\r\n{\"type\":32, \"data\":[488,67,12],\"color\":[26,25,62,255],\"score\":0.0695513},\r\n{\"type\":32, \"data\":[9,294,32],\"color\":[11,10,50,255],\"score\":0.0694377},\r\n{\"type\":32, \"data\":[472,81,10],\"color\":[101,99,97,255],\"score\":0.0693276},\r\n{\"type\":32, \"data\":[305,228,15],\"color\":[87,84,45,255],\"score\":0.0692147},\r\n{\"type\":32, \"data\":[92,18,32],\"color\":[11,10,50,255],\"score\":0.0691035},\r\n{\"type\":32, \"data\":[632,179,33],\"color\":[11,10,50,255],\"score\":0.0689838},\r\n{\"type\":32, \"data\":[677,24,32],\"color\":[11,10,50,255],\"score\":0.0688751},\r\n{\"type\":32, \"data\":[300,136,32],\"color\":[46,52,28,255],\"score\":0.0687692},\r\n{\"type\":32, \"data\":[652,526,29],\"color\":[11,10,50,255],\"score\":0.0686705},\r\n{\"type\":32, \"data\":[346,294,16],\"color\":[171,142,103,255],\"score\":0.0685604},\r\n{\"type\":32, \"data\":[32,483,32],\"color\":[11,10,50,255],\"score\":0.0684617},\r\n{\"type\":32, \"data\":[407,331,26],\"color\":[13,12,50,255],\"score\":0.0683537},\r\n{\"type\":32, \"data\":[584,543,7],\"color\":[175,180,174,255],\"score\":0.0682402},\r\n{\"type\":32, \"data\":[646,420,26],\"color\":[66,74,30,255],\"score\":0.0681243},\r\n{\"type\":32, \"data\":[133,579,32],\"color\":[11,10,50,255],\"score\":0.0680223},\r\n{\"type\":32, \"data\":[11,570,32],\"color\":[11,10,50,255],\"score\":0.0679148},\r\n{\"type\":32, \"data\":[791,371,32],\"color\":[11,10,50,255],\"score\":0.0677958},\r\n{\"type\":32, \"data\":[263,302,23],\"color\":[11,10,50,255],\"score\":0.0676941},\r\n{\"type\":32, \"data\":[128,70,26],\"color\":[11,10,50,255],\"score\":0.0675987},\r\n{\"type\":32, \"data\":[295,491,12],\"color\":[213,170,121,255],\"score\":0.0674891},\r\n{\"type\":32, \"data\":[576,365,9],\"color\":[113,99,63,255],\"score\":0.0673797},\r\n{\"type\":32, \"data\":[344,479,18],\"color\":[104,90,60,255],\"score\":0.0672822},\r\n{\"type\":32, \"data\":[434,511,32],\"color\":[11,10,50,255],\"score\":0.0671879},\r\n{\"type\":32, \"data\":[417,371,15],\"color\":[48,71,21,255],\"score\":0.0670849},\r\n{\"type\":32, \"data\":[715,178,32],\"color\":[11,10,50,255],\"score\":0.0669903},\r\n{\"type\":32, \"data\":[236,438,15],\"color\":[127,104,65,255],\"score\":0.0668896},\r\n{\"type\":32, \"data\":[231,586,32],\"color\":[11,10,50,255],\"score\":0.066798},\r\n{\"type\":32, \"data\":[564,462,27],\"color\":[11,10,50,255],\"score\":0.0666901},\r\n{\"type\":32, \"data\":[429,4,31],\"color\":[11,10,50,255],\"score\":0.0665761},\r\n{\"type\":32, \"data\":[766,582,32],\"color\":[11,10,50,255],\"score\":0.0664764},\r\n{\"type\":32, \"data\":[553,34,4],\"color\":[184,185,193,255],\"score\":0.0663583},\r\n{\"type\":32, \"data\":[707,326,32],\"color\":[56,72,19,255],\"score\":0.0662642},\r\n{\"type\":32, \"data\":[734,446,32],\"color\":[11,10,49,255],\"score\":0.0661482},\r\n{\"type\":32, \"data\":[154,142,6],\"color\":[138,140,122,255],\"score\":0.0660524},\r\n{\"type\":32, \"data\":[266,422,14],\"color\":[95,86,50,255],\"score\":0.0659575},\r\n{\"type\":32, \"data\":[507,93,6],\"color\":[155,157,152,255],\"score\":0.0658501},\r\n{\"type\":32, \"data\":[504,511,32],\"color\":[11,10,50,255],\"score\":0.0657661},\r\n{\"type\":32, \"data\":[69,423,32],\"color\":[11,10,50,255],\"score\":0.0656709},\r\n{\"type\":32, \"data\":[484,583,32],\"color\":[11,10,50,255],\"score\":0.0655827},\r\n{\"type\":32, \"data\":[431,148,22],\"color\":[13,13,48,255],\"score\":0.0654852},\r\n{\"type\":32, \"data\":[240,336,16],\"color\":[50,69,23,255],\"score\":0.0653772},\r\n{\"type\":32, \"data\":[787,221,32],\"color\":[11,10,50,255],\"score\":0.0652802},\r\n{\"type\":32, \"data\":[81,236,32],\"color\":[11,10,49,255],\"score\":0.0651838},\r\n{\"type\":32, \"data\":[211,137,28],\"color\":[61,67,32,255],\"score\":0.0650907},\r\n{\"type\":32, \"data\":[111,335,32],\"color\":[13,13,48,255],\"score\":0.0649946},\r\n{\"type\":32, \"data\":[375,79,9],\"color\":[101,96,82,255],\"score\":0.0648748},\r\n{\"type\":32, \"data\":[80,516,32],\"color\":[11,10,50,255],\"score\":0.0647829},\r\n{\"type\":32, \"data\":[254,165,32],\"color\":[44,58,18,255],\"score\":0.0646906},\r\n{\"type\":32, \"data\":[336,163,23],\"color\":[43,52,23,255],\"score\":0.0645998},\r\n{\"type\":32, \"data\":[395,583,32],\"color\":[11,10,50,255],\"score\":0.064517},\r\n{\"type\":32, \"data\":[501,150,15],\"color\":[76,71,36,255],\"score\":0.064424},\r\n{\"type\":32, \"data\":[770,502,32],\"color\":[11,10,50,255],\"score\":0.0643389},\r\n{\"type\":32, \"data\":[123,180,32],\"color\":[11,10,50,255],\"score\":0.0642468},\r\n{\"type\":32, \"data\":[560,117,5],\"color\":[118,119,112,255],\"score\":0.0641533},\r\n{\"type\":32, \"data\":[552,177,22],\"color\":[51,57,21,255],\"score\":0.0640704},\r\n{\"type\":32, \"data\":[575,599,29],\"color\":[11,10,50,255],\"score\":0.0639737},\r\n{\"type\":32, \"data\":[195,12,32],\"color\":[11,10,50,255],\"score\":0.0638923},\r\n{\"type\":32, \"data\":[445,387,11],\"color\":[64,86,25,255],\"score\":0.0637898},\r\n{\"type\":32, \"data\":[289,341,26],\"color\":[12,13,48,255],\"score\":0.0637187},\r\n{\"type\":32, \"data\":[154,249,32],\"color\":[15,18,46,255],\"score\":0.0636296},\r\n{\"type\":32, \"data\":[402,71,12],\"color\":[131,131,141,255],\"score\":0.063536},\r\n{\"type\":32, \"data\":[0,231,32],\"color\":[12,12,48,255],\"score\":0.0634568},\r\n{\"type\":32, \"data\":[771,13,32],\"color\":[11,10,50,255],\"score\":0.0633831},\r\n{\"type\":32, \"data\":[481,102,9],\"color\":[35,47,60,255],\"score\":0.0632998},\r\n{\"type\":32, \"data\":[339,85,9],\"color\":[114,107,77,255],\"score\":0.0632094},\r\n{\"type\":32, \"data\":[293,286,10],\"color\":[185,159,118,255],\"score\":0.0631186},\r\n{\"type\":32, \"data\":[176,150,7],\"color\":[113,120,105,255],\"score\":0.0630425},\r\n{\"type\":32, \"data\":[673,294,32],\"color\":[43,63,13,255],\"score\":0.0629643},\r\n{\"type\":32, \"data\":[170,123,20],\"color\":[57,63,23,255],\"score\":0.0628725},\r\n{\"type\":32, \"data\":[416,93,12],\"color\":[42,40,57,255],\"score\":0.0627811},\r\n{\"type\":32, \"data\":[351,17,32],\"color\":[11,10,50,255],\"score\":0.0627115},\r\n{\"type\":32, \"data\":[137,460,30],\"color\":[11,10,50,255],\"score\":0.0626343},\r\n{\"type\":32, \"data\":[381,53,10],\"color\":[45,44,72,255],\"score\":0.0625509},\r\n{\"type\":32, \"data\":[792,113,32],\"color\":[11,10,50,255],\"score\":0.0624721},\r\n{\"type\":32, \"data\":[55,124,28],\"color\":[60,66,33,255],\"score\":0.0623895},\r\n{\"type\":32, \"data\":[438,324,23],\"color\":[11,10,49,255],\"score\":0.0623118},\r\n{\"type\":32, \"data\":[363,401,32],\"color\":[11,10,50,255],\"score\":0.0622436},\r\n{\"type\":32, \"data\":[427,87,4],\"color\":[202,195,163,255],\"score\":0.0621454},\r\n{\"type\":32, \"data\":[0,132,30],\"color\":[13,12,50,255],\"score\":0.0620684},\r\n{\"type\":32, \"data\":[197,340,24],\"color\":[12,13,49,255],\"score\":0.0620008},\r\n{\"type\":32, \"data\":[489,87,7],\"color\":[149,145,134,255],\"score\":0.0619232},\r\n{\"type\":32, \"data\":[467,362,20],\"color\":[12,11,49,255],\"score\":0.0618502},\r\n{\"type\":32, \"data\":[627,251,13],\"color\":[75,88,29,255],\"score\":0.0617657},\r\n{\"type\":32, \"data\":[462,156,20],\"color\":[12,11,49,255],\"score\":0.0617003},\r\n{\"type\":32, \"data\":[543,110,5],\"color\":[161,161,152,255],\"score\":0.0616174},\r\n{\"type\":32, \"data\":[231,281,30],\"color\":[11,10,50,255],\"score\":0.0615424},\r\n{\"type\":32, \"data\":[478,451,32],\"color\":[11,10,50,255],\"score\":0.0614744},\r\n{\"type\":32, \"data\":[553,298,11],\"color\":[80,93,50,255],\"score\":0.0614049},\r\n{\"type\":32, \"data\":[589,394,9],\"color\":[13,12,51,255],\"score\":0.0613415},\r\n{\"type\":32, \"data\":[463,69,4],\"color\":[218,218,223,255],\"score\":0.0612371},\r\n{\"type\":32, \"data\":[380,297,15],\"color\":[102,102,50,255],\"score\":0.0611728},\r\n{\"type\":32, \"data\":[433,83,6],\"color\":[207,195,154,255],\"score\":0.0610899},\r\n{\"type\":32, \"data\":[721,514,32],\"color\":[11,10,50,255],\"score\":0.061033},\r\n{\"type\":32, \"data\":[635,81,32],\"color\":[11,10,50,255],\"score\":0.0609778},\r\n{\"type\":32, \"data\":[409,58,5],\"color\":[24,23,59,255],\"score\":0.0609005},\r\n{\"type\":32, \"data\":[672,333,30],\"color\":[40,62,12,255],\"score\":0.0608422},\r\n{\"type\":32, \"data\":[606,540,9],\"color\":[115,99,60,255],\"score\":0.0607669},\r\n{\"type\":32, \"data\":[301,315,4],\"color\":[160,136,111,255],\"score\":0.0606663},\r\n{\"type\":32, \"data\":[318,430,10],\"color\":[91,83,50,255],\"score\":0.0605952},\r\n{\"type\":32, \"data\":[545,373,23],\"color\":[12,12,49,255],\"score\":0.0605321},\r\n{\"type\":32, \"data\":[527,96,5],\"color\":[154,158,156,255],\"score\":0.0604573},\r\n{\"type\":32, \"data\":[70,200,32],\"color\":[11,10,50,255],\"score\":0.0603929},\r\n{\"type\":32, \"data\":[222,74,21],\"color\":[11,10,50,255],\"score\":0.0603396},\r\n{\"type\":32, \"data\":[367,208,17],\"color\":[73,90,33,255],\"score\":0.0602691},\r\n{\"type\":32, \"data\":[452,70,4],\"color\":[205,204,200,255],\"score\":0.060194},\r\n{\"type\":32, \"data\":[292,302,4],\"color\":[136,112,88,255],\"score\":0.0601339},\r\n{\"type\":32, \"data\":[447,37,5],\"color\":[208,208,210,255],\"score\":0.0600347},\r\n{\"type\":32, \"data\":[287,212,18],\"color\":[61,67,28,255],\"score\":0.0599785},\r\n{\"type\":32, \"data\":[560,79,31],\"color\":[12,11,50,255],\"score\":0.0598936},\r\n{\"type\":32, \"data\":[607,424,12],\"color\":[164,132,103,255],\"score\":0.0598289},\r\n{\"type\":32, \"data\":[544,324,3],\"color\":[158,151,131,255],\"score\":0.0597688},\r\n{\"type\":32, \"data\":[600,481,9],\"color\":[131,119,95,255],\"score\":0.0597128},\r\n{\"type\":32, \"data\":[52,285,11],\"color\":[44,67,23,255],\"score\":0.0596647},\r\n{\"type\":32, \"data\":[348,51,4],\"color\":[142,144,156,255],\"score\":0.0595896},\r\n{\"type\":32, \"data\":[479,59,5],\"color\":[176,181,191,255],\"score\":0.0595167},\r\n{\"type\":32, \"data\":[507,14,15],\"color\":[11,10,50,255],\"score\":0.0594415},\r\n{\"type\":32, \"data\":[290,254,20],\"color\":[148,129,90,255],\"score\":0.0593853},\r\n{\"type\":32, \"data\":[376,326,8],\"color\":[126,120,73,255],\"score\":0.0593275},\r\n{\"type\":32, \"data\":[352,514,12],\"color\":[72,74,37,255],\"score\":0.0592704},\r\n{\"type\":32, \"data\":[407,68,4],\"color\":[42,42,75,255],\"score\":0.0592035},\r\n{\"type\":32, \"data\":[769,331,12],\"color\":[90,92,41,255],\"score\":0.0591574},\r\n{\"type\":32, \"data\":[378,140,19],\"color\":[59,56,28,255],\"score\":0.0591083},\r\n{\"type\":32, \"data\":[556,534,21],\"color\":[11,11,50,255],\"score\":0.0590452},\r\n{\"type\":32, \"data\":[327,239,9],\"color\":[155,138,92,255],\"score\":0.0589865},\r\n{\"type\":32, \"data\":[558,0,31],\"color\":[11,10,50,255],\"score\":0.0589277},\r\n{\"type\":32, \"data\":[732,265,32],\"color\":[11,10,50,255],\"score\":0.0588676},\r\n{\"type\":32, \"data\":[269,93,8],\"color\":[18,17,52,255],\"score\":0.0588052},\r\n{\"type\":32, \"data\":[695,389,31],\"color\":[83,85,40,255],\"score\":0.0587506},\r\n{\"type\":32, \"data\":[448,81,8],\"color\":[76,73,75,255],\"score\":0.0586803},\r\n{\"type\":32, \"data\":[312,56,5],\"color\":[136,136,149,255],\"score\":0.058602},\r\n{\"type\":32, \"data\":[425,57,5],\"color\":[42,42,68,255],\"score\":0.0585277},\r\n{\"type\":32, \"data\":[144,115,20],\"color\":[59,65,26,255],\"score\":0.0584793},\r\n{\"type\":32, \"data\":[542,35,5],\"color\":[188,189,195,255],\"score\":0.0584132},\r\n{\"type\":32, \"data\":[677,227,32],\"color\":[11,10,50,255],\"score\":0.0583567},\r\n{\"type\":32, \"data\":[535,214,15],\"color\":[35,55,18,255],\"score\":0.0583082},\r\n{\"type\":32, \"data\":[542,118,6],\"color\":[40,39,51,255],\"score\":0.0582445},\r\n{\"type\":32, \"data\":[229,460,26],\"color\":[149,108,73,255],\"score\":0.058174},\r\n{\"type\":32, \"data\":[552,113,5],\"color\":[143,142,132,255],\"score\":0.0581158},\r\n{\"type\":32, \"data\":[508,68,18],\"color\":[13,12,51,255],\"score\":0.0580535},\r\n{\"type\":32, \"data\":[42,260,14],\"color\":[41,60,23,255],\"score\":0.0579948},\r\n{\"type\":32, \"data\":[384,366,10],\"color\":[66,81,28,255],\"score\":0.0579347},\r\n{\"type\":32, \"data\":[460,50,6],\"color\":[122,118,90,255],\"score\":0.0578821},\r\n{\"type\":32, \"data\":[731,356,29],\"color\":[84,81,39,255],\"score\":0.0578399},\r\n{\"type\":32, \"data\":[206,163,6],\"color\":[102,111,89,255],\"score\":0.0577797},\r\n{\"type\":32, \"data\":[489,37,9],\"color\":[219,219,221,255],\"score\":0.0577216},\r\n{\"type\":32, \"data\":[518,37,8],\"color\":[214,213,215,255],\"score\":0.0576231},\r\n{\"type\":32, \"data\":[258,255,9],\"color\":[82,79,38,255],\"score\":0.057574},\r\n{\"type\":32, \"data\":[336,256,11],\"color\":[81,80,41,255],\"score\":0.0575184},\r\n{\"type\":32, \"data\":[389,77,5],\"color\":[38,41,72,255],\"score\":0.0574609},\r\n{\"type\":32, \"data\":[799,310,25],\"color\":[11,10,50,255],\"score\":0.0574128},\r\n{\"type\":32, \"data\":[279,520,7],\"color\":[84,77,49,255],\"score\":0.0573717},\r\n{\"type\":32, \"data\":[581,310,28],\"color\":[39,60,11,255],\"score\":0.0573218},\r\n{\"type\":32, \"data\":[258,29,32],\"color\":[11,10,50,255],\"score\":0.0572743},\r\n{\"type\":32, \"data\":[272,219,11],\"color\":[98,93,52,255],\"score\":0.0572194},\r\n{\"type\":32, \"data\":[297,91,12],\"color\":[102,93,62,255],\"score\":0.0571755},\r\n{\"type\":32, \"data\":[695,434,14],\"color\":[56,66,26,255],\"score\":0.0571369},\r\n{\"type\":32, \"data\":[314,67,9],\"color\":[60,56,67,255],\"score\":0.0570927},\r\n{\"type\":32, \"data\":[626,216,23],\"color\":[12,11,49,255],\"score\":0.0570439},\r\n{\"type\":32, \"data\":[398,80,5],\"color\":[182,184,169,255],\"score\":0.0569852},\r\n{\"type\":32, \"data\":[270,504,11],\"color\":[157,106,72,255],\"score\":0.0569409},\r\n{\"type\":32, \"data\":[581,554,4],\"color\":[171,179,180,255],\"score\":0.0568944},\r\n{\"type\":32, \"data\":[672,456,16],\"color\":[77,83,38,255],\"score\":0.056846},\r\n{\"type\":32, \"data\":[531,340,19],\"color\":[11,10,50,255],\"score\":0.056794},\r\n{\"type\":32, \"data\":[560,35,3],\"color\":[123,123,145,255],\"score\":0.0567419},\r\n{\"type\":32, \"data\":[414,48,6],\"color\":[182,184,175,255],\"score\":0.056694},\r\n{\"type\":32, \"data\":[702,589,32],\"color\":[11,10,50,255],\"score\":0.0566467},\r\n{\"type\":32, \"data\":[142,140,8],\"color\":[93,99,68,255],\"score\":0.0565958},\r\n{\"type\":32, \"data\":[558,41,6],\"color\":[14,13,53,255],\"score\":0.0565498},\r\n{\"type\":32, \"data\":[400,43,5],\"color\":[191,192,193,255],\"score\":0.0564951},\r\n{\"type\":32, \"data\":[363,65,3],\"color\":[180,184,191,255],\"score\":0.0564348},\r\n{\"type\":32, \"data\":[444,71,3],\"color\":[200,201,191,255],\"score\":0.056393},\r\n{\"type\":32, \"data\":[400,108,19],\"color\":[80,77,50,255],\"score\":0.0563454},\r\n{\"type\":32, \"data\":[453,18,15],\"color\":[11,10,50,255],\"score\":0.0563061},\r\n{\"type\":32, \"data\":[214,225,33],\"color\":[11,10,49,255],\"score\":0.0562627},\r\n{\"type\":32, \"data\":[153,202,8],\"color\":[44,59,33,255],\"score\":0.0562174},\r\n{\"type\":32, \"data\":[536,146,10],\"color\":[15,14,50,255],\"score\":0.0561601},\r\n{\"type\":32, \"data\":[336,456,9],\"color\":[101,86,57,255],\"score\":0.0561126},\r\n{\"type\":32, \"data\":[319,281,17],\"color\":[149,124,87,255],\"score\":0.0560643},\r\n{\"type\":32, \"data\":[297,519,8],\"color\":[114,96,61,255],\"score\":0.0560219},\r\n{\"type\":32, \"data\":[437,70,3],\"color\":[212,213,205,255],\"score\":0.0559661},\r\n{\"type\":32, \"data\":[572,215,21],\"color\":[17,19,43,255],\"score\":0.05592},\r\n{\"type\":32, \"data\":[320,90,8],\"color\":[119,107,63,255],\"score\":0.0558791},\r\n{\"type\":32, \"data\":[424,77,4],\"color\":[18,18,56,255],\"score\":0.0558189},\r\n{\"type\":32, \"data\":[31,13,32],\"color\":[11,10,50,255],\"score\":0.0557786},\r\n{\"type\":32, \"data\":[323,538,9],\"color\":[79,87,42,255],\"score\":0.0557381},\r\n{\"type\":32, \"data\":[294,66,4],\"color\":[151,143,117,255],\"score\":0.055693},\r\n{\"type\":32, \"data\":[336,328,7],\"color\":[60,68,28,255],\"score\":0.055649},\r\n{\"type\":32, \"data\":[191,152,5],\"color\":[102,111,96,255],\"score\":0.0556043},\r\n{\"type\":32, \"data\":[484,80,3],\"color\":[154,160,163,255],\"score\":0.0555656},\r\n{\"type\":32, \"data\":[216,167,5],\"color\":[95,107,79,255],\"score\":0.0555291},\r\n{\"type\":32, \"data\":[666,130,32],\"color\":[11,10,50,255],\"score\":0.0554938},\r\n{\"type\":32, \"data\":[357,59,5],\"color\":[19,18,55,255],\"score\":0.0554403},\r\n{\"type\":32, \"data\":[323,76,6],\"color\":[15,14,52,255],\"score\":0.0553813},\r\n{\"type\":32, \"data\":[0,356,32],\"color\":[11,10,50,255],\"score\":0.0553473},\r\n{\"type\":32, \"data\":[433,37,3],\"color\":[210,209,214,255],\"score\":0.055303},\r\n{\"type\":32, \"data\":[333,52,12],\"color\":[18,17,56,255],\"score\":0.0552561},\r\n{\"type\":32, \"data\":[400,21,17],\"color\":[11,10,50,255],\"score\":0.0552206},\r\n{\"type\":32, \"data\":[59,343,31],\"color\":[11,10,50,255],\"score\":0.0551815},\r\n{\"type\":32, \"data\":[436,102,8],\"color\":[31,31,55,255],\"score\":0.055144},\r\n{\"type\":32, \"data\":[564,285,11],\"color\":[68,83,33,255],\"score\":0.0551061},\r\n{\"type\":32, \"data\":[725,59,32],\"color\":[11,10,50,255],\"score\":0.0550739},\r\n{\"type\":32, \"data\":[354,83,10],\"color\":[26,24,57,255],\"score\":0.055039},\r\n{\"type\":32, \"data\":[600,569,10],\"color\":[87,92,76,255],\"score\":0.0550032},\r\n{\"type\":32, \"data\":[427,355,8],\"color\":[49,78,14,255],\"score\":0.0549594},\r\n{\"type\":32, \"data\":[499,48,4],\"color\":[128,134,132,255],\"score\":0.0549197},\r\n{\"type\":32, \"data\":[462,36,5],\"color\":[212,212,214,255],\"score\":0.0548808},\r\n{\"type\":32, \"data\":[417,58,4],\"color\":[29,28,56,255],\"score\":0.0548335},\r\n{\"type\":32, \"data\":[327,361,30],\"color\":[11,10,49,255],\"score\":0.0547945},\r\n{\"type\":32, \"data\":[629,491,15],\"color\":[79,80,47,255],\"score\":0.0547626},\r\n{\"type\":32, \"data\":[256,81,9],\"color\":[105,93,57,255],\"score\":0.0547213},\r\n{\"type\":32, \"data\":[282,63,7],\"color\":[89,86,86,255],\"score\":0.0546815},\r\n{\"type\":32, \"data\":[512,117,14],\"color\":[70,75,57,255],\"score\":0.0546465},\r\n{\"type\":32, \"data\":[602,458,9],\"color\":[129,114,89,255],\"score\":0.0546134},\r\n{\"type\":32, \"data\":[174,474,9],\"color\":[160,113,80,255],\"score\":0.0545673},\r\n{\"type\":32, \"data\":[295,421,14],\"color\":[14,15,51,255],\"score\":0.0545302},\r\n{\"type\":32, \"data\":[458,69,3],\"color\":[226,228,229,255],\"score\":0.054482},\r\n{\"type\":32, \"data\":[231,110,16],\"color\":[51,52,32,255],\"score\":0.0544462},\r\n{\"type\":32, \"data\":[636,598,32],\"color\":[11,10,50,255],\"score\":0.0544059},\r\n{\"type\":32, \"data\":[360,494,11],\"color\":[80,78,45,255],\"score\":0.0543738},\r\n{\"type\":32, \"data\":[251,231,9],\"color\":[35,49,22,255],\"score\":0.054343},\r\n{\"type\":32, \"data\":[583,368,9],\"color\":[114,99,60,255],\"score\":0.0543068},\r\n{\"type\":32, \"data\":[474,117,12],\"color\":[12,12,50,255],\"score\":0.0542692},\r\n{\"type\":32, \"data\":[782,463,32],\"color\":[11,10,50,255],\"score\":0.0542393},\r\n{\"type\":32, \"data\":[515,94,6],\"color\":[146,148,142,255],\"score\":0.0541763},\r\n{\"type\":32, \"data\":[228,548,29],\"color\":[11,10,50,255],\"score\":0.0541458},\r\n{\"type\":32, \"data\":[284,275,7],\"color\":[188,160,117,255],\"score\":0.0541084},\r\n{\"type\":32, \"data\":[301,248,4],\"color\":[208,195,163,255],\"score\":0.0540608},\r\n{\"type\":32, \"data\":[491,385,31],\"color\":[12,11,49,255],\"score\":0.054025},\r\n{\"type\":32, \"data\":[96,141,6],\"color\":[104,107,80,255],\"score\":0.0539814},\r\n{\"type\":32, \"data\":[308,77,5],\"color\":[21,19,53,255],\"score\":0.0539455},\r\n{\"type\":32, \"data\":[378,82,8],\"color\":[127,120,89,255],\"score\":0.0539032},\r\n{\"type\":32, \"data\":[169,552,27],\"color\":[11,10,50,255],\"score\":0.0538741},\r\n{\"type\":32, \"data\":[303,293,4],\"color\":[204,170,126,255],\"score\":0.0538391},\r\n{\"type\":32, \"data\":[416,39,3],\"color\":[55,54,87,255],\"score\":0.0537998},\r\n{\"type\":32, \"data\":[596,479,4],\"color\":[173,170,164,255],\"score\":0.053767},\r\n{\"type\":32, \"data\":[566,354,6],\"color\":[100,88,63,255],\"score\":0.0537287},\r\n{\"type\":32, \"data\":[297,451,13],\"color\":[147,117,71,255],\"score\":0.0536984},\r\n{\"type\":32, \"data\":[169,147,4],\"color\":[178,182,174,255],\"score\":0.0536573},\r\n{\"type\":32, \"data\":[225,320,10],\"color\":[44,63,21,255],\"score\":0.0536226},\r\n{\"type\":32, \"data\":[0,508,32],\"color\":[11,10,50,255],\"score\":0.0535958},\r\n{\"type\":32, \"data\":[456,75,3],\"color\":[24,24,59,255],\"score\":0.0535545},\r\n{\"type\":32, \"data\":[67,274,13],\"color\":[13,14,49,255],\"score\":0.0535234},\r\n{\"type\":32, \"data\":[554,158,8],\"color\":[85,80,45,255],\"score\":0.0534788},\r\n{\"type\":32, \"data\":[127,134,10],\"color\":[82,88,54,255],\"score\":0.0534504},\r\n{\"type\":32, \"data\":[473,66,2],\"color\":[32,32,69,255],\"score\":0.0534057},\r\n{\"type\":32, \"data\":[439,37,4],\"color\":[194,194,198,255],\"score\":0.0533638},\r\n{\"type\":32, \"data\":[439,50,8],\"color\":[93,91,79,255],\"score\":0.0533302},\r\n{\"type\":32, \"data\":[353,318,7],\"color\":[178,153,107,255],\"score\":0.0533032},\r\n{\"type\":32, \"data\":[411,65,3],\"color\":[194,195,196,255],\"score\":0.0532573},\r\n{\"type\":32, \"data\":[465,313,6],\"color\":[70,85,29,255],\"score\":0.0532199},\r\n{\"type\":32, \"data\":[36,120,13],\"color\":[41,43,46,255],\"score\":0.0531902},\r\n{\"type\":32, \"data\":[337,67,3],\"color\":[129,122,98,255],\"score\":0.0531584},\r\n{\"type\":32, \"data\":[630,448,16],\"color\":[85,86,46,255],\"score\":0.0531279},\r\n{\"type\":32, \"data\":[407,71,4],\"color\":[38,38,72,255],\"score\":0.0530928},\r\n{\"type\":32, \"data\":[400,54,7],\"color\":[54,54,75,255],\"score\":0.0530332},\r\n{\"type\":32, \"data\":[589,348,16],\"color\":[39,58,12,255],\"score\":0.053004},\r\n{\"type\":32, \"data\":[439,66,3],\"color\":[36,36,70,255],\"score\":0.0529642},\r\n{\"type\":32, \"data\":[195,180,17],\"color\":[12,13,47,255],\"score\":0.0529363},\r\n{\"type\":32, \"data\":[206,514,10],\"color\":[82,70,41,255],\"score\":0.0529046},\r\n{\"type\":32, \"data\":[409,50,4],\"color\":[117,121,108,255],\"score\":0.0528678},\r\n{\"type\":32, \"data\":[75,300,11],\"color\":[12,12,49,255],\"score\":0.0528426},\r\n{\"type\":32, \"data\":[574,185,14],\"color\":[36,48,17,255],\"score\":0.0528111},\r\n{\"type\":32, \"data\":[353,51,3],\"color\":[178,179,176,255],\"score\":0.0527674},\r\n{\"type\":32, \"data\":[121,258,10],\"color\":[29,47,21,255],\"score\":0.0527372},\r\n{\"type\":32, \"data\":[325,444,9],\"color\":[97,83,50,255],\"score\":0.0527009},\r\n{\"type\":32, \"data\":[453,37,4],\"color\":[216,216,217,255],\"score\":0.0526673},\r\n{\"type\":32, \"data\":[431,70,3],\"color\":[199,200,192,255],\"score\":0.0526258},\r\n{\"type\":32, \"data\":[313,249,7],\"color\":[108,102,60,255],\"score\":0.0525922},\r\n{\"type\":32, \"data\":[165,173,21],\"color\":[11,10,50,255],\"score\":0.0525601},\r\n{\"type\":32, \"data\":[714,140,32],\"color\":[11,10,50,255],\"score\":0.0525349},\r\n{\"type\":32, \"data\":[370,99,9],\"color\":[24,26,54,255],\"score\":0.0524997},\r\n{\"type\":32, \"data\":[583,388,9],\"color\":[11,10,50,255],\"score\":0.0524731},\r\n{\"type\":32, \"data\":[190,132,19],\"color\":[56,63,25,255],\"score\":0.0524457},\r\n{\"type\":32, \"data\":[317,115,14],\"color\":[57,56,43,255],\"score\":0.0524167},\r\n{\"type\":32, \"data\":[272,70,6],\"color\":[26,23,54,255],\"score\":0.052387},\r\n{\"type\":32, \"data\":[393,44,3],\"color\":[176,177,179,255],\"score\":0.0523552},\r\n{\"type\":32, \"data\":[0,433,32],\"color\":[11,10,50,255],\"score\":0.0523289},\r\n{\"type\":32, \"data\":[502,303,29],\"color\":[11,10,50,255],\"score\":0.052298},\r\n{\"type\":32, \"data\":[442,61,3],\"color\":[194,190,181,255],\"score\":0.0522623},\r\n{\"type\":32, \"data\":[245,94,7],\"color\":[24,23,50,255],\"score\":0.0522265},\r\n{\"type\":32, \"data\":[357,351,7],\"color\":[12,11,49,255],\"score\":0.0521998},\r\n{\"type\":32, \"data\":[332,75,4],\"color\":[13,12,51,255],\"score\":0.0521691},\r\n{\"type\":32, \"data\":[463,85,8],\"color\":[147,136,103,255],\"score\":0.0521346},\r\n{\"type\":32, \"data\":[598,468,3],\"color\":[150,149,142,255],\"score\":0.0521092},\r\n{\"type\":32, \"data\":[547,33,3],\"color\":[217,219,221,255],\"score\":0.0520794},\r\n{\"type\":32, \"data\":[430,76,3],\"color\":[36,35,69,255],\"score\":0.0520507},\r\n{\"type\":32, \"data\":[185,151,4],\"color\":[116,124,103,255],\"score\":0.0520217},\r\n{\"type\":32, \"data\":[438,435,29],\"color\":[11,10,50,255],\"score\":0.0519943},\r\n{\"type\":32, \"data\":[615,373,9],\"color\":[48,62,18,255],\"score\":0.0519687},\r\n{\"type\":32, \"data\":[646,28,32],\"color\":[11,10,50,255],\"score\":0.0519452},\r\n{\"type\":32, \"data\":[91,599,31],\"color\":[11,10,50,255],\"score\":0.0519202},\r\n{\"type\":32, \"data\":[259,472,24],\"color\":[143,102,69,255],\"score\":0.051897},\r\n{\"type\":32, \"data\":[527,76,16],\"color\":[11,10,50,255],\"score\":0.0518545},\r\n{\"type\":32, \"data\":[478,73,5],\"color\":[21,21,58,255],\"score\":0.0518152},\r\n{\"type\":32, \"data\":[202,407,30],\"color\":[11,10,50,255],\"score\":0.0517885},\r\n{\"type\":32, \"data\":[584,533,5],\"color\":[151,155,154,255],\"score\":0.0517539},\r\n{\"type\":32, \"data\":[316,464,12],\"color\":[158,125,83,255],\"score\":0.051728},\r\n{\"type\":32, \"data\":[178,599,24],\"color\":[11,10,50,255],\"score\":0.0517045},\r\n{\"type\":32, \"data\":[651,273,8],\"color\":[76,85,30,255],\"score\":0.0516788},\r\n{\"type\":32, \"data\":[165,247,9],\"color\":[32,46,32,255],\"score\":0.0516537},\r\n{\"type\":32, \"data\":[456,98,10],\"color\":[89,82,61,255],\"score\":0.0516273},\r\n{\"type\":32, \"data\":[362,340,5],\"color\":[156,129,94,255],\"score\":0.051594},\r\n{\"type\":32, \"data\":[398,69,3],\"color\":[211,212,212,255],\"score\":0.051554},\r\n{\"type\":32, \"data\":[374,57,5],\"color\":[39,38,68,255],\"score\":0.0515279},\r\n{\"type\":32, \"data\":[304,68,4],\"color\":[138,127,102,255],\"score\":0.0514936},\r\n{\"type\":32, \"data\":[368,65,4],\"color\":[175,178,185,255],\"score\":0.051458},\r\n{\"type\":32, \"data\":[297,74,5],\"color\":[29,27,55,255],\"score\":0.0514296},\r\n{\"type\":32, \"data\":[563,128,10],\"color\":[15,14,51,255],\"score\":0.0513987},\r\n{\"type\":32, \"data\":[290,299,4],\"color\":[135,115,88,255],\"score\":0.0513656},\r\n{\"type\":32, \"data\":[411,185,24],\"color\":[39,51,15,255],\"score\":0.0513395},\r\n{\"type\":32, \"data\":[401,348,16],\"color\":[11,10,49,255],\"score\":0.0513101},\r\n{\"type\":32, \"data\":[549,304,2],\"color\":[184,194,172,255],\"score\":0.0512737},\r\n{\"type\":32, \"data\":[147,145,2],\"color\":[182,185,175,255],\"score\":0.0512464},\r\n{\"type\":32, \"data\":[533,103,7],\"color\":[133,132,122,255],\"score\":0.0512032},\r\n{\"type\":32, \"data\":[319,271,8],\"color\":[186,146,109,255],\"score\":0.0511671},\r\n{\"type\":32, \"data\":[514,52,6],\"color\":[36,35,64,255],\"score\":0.0511413},\r\n{\"type\":32, \"data\":[325,66,5],\"color\":[124,116,95,255],\"score\":0.0511078},\r\n{\"type\":32, \"data\":[588,523,3],\"color\":[143,146,135,255],\"score\":0.0510876},\r\n{\"type\":32, \"data\":[558,341,5],\"color\":[93,84,59,255],\"score\":0.0510608},\r\n{\"type\":32, \"data\":[549,241,17],\"color\":[13,14,47,255],\"score\":0.0510379},\r\n{\"type\":32, \"data\":[701,290,8],\"color\":[77,83,25,255],\"score\":0.0510081},\r\n{\"type\":32, \"data\":[430,383,7],\"color\":[56,76,20,255],\"score\":0.0509832},\r\n{\"type\":32, \"data\":[399,369,6],\"color\":[56,82,22,255],\"score\":0.0509563},\r\n{\"type\":32, \"data\":[559,560,17],\"color\":[12,12,51,255],\"score\":0.0509315},\r\n{\"type\":32, \"data\":[236,192,2],\"color\":[130,137,120,255],\"score\":0.0509062},\r\n{\"type\":32, \"data\":[420,81,4],\"color\":[14,14,52,255],\"score\":0.0508737},\r\n{\"type\":32, \"data\":[392,65,3],\"color\":[56,56,86,255],\"score\":0.0508496},\r\n{\"type\":32, \"data\":[392,62,2],\"color\":[200,202,199,255],\"score\":0.0508128},\r\n{\"type\":32, \"data\":[268,273,7],\"color\":[118,106,64,255],\"score\":0.0507818},\r\n{\"type\":32, \"data\":[391,404,29],\"color\":[11,10,50,255],\"score\":0.0507543},\r\n{\"type\":32, \"data\":[433,65,3],\"color\":[52,50,79,255],\"score\":0.0507283},\r\n{\"type\":32, \"data\":[330,523,15],\"color\":[103,94,56,255],\"score\":0.050704},\r\n{\"type\":32, \"data\":[135,296,19],\"color\":[18,22,42,255],\"score\":0.0506819},\r\n{\"type\":32, \"data\":[588,234,5],\"color\":[89,100,59,255],\"score\":0.0506583},\r\n{\"type\":32, \"data\":[384,53,3],\"color\":[128,122,115,255],\"score\":0.0506244},\r\n{\"type\":32, \"data\":[376,334,6],\"color\":[87,94,47,255],\"score\":0.050591},\r\n{\"type\":32, \"data\":[90,122,16],\"color\":[54,63,22,255],\"score\":0.0505701},\r\n{\"type\":32, \"data\":[402,66,2],\"color\":[22,22,59,255],\"score\":0.0505416},\r\n{\"type\":32, \"data\":[202,160,3],\"color\":[158,159,147,255],\"score\":0.050507},\r\n{\"type\":32, \"data\":[409,145,9],\"color\":[12,11,49,255],\"score\":0.050483},\r\n{\"type\":32, \"data\":[356,66,2],\"color\":[171,175,176,255],\"score\":0.0504588},\r\n{\"type\":32, \"data\":[125,223,27],\"color\":[11,10,49,255],\"score\":0.0504337},\r\n{\"type\":32, \"data\":[496,87,4],\"color\":[161,163,159,255],\"score\":0.050403},\r\n{\"type\":32, \"data\":[121,144,5],\"color\":[89,95,99,255],\"score\":0.0503818},\r\n{\"type\":32, \"data\":[104,61,32],\"color\":[11,10,50,255],\"score\":0.0503575},\r\n{\"type\":32, \"data\":[325,285,5],\"color\":[103,92,57,255],\"score\":0.0503314},\r\n{\"type\":32, \"data\":[516,153,12],\"color\":[78,74,37,255],\"score\":0.0503049},\r\n{\"type\":32, \"data\":[569,62,28],\"color\":[11,10,50,255],\"score\":0.0502769},\r\n{\"type\":32, \"data\":[380,232,12],\"color\":[75,91,38,255],\"score\":0.050255},\r\n{\"type\":32, \"data\":[395,62,2],\"color\":[223,223,219,255],\"score\":0.050228},\r\n{\"type\":32, \"data\":[251,66,8],\"color\":[22,21,56,255],\"score\":0.0502015},\r\n{\"type\":32, \"data\":[111,148,2],\"color\":[154,164,145,255],\"score\":0.0501718},\r\n{\"type\":32, \"data\":[799,550,32],\"color\":[11,10,50,255],\"score\":0.0501499},\r\n{\"type\":32, \"data\":[315,511,10],\"color\":[156,114,77,255],\"score\":0.050127},\r\n{\"type\":32, \"data\":[579,405,19],\"color\":[12,10,50,255],\"score\":0.0500952},\r\n{\"type\":32, \"data\":[437,212,6],\"color\":[11,13,47,255],\"score\":0.0500708},\r\n{\"type\":32, \"data\":[427,37,3],\"color\":[210,209,213,255],\"score\":0.0500383},\r\n{\"type\":32, \"data\":[689,446,11],\"color\":[69,78,33,255],\"score\":0.0500145},\r\n{\"type\":32, \"data\":[45,248,9],\"color\":[37,56,22,255],\"score\":0.0499938},\r\n{\"type\":32, \"data\":[304,436,4],\"color\":[19,51,70,255],\"score\":0.0499641},\r\n{\"type\":32, \"data\":[384,92,5],\"color\":[22,21,55,255],\"score\":0.0499385},\r\n{\"type\":32, \"data\":[463,62,5],\"color\":[113,111,110,255],\"score\":0.0499109},\r\n{\"type\":32, \"data\":[513,118,7],\"color\":[105,98,56,255],\"score\":0.0498895},\r\n{\"type\":32, \"data\":[402,71,2],\"color\":[208,210,213,255],\"score\":0.0498647},\r\n{\"type\":32, \"data\":[316,203,11],\"color\":[137,123,79,255],\"score\":0.0498453},\r\n{\"type\":32, \"data\":[216,149,13],\"color\":[49,60,20,255],\"score\":0.0498252},\r\n{\"type\":32, \"data\":[550,299,3],\"color\":[130,143,110,255],\"score\":0.0498049},\r\n{\"type\":32, \"data\":[460,225,7],\"color\":[21,29,39,255],\"score\":0.0497841},\r\n{\"type\":32, \"data\":[412,74,2],\"color\":[32,32,68,255],\"score\":0.0497597},\r\n{\"type\":32, \"data\":[447,125,6],\"color\":[116,108,65,255],\"score\":0.0497235},\r\n{\"type\":32, \"data\":[379,65,3],\"color\":[217,218,215,255],\"score\":0.0496842},\r\n{\"type\":32, \"data\":[628,508,5],\"color\":[26,26,50,255],\"score\":0.049662},\r\n{\"type\":32, \"data\":[460,300,7],\"color\":[55,73,20,255],\"score\":0.0496379},\r\n{\"type\":32, \"data\":[263,70,4],\"color\":[12,11,50,255],\"score\":0.0496155},\r\n{\"type\":32, \"data\":[430,57,4],\"color\":[37,36,62,255],\"score\":0.0495928},\r\n{\"type\":32, \"data\":[298,306,4],\"color\":[94,80,81,255],\"score\":0.0495678},\r\n{\"type\":32, \"data\":[138,0,27],\"color\":[11,10,50,255],\"score\":0.0495489},\r\n{\"type\":32, \"data\":[262,104,6],\"color\":[107,96,59,255],\"score\":0.0495253},\r\n{\"type\":32, \"data\":[386,66,4],\"color\":[45,46,81,255],\"score\":0.0495034},\r\n{\"type\":32, \"data\":[605,208,5],\"color\":[43,57,17,255],\"score\":0.0494845},\r\n{\"type\":32, \"data\":[520,360,6],\"color\":[60,72,34,255],\"score\":0.0494597},\r\n{\"type\":32, \"data\":[447,364,13],\"color\":[11,10,50,255],\"score\":0.0494348},\r\n{\"type\":32, \"data\":[539,101,3],\"color\":[38,41,62,255],\"score\":0.0494118},\r\n{\"type\":32, \"data\":[584,565,5],\"color\":[106,115,118,255],\"score\":0.0493847},\r\n{\"type\":32, \"data\":[605,416,10],\"color\":[175,140,110,255],\"score\":0.0493618},\r\n{\"type\":32, \"data\":[247,195,4],\"color\":[90,95,76,255],\"score\":0.049334},\r\n{\"type\":32, \"data\":[468,45,4],\"color\":[158,159,155,255],\"score\":0.0493126},\r\n{\"type\":32, \"data\":[406,78,3],\"color\":[205,198,167,255],\"score\":0.0492878},\r\n{\"type\":32, \"data\":[272,433,12],\"color\":[104,89,54,255],\"score\":0.0492697},\r\n{\"type\":32, \"data\":[356,73,6],\"color\":[14,13,53,255],\"score\":0.0492462},\r\n{\"type\":32, \"data\":[668,370,13],\"color\":[70,78,31,255],\"score\":0.0492269},\r\n{\"type\":32, \"data\":[89,318,5],\"color\":[46,58,30,255],\"score\":0.0492054},\r\n{\"type\":32, \"data\":[372,55,2],\"color\":[135,134,128,255],\"score\":0.0491822},\r\n{\"type\":32, \"data\":[680,510,29],\"color\":[11,10,50,255],\"score\":0.049163},\r\n{\"type\":32, \"data\":[600,489,8],\"color\":[121,105,76,255],\"score\":0.0491428},\r\n{\"type\":32, \"data\":[255,218,8],\"color\":[38,56,16,255],\"score\":0.049119},\r\n{\"type\":32, \"data\":[548,127,3],\"color\":[152,152,143,255],\"score\":0.0490903},\r\n{\"type\":32, \"data\":[60,103,9],\"color\":[81,81,39,255],\"score\":0.0490731},\r\n{\"type\":32, \"data\":[359,84,4],\"color\":[70,67,79,255],\"score\":0.0490558},\r\n{\"type\":32, \"data\":[143,396,26],\"color\":[11,10,50,255],\"score\":0.0490392},\r\n{\"type\":32, \"data\":[128,115,14],\"color\":[55,62,22,255],\"score\":0.0490221},\r\n{\"type\":32, \"data\":[466,76,3],\"color\":[33,31,58,255],\"score\":0.0489958},\r\n{\"type\":32, \"data\":[500,187,20],\"color\":[41,51,19,255],\"score\":0.0489786},\r\n{\"type\":32, \"data\":[536,98,3],\"color\":[98,101,96,255],\"score\":0.048961},\r\n{\"type\":32, \"data\":[447,62,3],\"color\":[176,178,179,255],\"score\":0.048939},\r\n{\"type\":32, \"data\":[304,55,3],\"color\":[129,130,148,255],\"score\":0.0489096},\r\n{\"type\":32, \"data\":[347,192,11],\"color\":[88,97,45,255],\"score\":0.0488884},\r\n{\"type\":32, \"data\":[105,133,2],\"color\":[151,155,140,255],\"score\":0.0488614},\r\n{\"type\":32, \"data\":[721,8,24],\"color\":[11,10,50,255],\"score\":0.0488445},\r\n{\"type\":32, \"data\":[300,302,4],\"color\":[14,12,51,255],\"score\":0.0488244},\r\n{\"type\":32, \"data\":[78,146,14],\"color\":[56,66,26,255],\"score\":0.0488048},\r\n{\"type\":32, \"data\":[477,67,3],\"color\":[44,46,81,255],\"score\":0.0487815},\r\n{\"type\":32, \"data\":[384,72,4],\"color\":[28,28,66,255],\"score\":0.0487475},\r\n{\"type\":32, \"data\":[426,107,6],\"color\":[93,86,56,255],\"score\":0.0487294},\r\n{\"type\":32, \"data\":[545,316,5],\"color\":[90,96,43,255],\"score\":0.0487065},\r\n{\"type\":32, \"data\":[580,546,3],\"color\":[214,217,219,255],\"score\":0.0486878},\r\n{\"type\":32, \"data\":[90,303,10],\"color\":[12,12,49,255],\"score\":0.0486696},\r\n{\"type\":32, \"data\":[478,79,2],\"color\":[192,193,194,255],\"score\":0.0486405},\r\n{\"type\":32, \"data\":[648,398,23],\"color\":[63,73,26,255],\"score\":0.0486182},\r\n{\"type\":32, \"data\":[499,104,8],\"color\":[67,79,58,255],\"score\":0.0485975},\r\n{\"type\":32, \"data\":[470,71,2],\"color\":[214,219,218,255],\"score\":0.0485703},\r\n{\"type\":32, \"data\":[23,245,6],\"color\":[32,47,24,255],\"score\":0.0485511},\r\n{\"type\":32, \"data\":[315,77,4],\"color\":[12,11,51,255],\"score\":0.0485314},\r\n{\"type\":32, \"data\":[458,65,2],\"color\":[33,33,67,255],\"score\":0.0485085},\r\n{\"type\":32, \"data\":[296,107,8],\"color\":[57,57,47,255],\"score\":0.0484899},\r\n{\"type\":32, \"data\":[506,130,6],\"color\":[19,19,51,255],\"score\":0.0484727},\r\n{\"type\":32, \"data\":[564,33,2],\"color\":[149,151,168,255],\"score\":0.0484357},\r\n{\"type\":32, \"data\":[72,484,31],\"color\":[11,10,50,255],\"score\":0.0484189},\r\n{\"type\":32, \"data\":[334,295,6],\"color\":[198,162,122,255],\"score\":0.0484003},\r\n{\"type\":32, \"data\":[374,271,14],\"color\":[110,107,54,255],\"score\":0.0483832},\r\n{\"type\":32, \"data\":[36,119,5],\"color\":[76,81,39,255],\"score\":0.0483653},\r\n{\"type\":32, \"data\":[417,295,12],\"color\":[51,73,17,255],\"score\":0.0483473},\r\n{\"type\":32, \"data\":[451,403,6],\"color\":[59,81,34,255],\"score\":0.0483172},\r\n{\"type\":32, \"data\":[421,48,5],\"color\":[186,188,181,255],\"score\":0.0482981},\r\n{\"type\":32, \"data\":[389,303,8],\"color\":[79,91,32,255],\"score\":0.0482778},\r\n{\"type\":32, \"data\":[549,121,3],\"color\":[17,16,52,255],\"score\":0.0482551},\r\n{\"type\":32, \"data\":[333,407,16],\"color\":[11,10,50,255],\"score\":0.0482381},\r\n{\"type\":32, \"data\":[129,153,10],\"color\":[11,11,49,255],\"score\":0.048197},\r\n{\"type\":32, \"data\":[292,60,4],\"color\":[34,33,65,255],\"score\":0.0481792},\r\n{\"type\":32, \"data\":[462,119,5],\"color\":[11,10,50,255],\"score\":0.0481558},\r\n{\"type\":32, \"data\":[375,74,3],\"color\":[32,31,68,255],\"score\":0.0481309},\r\n{\"type\":32, \"data\":[395,103,4],\"color\":[24,41,41,255],\"score\":0.0481127},\r\n{\"type\":32, \"data\":[350,64,2],\"color\":[169,174,183,255],\"score\":0.0480869},\r\n{\"type\":32, \"data\":[612,515,12],\"color\":[110,94,62,255],\"score\":0.0480669},\r\n{\"type\":32, \"data\":[409,243,25],\"color\":[60,81,24,255],\"score\":0.0480483},\r\n{\"type\":32, \"data\":[373,45,2],\"color\":[96,97,124,255],\"score\":0.0480304},\r\n{\"type\":32, \"data\":[227,490,16],\"color\":[136,95,65,255],\"score\":0.0480175},\r\n{\"type\":32, \"data\":[412,44,3],\"color\":[233,234,235,255],\"score\":0.047987},\r\n{\"type\":32, \"data\":[216,459,14],\"color\":[164,115,79,255],\"score\":0.0479696},\r\n{\"type\":32, \"data\":[379,454,26],\"color\":[11,10,50,255],\"score\":0.047948},\r\n{\"type\":32, \"data\":[159,145,4],\"color\":[187,188,183,255],\"score\":0.047914},\r\n{\"type\":32, \"data\":[243,414,9],\"color\":[11,10,50,255],\"score\":0.047898},\r\n{\"type\":32, \"data\":[282,195,17],\"color\":[49,60,23,255],\"score\":0.0478826},\r\n{\"type\":32, \"data\":[363,159,16],\"color\":[38,43,27,255],\"score\":0.0478675},\r\n{\"type\":32, \"data\":[222,131,10],\"color\":[79,78,41,255],\"score\":0.047848},\r\n{\"type\":32, \"data\":[486,245,19],\"color\":[47,68,20,255],\"score\":0.0478336},\r\n{\"type\":32, \"data\":[300,162,17],\"color\":[43,60,15,255],\"score\":0.0478189},\r\n{\"type\":32, \"data\":[471,56,7],\"color\":[215,219,218,255],\"score\":0.0477879},\r\n{\"type\":32, \"data\":[259,243,7],\"color\":[79,74,40,255],\"score\":0.0477725},\r\n{\"type\":32, \"data\":[280,307,10],\"color\":[11,10,50,255],\"score\":0.0477583},\r\n{\"type\":32, \"data\":[145,67,30],\"color\":[11,10,50,255],\"score\":0.0477427},\r\n{\"type\":32, \"data\":[476,41,2],\"color\":[115,114,129,255],\"score\":0.0477207},\r\n{\"type\":32, \"data\":[425,69,3],\"color\":[202,202,198,255],\"score\":0.047697},\r\n{\"type\":32, \"data\":[596,549,8],\"color\":[121,104,59,255],\"score\":0.0476784},\r\n{\"type\":32, \"data\":[128,140,3],\"color\":[129,135,115,255],\"score\":0.0476587},\r\n{\"type\":32, \"data\":[710,486,32],\"color\":[11,10,50,255],\"score\":0.0476395},\r\n{\"type\":32, \"data\":[596,380,6],\"color\":[152,126,86,255],\"score\":0.047621},\r\n{\"type\":32, \"data\":[463,59,4],\"color\":[156,153,127,255],\"score\":0.0475943},\r\n{\"type\":32, \"data\":[359,82,2],\"color\":[148,143,125,255],\"score\":0.0475789},\r\n{\"type\":32, \"data\":[118,146,2],\"color\":[164,171,160,255],\"score\":0.0475622},\r\n{\"type\":32, \"data\":[344,57,4],\"color\":[54,54,83,255],\"score\":0.0475423},\r\n{\"type\":32, \"data\":[417,68,5],\"color\":[220,221,214,255],\"score\":0.047521},\r\n{\"type\":32, \"data\":[282,81,7],\"color\":[100,91,59,255],\"score\":0.0474991},\r\n{\"type\":32, \"data\":[439,92,4],\"color\":[120,112,72,255],\"score\":0.047481},\r\n{\"type\":32, \"data\":[427,64,4],\"color\":[90,91,110,255],\"score\":0.0474543},\r\n{\"type\":32, \"data\":[281,499,6],\"color\":[196,147,103,255],\"score\":0.0474394},\r\n{\"type\":32, \"data\":[580,506,7],\"color\":[21,26,43,255],\"score\":0.0474254},\r\n{\"type\":32, \"data\":[334,221,13],\"color\":[129,119,75,255],\"score\":0.0474048},\r\n{\"type\":32, \"data\":[427,51,3],\"color\":[168,168,157,255],\"score\":0.0473855},\r\n{\"type\":32, \"data\":[414,92,7],\"color\":[19,18,51,255],\"score\":0.0473655},\r\n{\"type\":32, \"data\":[586,485,5],\"color\":[32,36,33,255],\"score\":0.047344},\r\n{\"type\":32, \"data\":[317,54,3],\"color\":[157,158,174,255],\"score\":0.0473049},\r\n{\"type\":32, \"data\":[256,341,8],\"color\":[47,65,23,255],\"score\":0.0472873},\r\n{\"type\":32, \"data\":[548,112,3],\"color\":[208,207,203,255],\"score\":0.047258},\r\n{\"type\":32, \"data\":[272,61,3],\"color\":[133,127,106,255],\"score\":0.0472316},\r\n{\"type\":32, \"data\":[509,230,15],\"color\":[46,69,15,255],\"score\":0.0472149},\r\n{\"type\":32, \"data\":[37,223,5],\"color\":[54,79,32,255],\"score\":0.0471955},\r\n{\"type\":32, \"data\":[317,284,5],\"color\":[105,92,56,255],\"score\":0.047175},\r\n{\"type\":32, \"data\":[392,55,3],\"color\":[131,126,104,255],\"score\":0.0471539},\r\n{\"type\":32, \"data\":[309,278,4],\"color\":[103,91,58,255],\"score\":0.0471375},\r\n{\"type\":32, \"data\":[482,59,2],\"color\":[102,103,126,255],\"score\":0.04712},\r\n{\"type\":32, \"data\":[301,78,4],\"color\":[17,16,52,255],\"score\":0.0471037},\r\n{\"type\":32, \"data\":[368,59,3],\"color\":[18,17,55,255],\"score\":0.0470816},\r\n{\"type\":32, \"data\":[258,94,5],\"color\":[21,19,52,255],\"score\":0.0470558},\r\n{\"type\":32, \"data\":[565,114,2],\"color\":[142,150,135,255],\"score\":0.0470322},\r\n{\"type\":32, \"data\":[563,347,5],\"color\":[101,91,57,255],\"score\":0.0470088},\r\n{\"type\":32, \"data\":[547,310,1],\"color\":[168,177,155,255],\"score\":0.0469901},\r\n{\"type\":32, \"data\":[560,430,33],\"color\":[11,10,50,255],\"score\":0.0469762},\r\n{\"type\":32, \"data\":[428,92,3],\"color\":[92,94,77,255],\"score\":0.0469526},\r\n{\"type\":32, \"data\":[341,93,8],\"color\":[96,92,48,255],\"score\":0.0469317},\r\n{\"type\":32, \"data\":[413,69,3],\"color\":[222,223,214,255],\"score\":0.0469099},\r\n{\"type\":32, \"data\":[414,78,2],\"color\":[196,202,171,255],\"score\":0.0468828},\r\n{\"type\":32, \"data\":[753,340,14],\"color\":[95,89,44,255],\"score\":0.0468681},\r\n{\"type\":32, \"data\":[306,92,11],\"color\":[110,100,61,255],\"score\":0.0468489},\r\n{\"type\":32, \"data\":[315,259,4],\"color\":[194,155,113,255],\"score\":0.0468331},\r\n{\"type\":32, \"data\":[592,469,4],\"color\":[53,61,33,255],\"score\":0.0468183},\r\n{\"type\":32, \"data\":[32,313,24],\"color\":[11,10,50,255],\"score\":0.0468019},\r\n{\"type\":32, \"data\":[431,62,2],\"color\":[171,170,161,255],\"score\":0.0467804},\r\n{\"type\":32, \"data\":[385,11,30],\"color\":[11,10,50,255],\"score\":0.0467666},\r\n{\"type\":32, \"data\":[310,539,8],\"color\":[67,81,34,255],\"score\":0.0467484},\r\n{\"type\":32, \"data\":[597,472,2],\"color\":[173,171,170,255],\"score\":0.046731},\r\n{\"type\":32, \"data\":[597,238,5],\"color\":[100,100,49,255],\"score\":0.0467138},\r\n{\"type\":32, \"data\":[253,363,14],\"color\":[11,11,49,255],\"score\":0.0466982},\r\n{\"type\":32, \"data\":[507,52,6],\"color\":[23,23,58,255],\"score\":0.0466831},\r\n{\"type\":32, \"data\":[372,73,3],\"color\":[26,26,61,255],\"score\":0.0466685},\r\n{\"type\":32, \"data\":[216,341,3],\"color\":[45,82,70,255],\"score\":0.0466529},\r\n{\"type\":32, \"data\":[528,36,6],\"color\":[209,209,210,255],\"score\":0.0466167},\r\n{\"type\":32, \"data\":[164,236,10],\"color\":[22,27,43,255],\"score\":0.0466014},\r\n{\"type\":32, \"data\":[305,183,9],\"color\":[69,88,32,255],\"score\":0.0465841},\r\n{\"type\":32, \"data\":[535,42,2],\"color\":[31,30,66,255],\"score\":0.046567},\r\n{\"type\":32, \"data\":[474,396,19],\"color\":[13,13,49,255],\"score\":0.0465545},\r\n{\"type\":32, \"data\":[492,50,4],\"color\":[146,155,147,255],\"score\":0.0465388},\r\n{\"type\":32, \"data\":[55,63,31],\"color\":[11,10,50,255],\"score\":0.0465225},\r\n{\"type\":32, \"data\":[467,70,2],\"color\":[240,241,237,255],\"score\":0.0465028},\r\n{\"type\":32, \"data\":[735,573,32],\"color\":[11,10,50,255],\"score\":0.0464899},\r\n{\"type\":32, \"data\":[41,275,7],\"color\":[45,66,15,255],\"score\":0.0464757},\r\n{\"type\":32, \"data\":[388,316,4],\"color\":[16,16,49,255],\"score\":0.0464576},\r\n{\"type\":32, \"data\":[514,54,2],\"color\":[126,129,125,255],\"score\":0.0464336},\r\n{\"type\":32, \"data\":[797,336,18],\"color\":[11,10,50,255],\"score\":0.0464199},\r\n{\"type\":32, \"data\":[135,136,6],\"color\":[66,74,33,255],\"score\":0.0463978},\r\n{\"type\":32, \"data\":[499,70,13],\"color\":[11,10,50,255],\"score\":0.0463815},\r\n{\"type\":32, \"data\":[623,388,5],\"color\":[98,85,51,255],\"score\":0.0463634},\r\n{\"type\":32, \"data\":[302,234,8],\"color\":[111,103,62,255],\"score\":0.0463466},\r\n{\"type\":32, \"data\":[201,108,12],\"color\":[43,47,30,255],\"score\":0.0463315},\r\n{\"type\":32, \"data\":[397,44,5],\"color\":[179,180,182,255],\"score\":0.0463141},\r\n{\"type\":32, \"data\":[242,193,4],\"color\":[85,90,68,255],\"score\":0.0462994},\r\n{\"type\":32, \"data\":[281,33,25],\"color\":[11,10,50,255],\"score\":0.046276},\r\n{\"type\":32, \"data\":[50,128,4],\"color\":[22,23,48,255],\"score\":0.0462621},\r\n{\"type\":32, \"data\":[434,83,6],\"color\":[206,193,149,255],\"score\":0.0462422},\r\n{\"type\":32, \"data\":[637,460,9],\"color\":[99,99,58,255],\"score\":0.0462256},\r\n{\"type\":32, \"data\":[601,574,4],\"color\":[120,130,122,255],\"score\":0.0462058},\r\n{\"type\":32, \"data\":[290,491,4],\"color\":[244,212,155,255],\"score\":0.0461893},\r\n{\"type\":32, \"data\":[226,183,4],\"color\":[75,86,62,255],\"score\":0.0461704},\r\n{\"type\":32, \"data\":[265,265,8],\"color\":[105,96,54,255],\"score\":0.0461541},\r\n{\"type\":32, \"data\":[349,58,4],\"color\":[28,28,64,255],\"score\":0.0461283},\r\n{\"type\":32, \"data\":[85,171,10],\"color\":[11,10,49,255],\"score\":0.0461159},\r\n{\"type\":32, \"data\":[604,373,6],\"color\":[75,70,43,255],\"score\":0.0460974},\r\n{\"type\":32, \"data\":[468,320,5],\"color\":[67,79,26,255],\"score\":0.04608},\r\n{\"type\":32, \"data\":[304,62,3],\"color\":[21,20,56,255],\"score\":0.0460653},\r\n{\"type\":32, \"data\":[450,64,3],\"color\":[75,78,97,255],\"score\":0.0460479},\r\n{\"type\":32, \"data\":[468,65,2],\"color\":[40,40,71,255],\"score\":0.0460169},\r\n{\"type\":32, \"data\":[399,62,2],\"color\":[207,207,208,255],\"score\":0.0460023},\r\n{\"type\":32, \"data\":[492,92,4],\"color\":[132,122,97,255],\"score\":0.0459883},\r\n{\"type\":32, \"data\":[503,95,2],\"color\":[220,219,212,255],\"score\":0.045972},\r\n{\"type\":32, \"data\":[346,284,8],\"color\":[147,125,90,255],\"score\":0.0459563},\r\n{\"type\":32, \"data\":[598,221,9],\"color\":[11,11,49,255],\"score\":0.0459403},\r\n{\"type\":32, \"data\":[246,180,13],\"color\":[35,49,14,255],\"score\":0.0459254},\r\n{\"type\":32, \"data\":[359,327,6],\"color\":[170,149,108,255],\"score\":0.0459105},\r\n{\"type\":32, \"data\":[478,27,3],\"color\":[15,14,53,255],\"score\":0.0458909},\r\n{\"type\":32, \"data\":[265,80,6],\"color\":[107,96,59,255],\"score\":0.0458765},\r\n{\"type\":32, \"data\":[261,205,8],\"color\":[39,50,19,255],\"score\":0.0458611},\r\n{\"type\":32, \"data\":[483,346,4],\"color\":[61,86,36,255],\"score\":0.0458441},\r\n{\"type\":32, \"data\":[451,191,19],\"color\":[42,54,14,255],\"score\":0.045831},\r\n{\"type\":32, \"data\":[479,51,8],\"color\":[209,213,212,255],\"score\":0.0458101},\r\n{\"type\":32, \"data\":[549,58,15],\"color\":[11,10,50,255],\"score\":0.0457963},\r\n{\"type\":32, \"data\":[495,66,11],\"color\":[11,10,50,255],\"score\":0.0457834},\r\n{\"type\":32, \"data\":[285,73,3],\"color\":[14,13,51,255],\"score\":0.0457673},\r\n{\"type\":32, \"data\":[568,364,2],\"color\":[175,157,118,255],\"score\":0.0457473},\r\n{\"type\":32, \"data\":[148,159,12],\"color\":[11,10,50,255],\"score\":0.0457324},\r\n{\"type\":32, \"data\":[318,302,4],\"color\":[89,95,43,255],\"score\":0.04572},\r\n{\"type\":32, \"data\":[529,288,17],\"color\":[11,10,50,255],\"score\":0.0457036},\r\n{\"type\":32, \"data\":[500,114,4],\"color\":[15,27,57,255],\"score\":0.0456874},\r\n{\"type\":32, \"data\":[398,83,3],\"color\":[145,143,125,255],\"score\":0.0456688},\r\n{\"type\":32, \"data\":[557,34,2],\"color\":[209,210,217,255],\"score\":0.0456426},\r\n{\"type\":32, \"data\":[469,175,9],\"color\":[13,13,49,255],\"score\":0.0456271},\r\n{\"type\":32, \"data\":[307,290,6],\"color\":[183,151,109,255],\"score\":0.0456139},\r\n{\"type\":32, \"data\":[345,78,2],\"color\":[129,125,136,255],\"score\":0.0455975},\r\n{\"type\":32, \"data\":[97,103,11],\"color\":[72,73,34,255],\"score\":0.0455806},\r\n{\"type\":32, \"data\":[315,63,5],\"color\":[23,22,59,255],\"score\":0.0455632},\r\n{\"type\":32, \"data\":[390,50,3],\"color\":[26,25,60,255],\"score\":0.0455469},\r\n{\"type\":32, \"data\":[598,258,15],\"color\":[72,88,25,255],\"score\":0.0455323},\r\n{\"type\":32, \"data\":[600,566,7],\"color\":[73,74,49,255],\"score\":0.0455111},\r\n{\"type\":32, \"data\":[581,536,3],\"color\":[185,189,188,255],\"score\":0.0454905},\r\n{\"type\":32, \"data\":[158,126,13],\"color\":[53,61,20,255],\"score\":0.0454754},\r\n{\"type\":32, \"data\":[407,50,3],\"color\":[105,110,97,255],\"score\":0.0454621},\r\n{\"type\":32, \"data\":[542,40,4],\"color\":[109,110,131,255],\"score\":0.0454455},\r\n{\"type\":32, \"data\":[300,478,10],\"color\":[197,150,102,255],\"score\":0.0454319},\r\n{\"type\":32, \"data\":[591,205,7],\"color\":[37,49,22,255],\"score\":0.045416},\r\n{\"type\":32, \"data\":[563,389,19],\"color\":[11,10,50,255],\"score\":0.0454018},\r\n{\"type\":32, \"data\":[370,292,7],\"color\":[130,115,75,255],\"score\":0.0453889},\r\n{\"type\":32, \"data\":[409,78,3],\"color\":[206,202,176,255],\"score\":0.0453693},\r\n{\"type\":32, \"data\":[1,267,28],\"color\":[11,10,49,255],\"score\":0.0453568},\r\n{\"type\":32, \"data\":[600,285,13],\"color\":[42,64,12,255],\"score\":0.0453447},\r\n{\"type\":32, \"data\":[724,376,15],\"color\":[93,86,47,255],\"score\":0.045334},\r\n{\"type\":32, \"data\":[311,330,13],\"color\":[14,12,50,255],\"score\":0.0453175},\r\n{\"type\":32, \"data\":[359,87,3],\"color\":[11,10,50,255],\"score\":0.0453025},\r\n{\"type\":32, \"data\":[369,360,9],\"color\":[63,81,23,255],\"score\":0.0452857},\r\n{\"type\":32, \"data\":[79,103,11],\"color\":[79,80,37,255],\"score\":0.0452712},\r\n{\"type\":32, \"data\":[294,441,6],\"color\":[118,102,64,255],\"score\":0.0452531},\r\n{\"type\":32, \"data\":[530,125,11],\"color\":[83,77,55,255],\"score\":0.0452399},\r\n{\"type\":32, \"data\":[354,65,2],\"color\":[185,190,192,255],\"score\":0.0452194},\r\n{\"type\":32, \"data\":[377,66,4],\"color\":[224,225,221,255],\"score\":0.0452036},\r\n{\"type\":32, \"data\":[221,513,6],\"color\":[96,81,51,255],\"score\":0.045191},\r\n{\"type\":32, \"data\":[29,111,6],\"color\":[14,14,49,255],\"score\":0.0451774},\r\n{\"type\":32, \"data\":[622,357,23],\"color\":[43,63,13,255],\"score\":0.0451602},\r\n{\"type\":32, \"data\":[327,498,8],\"color\":[133,100,70,255],\"score\":0.0451468},\r\n{\"type\":32, \"data\":[113,271,13],\"color\":[35,59,12,255],\"score\":0.0451309},\r\n{\"type\":32, \"data\":[553,227,8],\"color\":[28,41,30,255],\"score\":0.045116},\r\n{\"type\":32, \"data\":[363,73,5],\"color\":[16,15,54,255],\"score\":0.0451029},\r\n{\"type\":32, \"data\":[285,290,3],\"color\":[126,109,74,255],\"score\":0.0450848},\r\n{\"type\":32, \"data\":[291,542,11],\"color\":[12,11,49,255],\"score\":0.0450685},\r\n{\"type\":32, \"data\":[486,49,2],\"color\":[141,150,132,255],\"score\":0.0450531},\r\n{\"type\":32, \"data\":[151,207,4],\"color\":[70,93,32,255],\"score\":0.0450412},\r\n{\"type\":32, \"data\":[414,36,2],\"color\":[104,105,130,255],\"score\":0.0450261},\r\n{\"type\":32, \"data\":[427,97,4],\"color\":[16,15,51,255],\"score\":0.0450116},\r\n{\"type\":32, \"data\":[549,345,7],\"color\":[11,10,50,255],\"score\":0.0449973},\r\n{\"type\":32, \"data\":[384,323,2],\"color\":[100,99,65,255],\"score\":0.0449855},\r\n{\"type\":32, \"data\":[356,522,5],\"color\":[43,49,23,255],\"score\":0.0449751},\r\n{\"type\":32, \"data\":[748,380,10],\"color\":[73,79,29,255],\"score\":0.0449594},\r\n{\"type\":32, \"data\":[120,190,32],\"color\":[11,10,50,255],\"score\":0.0449461},\r\n{\"type\":32, \"data\":[720,338,16],\"color\":[74,79,31,255],\"score\":0.0449346},\r\n{\"type\":32, \"data\":[494,122,5],\"color\":[56,69,58,255],\"score\":0.0449206},\r\n{\"type\":32, \"data\":[524,22,7],\"color\":[11,10,50,255],\"score\":0.0449092},\r\n{\"type\":32, \"data\":[104,120,12],\"color\":[52,62,20,255],\"score\":0.0448966},\r\n{\"type\":32, \"data\":[490,84,4],\"color\":[181,184,187,255],\"score\":0.0448747},\r\n{\"type\":32, \"data\":[268,354,7],\"color\":[25,34,31,255],\"score\":0.0448623},\r\n{\"type\":32, \"data\":[311,26,26],\"color\":[11,10,50,255],\"score\":0.0448471},\r\n{\"type\":32, \"data\":[288,67,3],\"color\":[129,124,102,255],\"score\":0.0448338},\r\n{\"type\":32, \"data\":[288,244,10],\"color\":[135,117,78,255],\"score\":0.0448205},\r\n{\"type\":32, \"data\":[87,155,3],\"color\":[101,112,71,255],\"score\":0.0447994},\r\n{\"type\":32, \"data\":[744,289,18],\"color\":[11,10,50,255],\"score\":0.0447863},\r\n{\"type\":32, \"data\":[308,259,4],\"color\":[111,100,62,255],\"score\":0.0447728},\r\n{\"type\":32, \"data\":[491,352,4],\"color\":[61,78,31,255],\"score\":0.0447593},\r\n{\"type\":32, \"data\":[197,275,27],\"color\":[11,10,49,255],\"score\":0.044747},\r\n{\"type\":32, \"data\":[286,470,9],\"color\":[160,113,76,255],\"score\":0.0447351},\r\n{\"type\":32, \"data\":[299,406,14],\"color\":[11,10,50,255],\"score\":0.0447222},\r\n{\"type\":32, \"data\":[344,527,10],\"color\":[78,83,42,255],\"score\":0.0447101},\r\n{\"type\":32, \"data\":[525,194,18],\"color\":[38,50,17,255],\"score\":0.0446997},\r\n{\"type\":32, \"data\":[260,305,23],\"color\":[11,10,50,255],\"score\":0.044689},\r\n{\"type\":32, \"data\":[336,84,6],\"color\":[135,126,84,255],\"score\":0.0446781},\r\n{\"type\":32, \"data\":[316,438,9],\"color\":[110,94,58,255],\"score\":0.0446681},\r\n{\"type\":32, \"data\":[276,97,5],\"color\":[16,15,51,255],\"score\":0.0446492},\r\n{\"type\":32, \"data\":[262,536,19],\"color\":[11,10,50,255],\"score\":0.044635},\r\n{\"type\":32, \"data\":[472,414,5],\"color\":[43,57,40,255],\"score\":0.0446213},\r\n{\"type\":32, \"data\":[434,45,3],\"color\":[78,74,69,255],\"score\":0.0446043},\r\n{\"type\":32, \"data\":[135,301,8],\"color\":[29,43,28,255],\"score\":0.0445907},\r\n{\"type\":32, \"data\":[395,74,2],\"color\":[37,38,73,255],\"score\":0.0445685},\r\n{\"type\":32, \"data\":[325,578,31],\"color\":[11,11,49,255],\"score\":0.0445554},\r\n{\"type\":32, \"data\":[283,191,6],\"color\":[70,74,44,255],\"score\":0.0445442},\r\n{\"type\":32, \"data\":[221,177,5],\"color\":[60,75,46,255],\"score\":0.0445329},\r\n{\"type\":32, \"data\":[392,66,2],\"color\":[20,19,57,255],\"score\":0.044521},\r\n{\"type\":32, \"data\":[437,239,4],\"color\":[15,17,48,255],\"score\":0.0445063},\r\n{\"type\":32, \"data\":[347,536,5],\"color\":[51,52,26,255],\"score\":0.0444945},\r\n{\"type\":32, \"data\":[359,52,3],\"color\":[131,128,118,255],\"score\":0.0444806},\r\n{\"type\":32, \"data\":[608,478,9],\"color\":[105,93,61,255],\"score\":0.0444693},\r\n{\"type\":32, \"data\":[352,484,14],\"color\":[95,85,55,255],\"score\":0.0444549},\r\n{\"type\":32, \"data\":[440,78,2],\"color\":[193,186,149,255],\"score\":0.0444341},\r\n{\"type\":32, \"data\":[307,300,4],\"color\":[169,141,103,255],\"score\":0.0444202},\r\n{\"type\":32, \"data\":[511,76,13],\"color\":[12,11,51,255],\"score\":0.0444064},\r\n{\"type\":32, \"data\":[143,138,1],\"color\":[174,171,166,255],\"score\":0.0443967},\r\n{\"type\":32, \"data\":[82,315,4],\"color\":[63,79,24,255],\"score\":0.0443819},\r\n{\"type\":32, \"data\":[448,70,2],\"color\":[238,235,226,255],\"score\":0.0443618},\r\n{\"type\":32, \"data\":[345,332,4],\"color\":[97,92,53,255],\"score\":0.0443475},\r\n{\"type\":32, \"data\":[316,421,6],\"color\":[75,72,36,255],\"score\":0.044335},\r\n{\"type\":32, \"data\":[236,92,7],\"color\":[11,10,50,255],\"score\":0.0443194},\r\n{\"type\":32, \"data\":[455,48,7],\"color\":[117,114,94,255],\"score\":0.0443064},\r\n{\"type\":32, \"data\":[184,485,8],\"color\":[158,112,80,255],\"score\":0.0442947},\r\n{\"type\":32, \"data\":[274,135,15],\"color\":[45,51,21,255],\"score\":0.0442846},\r\n{\"type\":32, \"data\":[105,235,23],\"color\":[11,10,50,255],\"score\":0.0442713},\r\n{\"type\":32, \"data\":[539,108,3],\"color\":[194,192,182,255],\"score\":0.0442506},\r\n{\"type\":32, \"data\":[32,104,3],\"color\":[73,74,48,255],\"score\":0.044236},\r\n{\"type\":32, \"data\":[406,292,14],\"color\":[52,72,18,255],\"score\":0.0442243},\r\n{\"type\":32, \"data\":[581,551,4],\"color\":[188,196,197,255],\"score\":0.0442056},\r\n{\"type\":32, \"data\":[542,9,22],\"color\":[11,10,50,255],\"score\":0.0441872},\r\n{\"type\":32, \"data\":[304,198,7],\"color\":[114,110,62,255],\"score\":0.0441742},\r\n{\"type\":32, \"data\":[584,94,24],\"color\":[11,10,50,255],\"score\":0.0441647},\r\n{\"type\":32, \"data\":[402,150,6],\"color\":[12,11,49,255],\"score\":0.0441503},\r\n{\"type\":32, \"data\":[349,120,14],\"color\":[76,72,36,255],\"score\":0.0441383},\r\n{\"type\":32, \"data\":[167,254,6],\"color\":[46,66,23,255],\"score\":0.0441235},\r\n{\"type\":32, \"data\":[442,76,3],\"color\":[84,82,93,255],\"score\":0.0441105},\r\n{\"type\":32, \"data\":[311,307,4],\"color\":[168,146,106,255],\"score\":0.0440963},\r\n{\"type\":32, \"data\":[211,310,7],\"color\":[12,14,46,255],\"score\":0.0440868},\r\n{\"type\":32, \"data\":[703,419,8],\"color\":[56,68,24,255],\"score\":0.0440743},\r\n{\"type\":32, \"data\":[337,441,7],\"color\":[16,18,44,255],\"score\":0.0440617},\r\n{\"type\":32, \"data\":[607,393,10],\"color\":[173,141,99,255],\"score\":0.0440462},\r\n{\"type\":32, \"data\":[489,141,5],\"color\":[83,75,40,255],\"score\":0.0440314},\r\n{\"type\":32, \"data\":[297,292,3],\"color\":[236,209,156,255],\"score\":0.0440149},\r\n{\"type\":32, \"data\":[547,135,3],\"color\":[23,21,53,255],\"score\":0.0440007},\r\n{\"type\":32, \"data\":[430,19,16],\"color\":[11,10,50,255],\"score\":0.0439845},\r\n{\"type\":32, \"data\":[444,66,2],\"color\":[27,27,62,255],\"score\":0.0439661},\r\n{\"type\":32, \"data\":[197,304,5],\"color\":[28,47,20,255],\"score\":0.0439549},\r\n{\"type\":32, \"data\":[290,74,4],\"color\":[16,15,53,255],\"score\":0.0439392},\r\n{\"type\":32, \"data\":[551,362,13],\"color\":[13,12,49,255],\"score\":0.0439266},\r\n{\"type\":32, \"data\":[364,59,3],\"color\":[17,16,55,255],\"score\":0.0439106},\r\n{\"type\":32, \"data\":[619,553,11],\"color\":[12,12,50,255],\"score\":0.0438999},\r\n{\"type\":32, \"data\":[181,504,8],\"color\":[105,97,54,255],\"score\":0.0438854},\r\n{\"type\":32, \"data\":[164,436,26],\"color\":[11,10,50,255],\"score\":0.0438706},\r\n{\"type\":32, \"data\":[473,74,2],\"color\":[14,13,51,255],\"score\":0.0438587},\r\n{\"type\":32, \"data\":[518,45,2],\"color\":[129,129,137,255],\"score\":0.0438433},\r\n{\"type\":32, \"data\":[377,322,8],\"color\":[140,129,81,255],\"score\":0.0438318},\r\n{\"type\":32, \"data\":[226,329,5],\"color\":[71,91,39,255],\"score\":0.0438172},\r\n{\"type\":32, \"data\":[643,253,9],\"color\":[52,73,18,255],\"score\":0.0438077},\r\n{\"type\":32, \"data\":[349,63,1],\"color\":[203,206,214,255],\"score\":0.043798},\r\n{\"type\":32, \"data\":[409,67,1],\"color\":[22,22,60,255],\"score\":0.0437738},\r\n{\"type\":32, \"data\":[553,331,5],\"color\":[84,83,49,255],\"score\":0.0437572},\r\n{\"type\":32, \"data\":[250,104,5],\"color\":[90,84,48,255],\"score\":0.0437471},\r\n{\"type\":32, \"data\":[381,100,3],\"color\":[107,106,57,255],\"score\":0.0437364},\r\n{\"type\":32, \"data\":[180,153,3],\"color\":[162,171,162,255],\"score\":0.0437115},\r\n{\"type\":32, \"data\":[435,75,2],\"color\":[32,31,67,255],\"score\":0.0436923},\r\n{\"type\":32, \"data\":[361,42,8],\"color\":[12,11,51,255],\"score\":0.0436786},\r\n{\"type\":32, \"data\":[500,91,4],\"color\":[133,129,114,255],\"score\":0.0436641},\r\n{\"type\":32, \"data\":[223,354,10],\"color\":[11,10,50,255],\"score\":0.0436513},\r\n{\"type\":32, \"data\":[601,162,20],\"color\":[11,10,50,255],\"score\":0.0436398},\r\n{\"type\":32, \"data\":[215,441,5],\"color\":[119,102,64,255],\"score\":0.0436279},\r\n{\"type\":32, \"data\":[130,101,6],\"color\":[79,76,40,255],\"score\":0.0436156},\r\n{\"type\":32, \"data\":[179,138,10],\"color\":[55,62,23,255],\"score\":0.0436059},\r\n{\"type\":32, \"data\":[531,362,2],\"color\":[73,90,35,255],\"score\":0.043594},\r\n{\"type\":32, \"data\":[450,229,7],\"color\":[53,73,21,255],\"score\":0.0435823},\r\n{\"type\":32, \"data\":[630,247,6],\"color\":[102,105,40,255],\"score\":0.0435702},\r\n{\"type\":32, \"data\":[567,24,9],\"color\":[12,11,51,255],\"score\":0.0435573},\r\n{\"type\":32, \"data\":[273,79,5],\"color\":[102,93,65,255],\"score\":0.0435437},\r\n{\"type\":32, \"data\":[528,555,32],\"color\":[11,10,50,255],\"score\":0.0435339},\r\n{\"type\":32, \"data\":[322,57,4],\"color\":[25,25,62,255],\"score\":0.0435216},\r\n{\"type\":32, \"data\":[655,191,32],\"color\":[11,10,50,255],\"score\":0.0435121},\r\n{\"type\":32, \"data\":[38,251,4],\"color\":[14,17,49,255],\"score\":0.043499},\r\n{\"type\":32, \"data\":[588,374,6],\"color\":[143,122,84,255],\"score\":0.043487},\r\n{\"type\":32, \"data\":[245,83,4],\"color\":[104,93,60,255],\"score\":0.043478},\r\n{\"type\":32, \"data\":[60,216,21],\"color\":[11,10,50,255],\"score\":0.0434675},\r\n{\"type\":32, \"data\":[278,70,4],\"color\":[21,19,54,255],\"score\":0.0434557},\r\n{\"type\":32, \"data\":[734,314,10],\"color\":[56,74,18,255],\"score\":0.0434436},\r\n{\"type\":32, \"data\":[524,139,5],\"color\":[15,14,50,255],\"score\":0.0434325},\r\n{\"type\":32, \"data\":[177,518,5],\"color\":[34,40,34,255],\"score\":0.0434219},\r\n{\"type\":32, \"data\":[521,95,3],\"color\":[154,157,151,255],\"score\":0.0434109},\r\n{\"type\":32, \"data\":[352,71,5],\"color\":[28,27,63,255],\"score\":0.0433967},\r\n{\"type\":32, \"data\":[467,128,2],\"color\":[114,106,84,255],\"score\":0.043381},\r\n{\"type\":32, \"data\":[500,428,29],\"color\":[11,10,50,255],\"score\":0.0433707},\r\n{\"type\":32, \"data\":[63,308,4],\"color\":[52,69,21,255],\"score\":0.0433598},\r\n{\"type\":32, \"data\":[203,539,16],\"color\":[11,10,50,255],\"score\":0.0433489},\r\n{\"type\":32, \"data\":[593,462,3],\"color\":[60,62,38,255],\"score\":0.0433393},\r\n{\"type\":32, \"data\":[194,155,2],\"color\":[178,182,175,255],\"score\":0.0433187},\r\n{\"type\":32, \"data\":[554,124,4],\"color\":[19,18,52,255],\"score\":0.043301},\r\n{\"type\":32, \"data\":[368,500,5],\"color\":[38,46,27,255],\"score\":0.0432894},\r\n{\"type\":32, \"data\":[381,77,2],\"color\":[163,161,160,255],\"score\":0.0432797},\r\n{\"type\":32, \"data\":[616,539,3],\"color\":[104,90,49,255],\"score\":0.0432647},\r\n{\"type\":32, \"data\":[381,67,2],\"color\":[191,192,190,255],\"score\":0.0432538},\r\n{\"type\":32, \"data\":[377,208,16],\"color\":[67,87,29,255],\"score\":0.043243},\r\n{\"type\":32, \"data\":[398,78,3],\"color\":[214,217,210,255],\"score\":0.0432311},\r\n{\"type\":32, \"data\":[788,242,32],\"color\":[11,10,50,255],\"score\":0.0432219},\r\n{\"type\":32, \"data\":[475,343,4],\"color\":[52,69,31,255],\"score\":0.043208},\r\n{\"type\":32, \"data\":[455,82,4],\"color\":[137,127,101,255],\"score\":0.0431952},\r\n{\"type\":32, \"data\":[257,64,2],\"color\":[103,97,86,255],\"score\":0.0431808},\r\n{\"type\":32, \"data\":[29,120,4],\"color\":[82,86,43,255],\"score\":0.0431669},\r\n{\"type\":32, \"data\":[549,294,2],\"color\":[127,150,123,255],\"score\":0.0431538},\r\n{\"type\":32, \"data\":[197,157,3],\"color\":[95,103,89,255],\"score\":0.0431363},\r\n{\"type\":32, \"data\":[395,69,2],\"color\":[223,222,218,255],\"score\":0.0431241},\r\n{\"type\":32, \"data\":[460,75,2],\"color\":[23,22,56,255],\"score\":0.043104},\r\n{\"type\":32, \"data\":[358,267,13],\"color\":[121,115,67,255],\"score\":0.0430954},\r\n{\"type\":32, \"data\":[308,57,2],\"color\":[196,193,181,255],\"score\":0.0430795},\r\n{\"type\":32, \"data\":[474,79,2],\"color\":[172,172,171,255],\"score\":0.0430657},\r\n{\"type\":32, \"data\":[480,8,22],\"color\":[11,10,50,255],\"score\":0.0430493},\r\n{\"type\":32, \"data\":[705,289,3],\"color\":[135,113,47,255],\"score\":0.0430364},\r\n{\"type\":32, \"data\":[318,232,6],\"color\":[83,78,42,255],\"score\":0.0430241},\r\n{\"type\":32, \"data\":[393,93,5],\"color\":[108,100,66,255],\"score\":0.043009},\r\n{\"type\":32, \"data\":[552,37,1],\"color\":[57,56,89,255],\"score\":0.0429935},\r\n{\"type\":32, \"data\":[343,269,6],\"color\":[94,88,53,255],\"score\":0.0429843},\r\n{\"type\":32, \"data\":[204,86,13],\"color\":[11,10,50,255],\"score\":0.0429742},\r\n{\"type\":32, \"data\":[508,97,2],\"color\":[217,218,213,255],\"score\":0.0429616},\r\n{\"type\":32, \"data\":[593,574,3],\"color\":[113,126,134,255],\"score\":0.0429462},\r\n{\"type\":32, \"data\":[588,186,7],\"color\":[37,51,14,255],\"score\":0.0429358},\r\n{\"type\":32, \"data\":[204,163,1],\"color\":[189,195,186,255],\"score\":0.0429262},\r\n{\"type\":32, \"data\":[564,253,5],\"color\":[70,96,39,255],\"score\":0.0429107},\r\n{\"type\":32, \"data\":[338,74,3],\"color\":[14,13,53,255],\"score\":0.0428972},\r\n{\"type\":32, \"data\":[341,234,8],\"color\":[132,120,74,255],\"score\":0.0428866},\r\n{\"type\":32, \"data\":[185,104,5],\"color\":[62,68,34,255],\"score\":0.0428766},\r\n{\"type\":32, \"data\":[61,160,6],\"color\":[11,10,50,255],\"score\":0.0428662},\r\n{\"type\":32, \"data\":[382,52,2],\"color\":[157,153,145,255],\"score\":0.0428555},\r\n{\"type\":32, \"data\":[314,137,10],\"color\":[35,38,31,255],\"score\":0.042846},\r\n{\"type\":32, \"data\":[506,111,3],\"color\":[18,40,65,255],\"score\":0.0428353},\r\n{\"type\":32, \"data\":[635,437,16],\"color\":[71,77,36,255],\"score\":0.0428263},\r\n{\"type\":32, \"data\":[447,54,3],\"color\":[149,151,142,255],\"score\":0.0428095},\r\n{\"type\":32, \"data\":[303,256,4],\"color\":[175,152,111,255],\"score\":0.0427998},\r\n{\"type\":32, \"data\":[776,289,27],\"color\":[11,10,50,255],\"score\":0.0427897},\r\n{\"type\":32, \"data\":[146,139,2],\"color\":[145,146,130,255],\"score\":0.042779},\r\n{\"type\":32, \"data\":[440,70,2],\"color\":[218,219,209,255],\"score\":0.0427579},\r\n{\"type\":32, \"data\":[35,599,12],\"color\":[11,10,50,255],\"score\":0.0427506},\r\n{\"type\":32, \"data\":[599,586,8],\"color\":[11,10,50,255],\"score\":0.0427425},\r\n{\"type\":32, \"data\":[383,81,4],\"color\":[104,101,82,255],\"score\":0.0427302},\r\n{\"type\":32, \"data\":[281,414,4],\"color\":[58,70,37,255],\"score\":0.0427191},\r\n{\"type\":32, \"data\":[571,366,4],\"color\":[151,131,95,255],\"score\":0.0427056},\r\n{\"type\":32, \"data\":[452,76,3],\"color\":[20,19,55,255],\"score\":0.0426831},\r\n{\"type\":32, \"data\":[144,274,18],\"color\":[12,12,48,255],\"score\":0.0426731},\r\n{\"type\":32, \"data\":[40,232,4],\"color\":[50,71,34,255],\"score\":0.0426641},\r\n{\"type\":32, \"data\":[272,400,11],\"color\":[11,11,50,255],\"score\":0.042654},\r\n{\"type\":32, \"data\":[595,42,28],\"color\":[11,10,50,255],\"score\":0.0426468},\r\n{\"type\":32, \"data\":[359,55,2],\"color\":[47,47,67,255],\"score\":0.0426357},\r\n{\"type\":32, \"data\":[231,229,16],\"color\":[11,10,50,255],\"score\":0.0426254},\r\n{\"type\":32, \"data\":[284,435,6],\"color\":[104,93,59,255],\"score\":0.0426121},\r\n{\"type\":32, \"data\":[287,108,7],\"color\":[78,77,44,255],\"score\":0.0425993},\r\n{\"type\":32, \"data\":[406,42,4],\"color\":[230,230,232,255],\"score\":0.0425843},\r\n{\"type\":32, \"data\":[603,428,9],\"color\":[155,125,98,255],\"score\":0.0425754},\r\n{\"type\":32, \"data\":[467,94,4],\"color\":[83,75,53,255],\"score\":0.0425628},\r\n{\"type\":32, \"data\":[480,166,9],\"color\":[11,11,49,255],\"score\":0.0425505},\r\n{\"type\":32, \"data\":[425,43,3],\"color\":[99,98,114,255],\"score\":0.0425305},\r\n{\"type\":32, \"data\":[450,393,5],\"color\":[76,108,33,255],\"score\":0.0425194},\r\n{\"type\":32, \"data\":[259,409,3],\"color\":[37,91,74,255],\"score\":0.0425114},\r\n{\"type\":32, \"data\":[323,115,6],\"color\":[78,76,46,255],\"score\":0.0425018},\r\n{\"type\":32, \"data\":[396,342,14],\"color\":[11,10,50,255],\"score\":0.04249},\r\n{\"type\":32, \"data\":[137,144,2],\"color\":[140,146,126,255],\"score\":0.0424777},\r\n{\"type\":32, \"data\":[545,40,1],\"color\":[23,22,57,255],\"score\":0.042468},\r\n{\"type\":32, \"data\":[136,131,2],\"color\":[123,129,95,255],\"score\":0.0424562},\r\n{\"type\":32, \"data\":[480,65,2],\"color\":[24,25,63,255],\"score\":0.0424429},\r\n{\"type\":32, \"data\":[594,493,1],\"color\":[202,192,184,255],\"score\":0.0424297},\r\n{\"type\":32, \"data\":[409,5,31],\"color\":[11,10,50,255],\"score\":0.0424185},\r\n{\"type\":32, \"data\":[498,38,9],\"color\":[228,228,229,255],\"score\":0.042398},\r\n{\"type\":32, \"data\":[235,433,11],\"color\":[120,100,63,255],\"score\":0.0423858},\r\n{\"type\":32, \"data\":[796,170,27],\"color\":[11,10,50,255],\"score\":0.0423772},\r\n{\"type\":32, \"data\":[435,71,2],\"color\":[226,225,207,255],\"score\":0.0423645},\r\n{\"type\":32, \"data\":[493,304,24],\"color\":[11,10,50,255],\"score\":0.0423512},\r\n{\"type\":32, \"data\":[326,106,4],\"color\":[24,24,49,255],\"score\":0.0423407},\r\n{\"type\":32, \"data\":[157,197,4],\"color\":[58,82,19,255],\"score\":0.0423281},\r\n{\"type\":32, \"data\":[514,342,14],\"color\":[11,10,50,255],\"score\":0.0423203},\r\n{\"type\":32, \"data\":[438,75,2],\"color\":[35,34,68,255],\"score\":0.0423088},\r\n{\"type\":32, \"data\":[646,315,27],\"color\":[34,57,10,255],\"score\":0.0423003},\r\n{\"type\":32, \"data\":[436,125,5],\"color\":[36,35,50,255],\"score\":0.0422892},\r\n{\"type\":32, \"data\":[360,104,4],\"color\":[27,28,52,255],\"score\":0.0422789},\r\n{\"type\":32, \"data\":[399,93,7],\"color\":[100,93,61,255],\"score\":0.0422703},\r\n{\"type\":32, \"data\":[556,295,6],\"color\":[67,79,30,255],\"score\":0.0422632},\r\n{\"type\":32, \"data\":[284,335,23],\"color\":[12,12,48,255],\"score\":0.0422543},\r\n{\"type\":32, \"data\":[331,56,8],\"color\":[12,11,51,255],\"score\":0.0422445},\r\n{\"type\":32, \"data\":[514,268,18],\"color\":[11,10,50,255],\"score\":0.0422359},\r\n{\"type\":32, \"data\":[550,187,12],\"color\":[39,49,15,255],\"score\":0.0422273},\r\n{\"type\":32, \"data\":[476,93,4],\"color\":[85,79,50,255],\"score\":0.0422186},\r\n{\"type\":32, \"data\":[373,346,9],\"color\":[88,93,45,255],\"score\":0.0422079},\r\n{\"type\":32, \"data\":[58,144,10],\"color\":[65,76,26,255],\"score\":0.0421968},\r\n{\"type\":32, \"data\":[764,365,7],\"color\":[12,11,49,255],\"score\":0.0421872},\r\n{\"type\":32, \"data\":[86,276,8],\"color\":[39,64,13,255],\"score\":0.0421766},\r\n{\"type\":32, \"data\":[529,33,4],\"color\":[206,206,208,255],\"score\":0.0421654},\r\n{\"type\":32, \"data\":[456,274,23],\"color\":[53,77,16,255],\"score\":0.0421565},\r\n{\"type\":32, \"data\":[469,76,2],\"color\":[23,24,59,255],\"score\":0.0421486},\r\n{\"type\":32, \"data\":[530,16,14],\"color\":[11,10,50,255],\"score\":0.0421369},\r\n{\"type\":32, \"data\":[657,384,8],\"color\":[47,64,13,255],\"score\":0.0421279},\r\n{\"type\":32, \"data\":[437,61,2],\"color\":[191,188,167,255],\"score\":0.0421141},\r\n{\"type\":32, \"data\":[127,137,3],\"color\":[67,74,32,255],\"score\":0.0421031},\r\n{\"type\":32, \"data\":[328,321,7],\"color\":[70,80,31,255],\"score\":0.0420913},\r\n{\"type\":32, \"data\":[277,224,5],\"color\":[75,77,35,255],\"score\":0.0420825},\r\n{\"type\":32, \"data\":[343,78,1],\"color\":[210,203,195,255],\"score\":0.0420714},\r\n{\"type\":32, \"data\":[23,119,2],\"color\":[86,93,56,255],\"score\":0.0420612},\r\n{\"type\":32, \"data\":[298,67,3],\"color\":[155,145,116,255],\"score\":0.0420471},\r\n{\"type\":32, \"data\":[154,145,2],\"color\":[207,209,201,255],\"score\":0.0420323},\r\n{\"type\":32, \"data\":[372,67,3],\"color\":[208,209,205,255],\"score\":0.0420223},\r\n{\"type\":32, \"data\":[406,85,3],\"color\":[13,11,49,255],\"score\":0.0420083},\r\n{\"type\":32, \"data\":[624,266,12],\"color\":[47,66,15,255],\"score\":0.0420014},\r\n{\"type\":32, \"data\":[440,226,5],\"color\":[21,28,40,255],\"score\":0.0419932},\r\n{\"type\":32, \"data\":[391,84,3],\"color\":[19,19,55,255],\"score\":0.04198},\r\n{\"type\":32, \"data\":[328,229,3],\"color\":[178,159,107,255],\"score\":0.0419662},\r\n{\"type\":32, \"data\":[770,324,6],\"color\":[107,100,55,255],\"score\":0.0419558},\r\n{\"type\":32, \"data\":[293,31,24],\"color\":[11,10,50,255],\"score\":0.0419452},\r\n{\"type\":32, \"data\":[440,41,2],\"color\":[152,152,162,255],\"score\":0.0419327},\r\n{\"type\":32, \"data\":[453,105,8],\"color\":[94,88,65,255],\"score\":0.0419243},\r\n{\"type\":32, \"data\":[560,237,10],\"color\":[11,10,49,255],\"score\":0.0419115},\r\n{\"type\":32, \"data\":[347,293,6],\"color\":[191,157,114,255],\"score\":0.0418993},\r\n{\"type\":32, \"data\":[653,559,4],\"color\":[46,47,47,255],\"score\":0.0418874},\r\n{\"type\":32, \"data\":[490,123,4],\"color\":[81,78,54,255],\"score\":0.0418771},\r\n{\"type\":32, \"data\":[598,529,7],\"color\":[110,93,57,255],\"score\":0.0418694},\r\n{\"type\":32, \"data\":[623,364,9],\"color\":[57,70,20,255],\"score\":0.0418619},\r\n{\"type\":32, \"data\":[537,246,18],\"color\":[11,10,49,255],\"score\":0.0418533},\r\n{\"type\":32, \"data\":[598,459,3],\"color\":[154,139,125,255],\"score\":0.0418461},\r\n{\"type\":32, \"data\":[382,47,4],\"color\":[13,12,52,255],\"score\":0.0418291},\r\n{\"type\":32, \"data\":[203,140,15],\"color\":[49,59,20,255],\"score\":0.0418138},\r\n{\"type\":32, \"data\":[44,240,6],\"color\":[44,68,18,255],\"score\":0.041803},\r\n{\"type\":32, \"data\":[542,309,3],\"color\":[13,12,50,255],\"score\":0.0417929},\r\n{\"type\":32, \"data\":[277,59,2],\"color\":[147,144,142,255],\"score\":0.0417754},\r\n{\"type\":32, \"data\":[615,438,3],\"color\":[170,141,110,255],\"score\":0.0417649},\r\n{\"type\":32, \"data\":[427,116,11],\"color\":[81,75,53,255],\"score\":0.041756},\r\n{\"type\":32, \"data\":[322,274,4],\"color\":[152,125,91,255],\"score\":0.041747},\r\n{\"type\":32, \"data\":[619,246,7],\"color\":[83,99,30,255],\"score\":0.0417395},\r\n{\"type\":32, \"data\":[268,468,9],\"color\":[125,96,65,255],\"score\":0.0417304},\r\n{\"type\":32, \"data\":[442,78,2],\"color\":[167,163,136,255],\"score\":0.0417149},\r\n{\"type\":32, \"data\":[213,516,5],\"color\":[62,54,35,255],\"score\":0.0417088},\r\n{\"type\":32, \"data\":[317,184,5],\"color\":[84,95,43,255],\"score\":0.0417},\r\n{\"type\":32, \"data\":[375,120,13],\"color\":[75,71,38,255],\"score\":0.041692},\r\n{\"type\":32, \"data\":[697,388,18],\"color\":[89,89,45,255],\"score\":0.0416835},\r\n{\"type\":32, \"data\":[567,137,15],\"color\":[11,10,50,255],\"score\":0.0416748},\r\n{\"type\":32, \"data\":[108,150,2],\"color\":[95,106,97,255],\"score\":0.0416605},\r\n{\"type\":32, \"data\":[675,479,8],\"color\":[12,11,49,255],\"score\":0.0416499},\r\n{\"type\":32, \"data\":[306,505,6],\"color\":[193,141,96,255],\"score\":0.0416412},\r\n{\"type\":32, \"data\":[582,561,3],\"color\":[102,112,113,255],\"score\":0.0416302},\r\n{\"type\":32, \"data\":[261,452,9],\"color\":[153,114,76,255],\"score\":0.0416219},\r\n{\"type\":32, \"data\":[558,116,3],\"color\":[164,164,154,255],\"score\":0.0416063},\r\n{\"type\":32, \"data\":[481,80,2],\"color\":[203,205,204,255],\"score\":0.0415902},\r\n{\"type\":32, \"data\":[346,71,6],\"color\":[27,26,61,255],\"score\":0.0415801},\r\n{\"type\":32, \"data\":[57,297,4],\"color\":[52,83,42,255],\"score\":0.0415692},\r\n{\"type\":32, \"data\":[415,49,2],\"color\":[138,140,121,255],\"score\":0.0415604},\r\n{\"type\":32, \"data\":[548,291,3],\"color\":[109,131,98,255],\"score\":0.0415511},\r\n{\"type\":32, \"data\":[361,310,4],\"color\":[111,103,67,255],\"score\":0.0415424},\r\n{\"type\":32, \"data\":[590,243,3],\"color\":[25,39,36,255],\"score\":0.0415331},\r\n{\"type\":32, \"data\":[615,409,9],\"color\":[172,137,101,255],\"score\":0.0415191},\r\n{\"type\":32, \"data\":[430,65,2],\"color\":[18,17,54,255],\"score\":0.0414991},\r\n{\"type\":32, \"data\":[395,66,1],\"color\":[13,12,52,255],\"score\":0.0414802},\r\n{\"type\":32, \"data\":[427,65,2],\"color\":[22,21,58,255],\"score\":0.0414682},\r\n{\"type\":32, \"data\":[331,93,6],\"color\":[101,96,52,255],\"score\":0.0414582},\r\n{\"type\":32, \"data\":[301,515,5],\"color\":[158,115,79,255],\"score\":0.0414488},\r\n{\"type\":32, \"data\":[462,64,2],\"color\":[49,47,77,255],\"score\":0.0414363},\r\n{\"type\":32, \"data\":[611,574,4],\"color\":[78,82,60,255],\"score\":0.0414186},\r\n{\"type\":32, \"data\":[505,47,1],\"color\":[116,123,121,255],\"score\":0.0414119},\r\n{\"type\":32, \"data\":[221,437,4],\"color\":[108,98,58,255],\"score\":0.0414025},\r\n{\"type\":32, \"data\":[319,243,3],\"color\":[179,160,110,255],\"score\":0.0413946},\r\n{\"type\":32, \"data\":[70,389,18],\"color\":[11,10,50,255],\"score\":0.0413882},\r\n{\"type\":32, \"data\":[390,61,1],\"color\":[216,219,219,255],\"score\":0.0413765},\r\n{\"type\":32, \"data\":[421,180,17],\"color\":[39,50,15,255],\"score\":0.0413677},\r\n{\"type\":32, \"data\":[593,450,3],\"color\":[102,89,60,255],\"score\":0.0413564},\r\n{\"type\":32, \"data\":[255,65,2],\"color\":[112,108,104,255],\"score\":0.0413432},\r\n{\"type\":32, \"data\":[205,124,5],\"color\":[79,79,41,255],\"score\":0.0413348},\r\n{\"type\":32, \"data\":[381,58,4],\"color\":[18,17,56,255],\"score\":0.041326},\r\n{\"type\":32, \"data\":[589,379,2],\"color\":[189,163,127,255],\"score\":0.0413187},\r\n{\"type\":32, \"data\":[472,44,2],\"color\":[226,227,230,255],\"score\":0.0413081},\r\n{\"type\":32, \"data\":[236,305,11],\"color\":[11,10,50,255],\"score\":0.0412988},\r\n{\"type\":32, \"data\":[483,90,4],\"color\":[120,108,81,255],\"score\":0.041288},\r\n{\"type\":32, \"data\":[705,270,10],\"color\":[11,10,50,255],\"score\":0.0412782},\r\n{\"type\":32, \"data\":[271,218,7],\"color\":[114,106,63,255],\"score\":0.0412689},\r\n{\"type\":32, \"data\":[311,70,4],\"color\":[94,84,65,255],\"score\":0.0412584},\r\n{\"type\":32, \"data\":[145,103,7],\"color\":[74,72,36,255],\"score\":0.0412514},\r\n{\"type\":32, \"data\":[335,543,6],\"color\":[36,52,20,255],\"score\":0.0412383},\r\n{\"type\":32, \"data\":[608,457,8],\"color\":[126,107,76,255],\"score\":0.0412291},\r\n{\"type\":32, \"data\":[96,144,4],\"color\":[124,130,106,255],\"score\":0.0412153},\r\n{\"type\":32, \"data\":[445,166,6],\"color\":[11,11,49,255],\"score\":0.0412077},\r\n{\"type\":32, \"data\":[532,43,1],\"color\":[11,10,50,255],\"score\":0.041198},\r\n{\"type\":32, \"data\":[419,41,2],\"color\":[59,58,86,255],\"score\":0.0411832},\r\n{\"type\":32, \"data\":[605,388,9],\"color\":[168,136,93,255],\"score\":0.0411725},\r\n{\"type\":32, \"data\":[366,81,4],\"color\":[92,91,80,255],\"score\":0.0411595},\r\n{\"type\":32, \"data\":[589,362,3],\"color\":[86,77,42,255],\"score\":0.0411512},\r\n{\"type\":32, \"data\":[451,61,2],\"color\":[177,174,164,255],\"score\":0.0411374},\r\n{\"type\":32, \"data\":[110,132,3],\"color\":[105,110,83,255],\"score\":0.0411217},\r\n{\"type\":32, \"data\":[460,60,4],\"color\":[155,149,125,255],\"score\":0.0411128},\r\n{\"type\":32, \"data\":[301,312,3],\"color\":[154,128,101,255],\"score\":0.0410993},\r\n{\"type\":32, \"data\":[277,119,5],\"color\":[23,24,40,255],\"score\":0.0410898},\r\n{\"type\":32, \"data\":[290,521,2],\"color\":[36,37,51,255],\"score\":0.0410812},\r\n{\"type\":32, \"data\":[127,141,2],\"color\":[176,182,174,255],\"score\":0.0410669},\r\n{\"type\":32, \"data\":[690,306,17],\"color\":[44,65,11,255],\"score\":0.0410603},\r\n{\"type\":32, \"data\":[336,102,6],\"color\":[50,52,43,255],\"score\":0.0410531},\r\n{\"type\":32, \"data\":[487,93,3],\"color\":[105,97,73,255],\"score\":0.0410456},\r\n{\"type\":32, \"data\":[297,59,2],\"color\":[18,17,55,255],\"score\":0.0410385},\r\n{\"type\":32, \"data\":[467,241,3],\"color\":[20,26,40,255],\"score\":0.0410292},\r\n{\"type\":32, \"data\":[561,34,1],\"color\":[222,224,230,255],\"score\":0.041016},\r\n{\"type\":32, \"data\":[581,160,13],\"color\":[11,10,50,255],\"score\":0.0410076},\r\n{\"type\":32, \"data\":[110,142,5],\"color\":[45,59,18,255],\"score\":0.0409943},\r\n{\"type\":32, \"data\":[544,110,2],\"color\":[221,222,221,255],\"score\":0.0409807},\r\n{\"type\":32, \"data\":[29,250,3],\"color\":[56,75,24,255],\"score\":0.0409736},\r\n{\"type\":32, \"data\":[387,54,3],\"color\":[123,114,99,255],\"score\":0.0409623},\r\n{\"type\":32, \"data\":[356,325,2],\"color\":[212,193,155,255],\"score\":0.0409549},\r\n{\"type\":32, \"data\":[190,153,2],\"color\":[135,144,138,255],\"score\":0.0409466},\r\n{\"type\":32, \"data\":[606,465,5],\"color\":[101,88,59,255],\"score\":0.0409393},\r\n{\"type\":32, \"data\":[548,45,3],\"color\":[11,10,50,255],\"score\":0.0409271},\r\n{\"type\":32, \"data\":[402,74,1],\"color\":[32,31,66,255],\"score\":0.0409081},\r\n{\"type\":32, \"data\":[470,78,1],\"color\":[154,168,159,255],\"score\":0.0409},\r\n{\"type\":32, \"data\":[47,106,6],\"color\":[80,83,40,255],\"score\":0.0408912},\r\n{\"type\":32, \"data\":[585,558,3],\"color\":[92,90,60,255],\"score\":0.040882},\r\n{\"type\":32, \"data\":[60,255,8],\"color\":[11,10,49,255],\"score\":0.0408727},\r\n{\"type\":32, \"data\":[236,497,18],\"color\":[131,94,63,255],\"score\":0.040865},\r\n{\"type\":32, \"data\":[309,61,3],\"color\":[17,16,54,255],\"score\":0.0408506},\r\n{\"type\":32, \"data\":[259,342,6],\"color\":[48,66,20,255],\"score\":0.0408412},\r\n{\"type\":32, \"data\":[486,70,8],\"color\":[11,10,50,255],\"score\":0.0408306},\r\n{\"type\":32, \"data\":[319,69,2],\"color\":[138,130,99,255],\"score\":0.0408168},\r\n{\"type\":32, \"data\":[543,43,1],\"color\":[189,190,200,255],\"score\":0.040808},\r\n{\"type\":32, \"data\":[254,395,12],\"color\":[11,10,50,255],\"score\":0.0408005},\r\n{\"type\":32, \"data\":[741,424,14],\"color\":[11,10,50,255],\"score\":0.0407938},\r\n{\"type\":32, \"data\":[162,211,8],\"color\":[15,17,47,255],\"score\":0.0407849},\r\n{\"type\":32, \"data\":[696,352,9],\"color\":[58,70,25,255],\"score\":0.0407768},\r\n{\"type\":32, \"data\":[464,98,2],\"color\":[21,20,50,255],\"score\":0.0407663},\r\n{\"type\":32, \"data\":[305,317,2],\"color\":[126,104,79,255],\"score\":0.0407523},\r\n{\"type\":32, \"data\":[151,142,2],\"color\":[71,75,43,255],\"score\":0.0407352},\r\n{\"type\":32, \"data\":[163,145,3],\"color\":[204,203,202,255],\"score\":0.0407189},\r\n{\"type\":32, \"data\":[407,96,4],\"color\":[81,79,53,255],\"score\":0.0407104},\r\n{\"type\":32, \"data\":[276,108,6],\"color\":[79,77,41,255],\"score\":0.040702},\r\n{\"type\":32, \"data\":[423,214,4],\"color\":[16,21,44,255],\"score\":0.0406934},\r\n{\"type\":32, \"data\":[529,100,3],\"color\":[169,171,166,255],\"score\":0.0406816},\r\n{\"type\":32, \"data\":[590,549,4],\"color\":[132,119,82,255],\"score\":0.0406729},\r\n{\"type\":32, \"data\":[263,512,3],\"color\":[99,85,55,255],\"score\":0.0406642},\r\n{\"type\":32, \"data\":[434,69,1],\"color\":[234,236,230,255],\"score\":0.0406565},\r\n{\"type\":32, \"data\":[427,49,2],\"color\":[211,212,212,255],\"score\":0.0406478},\r\n{\"type\":32, \"data\":[188,155,2],\"color\":[53,69,70,255],\"score\":0.0406381},\r\n{\"type\":32, \"data\":[361,52,2],\"color\":[151,147,116,255],\"score\":0.0406263},\r\n{\"type\":32, \"data\":[378,94,4],\"color\":[11,10,50,255],\"score\":0.0406146},\r\n{\"type\":32, \"data\":[474,186,7],\"color\":[14,14,48,255],\"score\":0.0406052},\r\n{\"type\":32, \"data\":[534,31,2],\"color\":[155,153,165,255],\"score\":0.040596},\r\n{\"type\":32, \"data\":[473,61,3],\"color\":[201,208,210,255],\"score\":0.0405839},\r\n{\"type\":32, \"data\":[460,135,2],\"color\":[104,100,67,255],\"score\":0.0405712},\r\n{\"type\":32, \"data\":[420,45,3],\"color\":[214,216,218,255],\"score\":0.0405559},\r\n{\"type\":32, \"data\":[336,191,7],\"color\":[110,108,60,255],\"score\":0.0405477},\r\n{\"type\":32, \"data\":[284,59,2],\"color\":[149,142,118,255],\"score\":0.040539},\r\n{\"type\":32, \"data\":[470,70,3],\"color\":[212,216,218,255],\"score\":0.040525},\r\n{\"type\":32, \"data\":[617,450,7],\"color\":[93,85,53,255],\"score\":0.0405182},\r\n{\"type\":32, \"data\":[403,63,2],\"color\":[175,180,180,255],\"score\":0.0405096},\r\n{\"type\":32, \"data\":[166,517,11],\"color\":[11,10,49,255],\"score\":0.0405004},\r\n{\"type\":32, \"data\":[368,54,3],\"color\":[125,119,100,255],\"score\":0.0404883},\r\n{\"type\":32, \"data\":[539,202,5],\"color\":[19,27,33,255],\"score\":0.0404799},\r\n{\"type\":32, \"data\":[233,2,21],\"color\":[11,10,50,255],\"score\":0.0404734},\r\n{\"type\":32, \"data\":[282,284,3],\"color\":[112,99,59,255],\"score\":0.0404567},\r\n{\"type\":32, \"data\":[519,102,6],\"color\":[99,92,68,255],\"score\":0.0404472},\r\n{\"type\":32, \"data\":[188,513,7],\"color\":[111,104,56,255],\"score\":0.0404397},\r\n{\"type\":32, \"data\":[459,411,4],\"color\":[46,66,25,255],\"score\":0.0404304},\r\n{\"type\":32, \"data\":[423,228,11],\"color\":[54,77,18,255],\"score\":0.0404218},\r\n{\"type\":32, \"data\":[558,120,2],\"color\":[103,102,88,255],\"score\":0.0404096},\r\n{\"type\":32, \"data\":[266,259,4],\"color\":[74,71,35,255],\"score\":0.0404016},\r\n{\"type\":32, \"data\":[552,494,29],\"color\":[11,10,50,255],\"score\":0.0403951},\r\n{\"type\":32, \"data\":[393,269,9],\"color\":[75,90,31,255],\"score\":0.0403883},\r\n{\"type\":32, \"data\":[217,108,10],\"color\":[50,51,28,255],\"score\":0.0403819},\r\n{\"type\":32, \"data\":[330,81,2],\"color\":[164,154,116,255],\"score\":0.0403653},\r\n{\"type\":32, \"data\":[245,206,8],\"color\":[15,19,38,255],\"score\":0.0403563},\r\n{\"type\":32, \"data\":[484,115,6],\"color\":[11,11,50,255],\"score\":0.0403454},\r\n{\"type\":32, \"data\":[43,120,4],\"color\":[72,74,39,255],\"score\":0.040338},\r\n{\"type\":32, \"data\":[481,132,6],\"color\":[15,15,50,255],\"score\":0.0403316},\r\n{\"type\":32, \"data\":[343,50,2],\"color\":[104,106,127,255],\"score\":0.0403112},\r\n{\"type\":32, \"data\":[273,278,4],\"color\":[125,111,69,255],\"score\":0.0403027},\r\n{\"type\":32, \"data\":[617,529,5],\"color\":[18,16,50,255],\"score\":0.0402919},\r\n{\"type\":32, \"data\":[309,57,1],\"color\":[227,224,201,255],\"score\":0.0402827},\r\n{\"type\":32, \"data\":[495,131,6],\"color\":[15,14,50,255],\"score\":0.0402714},\r\n{\"type\":32, \"data\":[390,533,32],\"color\":[11,10,50,255],\"score\":0.0402647},\r\n{\"type\":32, \"data\":[528,223,8],\"color\":[40,66,11,255],\"score\":0.0402576},\r\n{\"type\":32, \"data\":[360,99,4],\"color\":[66,77,55,255],\"score\":0.0402498},\r\n{\"type\":32, \"data\":[50,171,3],\"color\":[43,48,53,255],\"score\":0.0402427},\r\n{\"type\":32, \"data\":[416,77,2],\"color\":[177,184,171,255],\"score\":0.040232},\r\n{\"type\":32, \"data\":[286,295,2],\"color\":[99,90,63,255],\"score\":0.0402239},\r\n{\"type\":32, \"data\":[350,69,1],\"color\":[122,126,138,255],\"score\":0.0402115},\r\n{\"type\":32, \"data\":[355,247,12],\"color\":[115,112,68,255],\"score\":0.0402024},\r\n{\"type\":32, \"data\":[13,190,32],\"color\":[11,10,50,255],\"score\":0.0401947},\r\n{\"type\":32, \"data\":[280,38,20],\"color\":[11,10,50,255],\"score\":0.0401849},\r\n{\"type\":32, \"data\":[430,39,4],\"color\":[195,195,201,255],\"score\":0.0401749},\r\n{\"type\":32, \"data\":[447,24,8],\"color\":[11,10,50,255],\"score\":0.0401661},\r\n{\"type\":32, \"data\":[231,521,6],\"color\":[12,10,50,255],\"score\":0.0401573},\r\n{\"type\":32, \"data\":[795,592,19],\"color\":[11,10,50,255],\"score\":0.0401517},\r\n{\"type\":32, \"data\":[446,349,8],\"color\":[11,11,49,255],\"score\":0.0401443},\r\n{\"type\":32, \"data\":[442,82,2],\"color\":[19,19,50,255],\"score\":0.0401308},\r\n{\"type\":32, \"data\":[649,589,28],\"color\":[11,10,50,255],\"score\":0.0401248},\r\n{\"type\":32, \"data\":[378,73,2],\"color\":[11,11,50,255],\"score\":0.0401104},\r\n{\"type\":32, \"data\":[478,481,25],\"color\":[11,10,50,255],\"score\":0.0401044},\r\n{\"type\":32, \"data\":[591,572,4],\"color\":[106,119,124,255],\"score\":0.0400914},\r\n{\"type\":32, \"data\":[258,492,14],\"color\":[143,94,64,255],\"score\":0.0400838},\r\n{\"type\":32, \"data\":[611,314,28],\"color\":[33,56,10,255],\"score\":0.0400778},\r\n{\"type\":32, \"data\":[481,83,1],\"color\":[31,41,57,255],\"score\":0.0400671},\r\n{\"type\":32, \"data\":[311,56,1],\"color\":[229,232,217,255],\"score\":0.0400559},\r\n{\"type\":32, \"data\":[243,100,4],\"color\":[70,69,44,255],\"score\":0.0400459},\r\n{\"type\":32, \"data\":[609,440,5],\"color\":[120,98,72,255],\"score\":0.0400383},\r\n{\"type\":32, \"data\":[283,518,5],\"color\":[112,91,56,255],\"score\":0.0400305},\r\n{\"type\":32, \"data\":[592,485,2],\"color\":[150,148,148,255],\"score\":0.0400221},\r\n{\"type\":32, \"data\":[598,231,1],\"color\":[139,131,84,255],\"score\":0.0400114},\r\n{\"type\":32, \"data\":[222,66,25],\"color\":[11,10,50,255],\"score\":0.0400045},\r\n{\"type\":32, \"data\":[553,150,3],\"color\":[89,86,59,255],\"score\":0.0399962},\r\n{\"type\":32, \"data\":[592,498,4],\"color\":[94,90,73,255],\"score\":0.0399901},\r\n{\"type\":32, \"data\":[340,515,11],\"color\":[90,87,48,255],\"score\":0.0399814},\r\n{\"type\":32, \"data\":[402,78,3],\"color\":[215,214,191,255],\"score\":0.0399726},\r\n{\"type\":32, \"data\":[422,94,5],\"color\":[15,14,52,255],\"score\":0.039962},\r\n{\"type\":32, \"data\":[148,139,1],\"color\":[184,185,178,255],\"score\":0.0399547},\r\n{\"type\":32, \"data\":[171,469,5],\"color\":[156,110,79,255],\"score\":0.0399411},\r\n{\"type\":32, \"data\":[294,138,4],\"color\":[20,25,37,255],\"score\":0.0399342},\r\n{\"type\":32, \"data\":[115,283,7],\"color\":[46,71,16,255],\"score\":0.0399271},\r\n{\"type\":32, \"data\":[360,90,5],\"color\":[12,11,50,255],\"score\":0.0399186},\r\n{\"type\":32, \"data\":[462,76,2],\"color\":[33,30,60,255],\"score\":0.0399114},\r\n{\"type\":32, \"data\":[571,299,12],\"color\":[44,65,12,255],\"score\":0.0399027},\r\n{\"type\":32, \"data\":[588,517,4],\"color\":[114,119,111,255],\"score\":0.0398885},\r\n{\"type\":32, \"data\":[49,113,4],\"color\":[30,33,44,255],\"score\":0.0398826},\r\n{\"type\":32, \"data\":[567,360,2],\"color\":[126,109,83,255],\"score\":0.0398732},\r\n{\"type\":32, \"data\":[30,129,5],\"color\":[14,16,50,255],\"score\":0.0398633},\r\n{\"type\":32, \"data\":[118,101,7],\"color\":[85,80,41,255],\"score\":0.0398543},\r\n{\"type\":32, \"data\":[347,437,15],\"color\":[11,10,50,255],\"score\":0.039845},\r\n{\"type\":32, \"data\":[719,346,5],\"color\":[96,89,47,255],\"score\":0.039838},\r\n{\"type\":32, \"data\":[412,356,5],\"color\":[11,11,50,255],\"score\":0.03983},\r\n{\"type\":32, \"data\":[226,170,8],\"color\":[47,63,26,255],\"score\":0.0398219},\r\n{\"type\":32, \"data\":[351,105,3],\"color\":[27,31,49,255],\"score\":0.0398146},\r\n{\"type\":32, \"data\":[400,74,1],\"color\":[32,31,68,255],\"score\":0.0398057},\r\n{\"type\":32, \"data\":[586,477,7],\"color\":[30,34,39,255],\"score\":0.0397947},\r\n{\"type\":32, \"data\":[417,75,1],\"color\":[39,39,73,255],\"score\":0.0397858},\r\n{\"type\":32, \"data\":[541,34,3],\"color\":[223,224,225,255],\"score\":0.0397762},\r\n{\"type\":32, \"data\":[330,414,11],\"color\":[11,11,50,255],\"score\":0.0397695},\r\n{\"type\":32, \"data\":[578,473,9],\"color\":[11,10,50,255],\"score\":0.0397628},\r\n{\"type\":32, \"data\":[726,459,28],\"color\":[11,10,50,255],\"score\":0.0397555},\r\n{\"type\":32, \"data\":[478,76,1],\"color\":[11,10,50,255],\"score\":0.0397466},\r\n{\"type\":32, \"data\":[585,568,3],\"color\":[133,143,146,255],\"score\":0.0397354},\r\n{\"type\":32, \"data\":[515,45,2],\"color\":[139,140,140,255],\"score\":0.0397289},\r\n{\"type\":32, \"data\":[455,65,2],\"color\":[33,33,67,255],\"score\":0.0397133},\r\n{\"type\":32, \"data\":[469,55,4],\"color\":[234,237,237,255],\"score\":0.0397061},\r\n{\"type\":32, \"data\":[482,61,0],\"color\":[252,255,255,255],\"score\":0.0396999},\r\n{\"type\":32, \"data\":[640,402,10],\"color\":[73,75,34,255],\"score\":0.0396942},\r\n{\"type\":32, \"data\":[387,134,14],\"color\":[63,60,29,255],\"score\":0.0396865},\r\n{\"type\":32, \"data\":[602,405,4],\"color\":[197,159,129,255],\"score\":0.0396781},\r\n{\"type\":32, \"data\":[190,163,7],\"color\":[16,21,42,255],\"score\":0.0396678},\r\n{\"type\":32, \"data\":[574,370,3],\"color\":[152,131,98,255],\"score\":0.0396594},\r\n{\"type\":32, \"data\":[649,503,10],\"color\":[12,11,50,255],\"score\":0.0396502},\r\n{\"type\":32, \"data\":[430,42,1],\"color\":[102,103,120,255],\"score\":0.0396383},\r\n{\"type\":32, \"data\":[405,67,3],\"color\":[18,17,55,255],\"score\":0.0396274},\r\n{\"type\":32, \"data\":[207,506,8],\"color\":[107,80,53,255],\"score\":0.0396198},\r\n{\"type\":32, \"data\":[594,585,9],\"color\":[11,11,50,255],\"score\":0.0396122},\r\n{\"type\":32, \"data\":[246,438,14],\"color\":[129,105,65,255],\"score\":0.0396042},\r\n{\"type\":32, \"data\":[437,45,3],\"color\":[55,53,64,255],\"score\":0.0395947},\r\n{\"type\":32, \"data\":[465,206,14],\"color\":[40,59,12,255],\"score\":0.0395874},\r\n{\"type\":32, \"data\":[536,118,3],\"color\":[43,41,47,255],\"score\":0.0395809},\r\n{\"type\":32, \"data\":[510,92,4],\"color\":[137,141,137,255],\"score\":0.039572},\r\n{\"type\":32, \"data\":[254,281,10],\"color\":[11,10,50,255],\"score\":0.0395647},\r\n{\"type\":32, \"data\":[604,547,6],\"color\":[110,96,55,255],\"score\":0.0395569},\r\n{\"type\":32, \"data\":[238,249,10],\"color\":[11,11,48,255],\"score\":0.0395512},\r\n{\"type\":32, \"data\":[410,78,3],\"color\":[202,199,175,255],\"score\":0.0395423},\r\n{\"type\":32, \"data\":[368,74,2],\"color\":[11,10,50,255],\"score\":0.0395341},\r\n{\"type\":32, \"data\":[567,271,7],\"color\":[73,90,34,255],\"score\":0.0395275},\r\n{\"type\":32, \"data\":[298,315,2],\"color\":[180,166,136,255],\"score\":0.0395188},\r\n{\"type\":32, \"data\":[597,453,2],\"color\":[168,152,134,255],\"score\":0.0395123},\r\n{\"type\":32, \"data\":[442,66,2],\"color\":[18,17,55,255],\"score\":0.0395007},\r\n{\"type\":32, \"data\":[429,83,4],\"color\":[218,211,180,255],\"score\":0.0394826},\r\n{\"type\":32, \"data\":[62,167,3],\"color\":[57,68,52,255],\"score\":0.0394765},\r\n{\"type\":32, \"data\":[584,199,5],\"color\":[12,12,48,255],\"score\":0.0394692},\r\n{\"type\":32, \"data\":[451,246,12],\"color\":[59,81,24,255],\"score\":0.0394629},\r\n{\"type\":32, \"data\":[436,86,5],\"color\":[191,178,125,255],\"score\":0.039454},\r\n{\"type\":32, \"data\":[552,34,2],\"color\":[234,236,233,255],\"score\":0.0394417},\r\n{\"type\":32, \"data\":[134,142,2],\"color\":[117,128,102,255],\"score\":0.039432},\r\n{\"type\":32, \"data\":[295,56,1],\"color\":[162,165,183,255],\"score\":0.0394173},\r\n{\"type\":32, \"data\":[306,247,3],\"color\":[110,111,67,255],\"score\":0.0394109},\r\n{\"type\":32, \"data\":[319,55,1],\"color\":[115,116,135,255],\"score\":0.0394045},\r\n{\"type\":32, \"data\":[281,426,2],\"color\":[29,33,53,255],\"score\":0.0393981},\r\n{\"type\":32, \"data\":[146,145,2],\"color\":[185,189,180,255],\"score\":0.0393876},\r\n{\"type\":32, \"data\":[420,42,1],\"color\":[65,65,82,255],\"score\":0.0393799},\r\n{\"type\":32, \"data\":[397,51,2],\"color\":[11,10,50,255],\"score\":0.0393669},\r\n{\"type\":32, \"data\":[266,64,3],\"color\":[114,107,89,255],\"score\":0.0393511},\r\n{\"type\":32, \"data\":[343,54,2],\"color\":[15,14,54,255],\"score\":0.0393456},\r\n{\"type\":32, \"data\":[472,82,3],\"color\":[73,77,78,255],\"score\":0.0393362},\r\n{\"type\":32, \"data\":[48,139,9],\"color\":[68,75,26,255],\"score\":0.0393272},\r\n{\"type\":32, \"data\":[33,241,6],\"color\":[11,10,50,255],\"score\":0.0393165},\r\n{\"type\":32, \"data\":[537,13,17],\"color\":[11,10,50,255],\"score\":0.0393109},\r\n{\"type\":32, \"data\":[160,146,3],\"color\":[201,202,197,255],\"score\":0.0393022},\r\n{\"type\":32, \"data\":[544,322,2],\"color\":[186,175,123,255],\"score\":0.0392947},\r\n{\"type\":32, \"data\":[393,70,2],\"color\":[219,218,214,255],\"score\":0.0392814},\r\n{\"type\":32, \"data\":[398,74,1],\"color\":[39,38,73,255],\"score\":0.0392742},\r\n{\"type\":32, \"data\":[426,62,1],\"color\":[194,197,195,255],\"score\":0.0392593},\r\n{\"type\":32, \"data\":[670,350,8],\"color\":[53,73,19,255],\"score\":0.0392524},\r\n{\"type\":32, \"data\":[406,37,1],\"color\":[11,10,50,255],\"score\":0.0392372},\r\n{\"type\":32, \"data\":[277,282,2],\"color\":[103,101,66,255],\"score\":0.0392302},\r\n{\"type\":32, \"data\":[232,190,3],\"color\":[61,72,58,255],\"score\":0.0392248},\r\n{\"type\":32, \"data\":[548,308,1],\"color\":[143,157,138,255],\"score\":0.0392122},\r\n{\"type\":32, \"data\":[575,556,2],\"color\":[74,84,95,255],\"score\":0.0392045},\r\n{\"type\":32, \"data\":[557,38,2],\"color\":[11,10,50,255],\"score\":0.0391936},\r\n{\"type\":32, \"data\":[481,331,10],\"color\":[11,11,50,255],\"score\":0.0391855},\r\n{\"type\":32, \"data\":[356,296,4],\"color\":[199,164,119,255],\"score\":0.0391783},\r\n{\"type\":32, \"data\":[428,364,5],\"color\":[52,87,22,255],\"score\":0.039172},\r\n{\"type\":32, \"data\":[165,482,3],\"color\":[40,44,58,255],\"score\":0.0391631},\r\n{\"type\":32, \"data\":[348,70,1],\"color\":[138,145,141,255],\"score\":0.0391463},\r\n{\"type\":32, \"data\":[250,87,3],\"color\":[105,95,55,255],\"score\":0.0391412},\r\n{\"type\":32, \"data\":[447,66,1],\"color\":[11,10,50,255],\"score\":0.0391273},\r\n{\"type\":32, \"data\":[362,230,10],\"color\":[100,102,52,255],\"score\":0.0391205},\r\n{\"type\":32, \"data\":[244,116,10],\"color\":[43,44,31,255],\"score\":0.0391134},\r\n{\"type\":32, \"data\":[327,182,5],\"color\":[69,84,33,255],\"score\":0.0391054},\r\n{\"type\":32, \"data\":[364,63,1],\"color\":[113,115,138,255],\"score\":0.0390979},\r\n{\"type\":32, \"data\":[152,220,3],\"color\":[36,48,35,255],\"score\":0.0390919},\r\n{\"type\":32, \"data\":[423,85,1],\"color\":[145,146,132,255],\"score\":0.039084},\r\n{\"type\":32, \"data\":[352,322,3],\"color\":[209,183,133,255],\"score\":0.0390758},\r\n{\"type\":32, \"data\":[95,288,8],\"color\":[45,68,14,255],\"score\":0.0390704},\r\n{\"type\":32, \"data\":[423,70,3],\"color\":[222,221,210,255],\"score\":0.0390619},\r\n{\"type\":32, \"data\":[288,94,6],\"color\":[98,89,63,255],\"score\":0.0390557},\r\n{\"type\":32, \"data\":[235,334,5],\"color\":[66,89,35,255],\"score\":0.0390488},\r\n{\"type\":32, \"data\":[260,70,4],\"color\":[15,14,51,255],\"score\":0.0390423},\r\n{\"type\":32, \"data\":[384,84,4],\"color\":[112,103,67,255],\"score\":0.0390342},\r\n{\"type\":32, \"data\":[268,116,5],\"color\":[22,22,45,255],\"score\":0.0390254},\r\n{\"type\":32, \"data\":[479,412,3],\"color\":[38,51,41,255],\"score\":0.0390179},\r\n{\"type\":32, \"data\":[52,127,4],\"color\":[15,15,49,255],\"score\":0.0390109},\r\n{\"type\":32, \"data\":[236,161,9],\"color\":[55,64,27,255],\"score\":0.0390049},\r\n{\"type\":32, \"data\":[344,147,8],\"color\":[37,39,27,255],\"score\":0.0389985},\r\n{\"type\":32, \"data\":[298,323,6],\"color\":[12,10,50,255],\"score\":0.0389864},\r\n{\"type\":32, \"data\":[433,77,0],\"color\":[11,10,50,255],\"score\":0.0389779},\r\n{\"type\":32, \"data\":[73,290,9],\"color\":[11,11,49,255],\"score\":0.0389702},\r\n{\"type\":32, \"data\":[610,516,11],\"color\":[113,97,63,255],\"score\":0.0389627},\r\n{\"type\":32, \"data\":[559,170,8],\"color\":[69,68,29,255],\"score\":0.0389545},\r\n{\"type\":32, \"data\":[374,181,16],\"color\":[42,61,16,255],\"score\":0.0389482},\r\n{\"type\":32, \"data\":[360,67,1],\"color\":[184,185,190,255],\"score\":0.0389373},\r\n{\"type\":32, \"data\":[540,43,1],\"color\":[186,188,195,255],\"score\":0.0389301},\r\n{\"type\":32, \"data\":[460,44,1],\"color\":[189,194,192,255],\"score\":0.0389237},\r\n{\"type\":32, \"data\":[415,44,2],\"color\":[235,239,238,255],\"score\":0.038915},\r\n{\"type\":32, \"data\":[422,65,1],\"color\":[127,130,147,255],\"score\":0.038907},\r\n{\"type\":32, \"data\":[509,145,8],\"color\":[85,78,47,255],\"score\":0.0388988},\r\n{\"type\":32, \"data\":[589,534,1],\"color\":[202,204,201,255],\"score\":0.0388884},\r\n{\"type\":32, \"data\":[613,400,4],\"color\":[195,161,122,255],\"score\":0.0388805},\r\n{\"type\":32, \"data\":[331,68,3],\"color\":[131,121,88,255],\"score\":0.0388693},\r\n{\"type\":32, \"data\":[457,135,2],\"color\":[97,92,50,255],\"score\":0.0388624},\r\n{\"type\":32, \"data\":[557,287,6],\"color\":[80,95,46,255],\"score\":0.0388534},\r\n{\"type\":32, \"data\":[483,84,3],\"color\":[94,98,92,255],\"score\":0.0388464},\r\n{\"type\":32, \"data\":[578,540,2],\"color\":[99,112,110,255],\"score\":0.0388316},\r\n{\"type\":32, \"data\":[595,559,6],\"color\":[100,86,47,255],\"score\":0.0388239},\r\n{\"type\":32, \"data\":[464,81,4],\"color\":[148,137,112,255],\"score\":0.0388154},\r\n{\"type\":32, \"data\":[369,45,1],\"color\":[87,87,116,255],\"score\":0.0388073},\r\n{\"type\":32, \"data\":[154,213,2],\"color\":[71,91,37,255],\"score\":0.0387996},\r\n{\"type\":32, \"data\":[417,74,2],\"color\":[51,53,84,255],\"score\":0.0387917},\r\n{\"type\":32, \"data\":[511,32,3],\"color\":[226,227,225,255],\"score\":0.0387845},\r\n{\"type\":32, \"data\":[608,452,2],\"color\":[174,148,118,255],\"score\":0.0387767},\r\n{\"type\":32, \"data\":[506,96,1],\"color\":[251,251,250,255],\"score\":0.0387676},\r\n{\"type\":32, \"data\":[320,53,1],\"color\":[184,185,200,255],\"score\":0.038749},\r\n{\"type\":32, \"data\":[122,141,1],\"color\":[167,176,162,255],\"score\":0.0387405},\r\n{\"type\":32, \"data\":[507,46,1],\"color\":[144,147,144,255],\"score\":0.0387308},\r\n{\"type\":32, \"data\":[440,66,2],\"color\":[15,14,53,255],\"score\":0.0387244},\r\n{\"type\":32, \"data\":[418,37,2],\"color\":[140,141,157,255],\"score\":0.0387175},\r\n{\"type\":32, \"data\":[251,332,7],\"color\":[36,56,14,255],\"score\":0.0387095},\r\n{\"type\":32, \"data\":[258,103,6],\"color\":[105,94,58,255],\"score\":0.0386997},\r\n{\"type\":32, \"data\":[375,51,3],\"color\":[11,10,50,255],\"score\":0.038692},\r\n{\"type\":32, \"data\":[343,58,1],\"color\":[153,158,154,255],\"score\":0.0386788},\r\n{\"type\":32, \"data\":[613,226,12],\"color\":[11,10,50,255],\"score\":0.0386718},\r\n{\"type\":32, \"data\":[303,66,2],\"color\":[167,156,125,255],\"score\":0.0386641},\r\n{\"type\":32, \"data\":[376,76,1],\"color\":[118,118,138,255],\"score\":0.0386557},\r\n{\"type\":32, \"data\":[538,340,14],\"color\":[11,10,50,255],\"score\":0.0386478},\r\n{\"type\":32, \"data\":[582,429,12],\"color\":[11,10,50,255],\"score\":0.0386425},\r\n{\"type\":32, \"data\":[737,398,13],\"color\":[77,78,37,255],\"score\":0.0386342},\r\n{\"type\":32, \"data\":[180,355,27],\"color\":[11,10,50,255],\"score\":0.0386288},\r\n{\"type\":32, \"data\":[219,341,3],\"color\":[39,72,39,255],\"score\":0.0386229},\r\n{\"type\":32, \"data\":[395,78,2],\"color\":[195,205,205,255],\"score\":0.0386143},\r\n{\"type\":32, \"data\":[236,134,5],\"color\":[80,77,43,255],\"score\":0.0386077},\r\n{\"type\":32, \"data\":[457,56,3],\"color\":[102,94,68,255],\"score\":0.0386},\r\n{\"type\":32, \"data\":[462,126,3],\"color\":[78,74,54,255],\"score\":0.0385904},\r\n{\"type\":32, \"data\":[293,213,9],\"color\":[45,57,17,255],\"score\":0.0385816},\r\n{\"type\":32, \"data\":[468,223,3],\"color\":[16,23,40,255],\"score\":0.0385747},\r\n{\"type\":32, \"data\":[272,251,5],\"color\":[161,140,102,255],\"score\":0.0385689},\r\n{\"type\":32, \"data\":[289,499,4],\"color\":[219,185,139,255],\"score\":0.0385613},\r\n{\"type\":32, \"data\":[216,197,15],\"color\":[11,11,48,255],\"score\":0.038555},\r\n{\"type\":32, \"data\":[471,42,1],\"color\":[109,106,131,255],\"score\":0.0385452},\r\n{\"type\":32, \"data\":[590,230,2],\"color\":[158,146,96,255],\"score\":0.0385235},\r\n{\"type\":32, \"data\":[570,249,5],\"color\":[78,104,31,255],\"score\":0.0385174},\r\n{\"type\":32, \"data\":[523,161,10],\"color\":[70,70,29,255],\"score\":0.0385115},\r\n{\"type\":32, \"data\":[546,144,6],\"color\":[12,11,50,255],\"score\":0.0385055},\r\n{\"type\":32, \"data\":[428,107,6],\"color\":[92,86,58,255],\"score\":0.0384976},\r\n{\"type\":32, \"data\":[507,37,8],\"color\":[228,228,229,255],\"score\":0.0384867},\r\n{\"type\":32, \"data\":[118,303,8],\"color\":[11,10,49,255],\"score\":0.038481},\r\n{\"type\":32, \"data\":[399,59,1],\"color\":[11,10,50,255],\"score\":0.0384686},\r\n{\"type\":32, \"data\":[214,168,2],\"color\":[143,150,134,255],\"score\":0.0384589},\r\n{\"type\":32, \"data\":[541,132,2],\"color\":[42,40,55,255],\"score\":0.0384521},\r\n{\"type\":32, \"data\":[551,117,2],\"color\":[99,99,83,255],\"score\":0.0384442},\r\n{\"type\":32, \"data\":[345,491,10],\"color\":[109,94,64,255],\"score\":0.0384377},\r\n{\"type\":32, \"data\":[397,62,1],\"color\":[243,243,238,255],\"score\":0.0384293},\r\n{\"type\":32, \"data\":[444,44,2],\"color\":[128,122,126,255],\"score\":0.0384238},\r\n{\"type\":32, \"data\":[470,119,9],\"color\":[12,11,50,255],\"score\":0.0384162},\r\n{\"type\":32, \"data\":[273,515,3],\"color\":[102,88,56,255],\"score\":0.038408},\r\n{\"type\":32, \"data\":[365,511,4],\"color\":[34,43,25,255],\"score\":0.0384022},\r\n{\"type\":32, \"data\":[333,227,3],\"color\":[97,93,51,255],\"score\":0.0383944},\r\n{\"type\":32, \"data\":[318,63,2],\"color\":[65,67,89,255],\"score\":0.0383879},\r\n{\"type\":32, \"data\":[466,48,2],\"color\":[131,125,87,255],\"score\":0.0383786},\r\n{\"type\":32, \"data\":[314,296,3],\"color\":[112,101,61,255],\"score\":0.0383727},\r\n{\"type\":32, \"data\":[530,89,3],\"color\":[12,11,51,255],\"score\":0.0383671},\r\n{\"type\":32, \"data\":[472,300,6],\"color\":[11,10,50,255],\"score\":0.0383627},\r\n{\"type\":32, \"data\":[434,107,2],\"color\":[17,23,58,255],\"score\":0.0383555},\r\n{\"type\":32, \"data\":[482,142,4],\"color\":[14,13,49,255],\"score\":0.0383493},\r\n{\"type\":32, \"data\":[297,105,5],\"color\":[36,36,50,255],\"score\":0.038341},\r\n{\"type\":32, \"data\":[442,75,1],\"color\":[11,10,50,255],\"score\":0.03833},\r\n{\"type\":32, \"data\":[384,78,2],\"color\":[132,138,138,255],\"score\":0.03832},\r\n{\"type\":32, \"data\":[525,37,6],\"color\":[211,211,212,255],\"score\":0.0383045},\r\n{\"type\":32, \"data\":[573,258,7],\"color\":[50,71,15,255],\"score\":0.0382982},\r\n{\"type\":32, \"data\":[414,145,12],\"color\":[11,10,50,255],\"score\":0.0382912},\r\n{\"type\":32, \"data\":[520,70,16],\"color\":[11,10,50,255],\"score\":0.0382847},\r\n{\"type\":32, \"data\":[307,262,4],\"color\":[107,95,60,255],\"score\":0.0382771},\r\n{\"type\":32, \"data\":[554,300,4],\"color\":[75,82,35,255],\"score\":0.038269},\r\n{\"type\":32, \"data\":[469,36,5],\"color\":[219,220,219,255],\"score\":0.0382614},\r\n{\"type\":32, \"data\":[585,269,9],\"color\":[76,89,28,255],\"score\":0.0382564},\r\n{\"type\":32, \"data\":[145,141,1],\"color\":[58,63,27,255],\"score\":0.0382498},\r\n{\"type\":32, \"data\":[444,57,2],\"color\":[75,72,78,255],\"score\":0.0382433},\r\n{\"type\":32, \"data\":[388,44,2],\"color\":[107,105,128,255],\"score\":0.0382268},\r\n{\"type\":32, \"data\":[69,311,4],\"color\":[44,63,22,255],\"score\":0.0382169},\r\n{\"type\":32, \"data\":[702,331,6],\"color\":[63,83,21,255],\"score\":0.0382113},\r\n{\"type\":32, \"data\":[544,104,2],\"color\":[16,16,53,255],\"score\":0.0382052},\r\n{\"type\":32, \"data\":[168,305,25],\"color\":[12,12,48,255],\"score\":0.0381996},\r\n{\"type\":32, \"data\":[328,271,3],\"color\":[194,166,118,255],\"score\":0.0381903},\r\n{\"type\":32, \"data\":[451,65,2],\"color\":[30,31,64,255],\"score\":0.0381827},\r\n{\"type\":32, \"data\":[735,421,11],\"color\":[11,10,50,255],\"score\":0.038176},\r\n{\"type\":32, \"data\":[61,284,3],\"color\":[36,63,32,255],\"score\":0.0381689},\r\n{\"type\":32, \"data\":[545,37,1],\"color\":[110,109,126,255],\"score\":0.0381624},\r\n{\"type\":32, \"data\":[159,131,9],\"color\":[50,58,18,255],\"score\":0.0381547},\r\n{\"type\":32, \"data\":[233,466,6],\"color\":[168,112,78,255],\"score\":0.0381487},\r\n{\"type\":32, \"data\":[357,160,6],\"color\":[23,26,36,255],\"score\":0.0381421},\r\n{\"type\":32, \"data\":[470,101,5],\"color\":[21,24,52,255],\"score\":0.0381345},\r\n{\"type\":32, \"data\":[420,49,2],\"color\":[137,139,121,255],\"score\":0.0381227},\r\n{\"type\":32, \"data\":[542,40,1],\"color\":[41,41,75,255],\"score\":0.0381162},\r\n{\"type\":32, \"data\":[514,36,1],\"color\":[148,146,158,255],\"score\":0.0381076},\r\n{\"type\":32, \"data\":[450,82,4],\"color\":[108,99,83,255],\"score\":0.0381003},\r\n{\"type\":32, \"data\":[100,155,6],\"color\":[12,12,48,255],\"score\":0.0380936},\r\n{\"type\":32, \"data\":[593,488,1],\"color\":[180,174,162,255],\"score\":0.0380846},\r\n{\"type\":32, \"data\":[453,43,1],\"color\":[21,20,54,255],\"score\":0.0380744},\r\n{\"type\":32, \"data\":[325,158,6],\"color\":[61,64,28,255],\"score\":0.0380681},\r\n{\"type\":32, \"data\":[509,102,4],\"color\":[82,78,53,255],\"score\":0.0380609},\r\n{\"type\":32, \"data\":[680,430,9],\"color\":[59,71,27,255],\"score\":0.0380557},\r\n{\"type\":32, \"data\":[371,328,3],\"color\":[95,95,54,255],\"score\":0.0380497},\r\n{\"type\":32, \"data\":[251,95,3],\"color\":[11,10,50,255],\"score\":0.0380433},\r\n{\"type\":32, \"data\":[458,330,10],\"color\":[12,14,50,255],\"score\":0.0380353},\r\n{\"type\":32, \"data\":[342,286,2],\"color\":[94,90,52,255],\"score\":0.0380279},\r\n{\"type\":32, \"data\":[515,93,1],\"color\":[207,211,217,255],\"score\":0.038021},\r\n{\"type\":32, \"data\":[415,154,9],\"color\":[11,10,50,255],\"score\":0.0380152},\r\n{\"type\":32, \"data\":[179,147,3],\"color\":[68,77,34,255],\"score\":0.0380068},\r\n{\"type\":32, \"data\":[306,99,6],\"color\":[90,85,49,255],\"score\":0.0380004},\r\n{\"type\":32, \"data\":[541,38,1],\"color\":[146,148,159,255],\"score\":0.0379926},\r\n{\"type\":32, \"data\":[255,53,10],\"color\":[11,10,50,255],\"score\":0.0379845},\r\n{\"type\":32, \"data\":[382,359,7],\"color\":[78,88,34,255],\"score\":0.0379781},\r\n{\"type\":32, \"data\":[432,373,4],\"color\":[17,23,45,255],\"score\":0.0379725},\r\n{\"type\":32, \"data\":[428,87,2],\"color\":[220,206,169,255],\"score\":0.0379674},\r\n{\"type\":32, \"data\":[264,269,5],\"color\":[123,109,65,255],\"score\":0.0379623},\r\n{\"type\":32, \"data\":[423,366,9],\"color\":[52,82,15,255],\"score\":0.0379565},\r\n{\"type\":32, \"data\":[356,41,8],\"color\":[11,10,50,255],\"score\":0.03795},\r\n{\"type\":32, \"data\":[499,87,2],\"color\":[164,174,176,255],\"score\":0.0379437},\r\n{\"type\":32, \"data\":[495,49,2],\"color\":[102,112,95,255],\"score\":0.0379348},\r\n{\"type\":32, \"data\":[346,462,5],\"color\":[87,79,45,255],\"score\":0.0379289},\r\n{\"type\":32, \"data\":[533,36,5],\"color\":[207,207,208,255],\"score\":0.0379209},\r\n{\"type\":32, \"data\":[564,262,4],\"color\":[80,106,51,255],\"score\":0.0379136},\r\n{\"type\":32, \"data\":[5,101,24],\"color\":[11,10,50,255],\"score\":0.0379074},\r\n{\"type\":32, \"data\":[375,59,3],\"color\":[13,12,52,255],\"score\":0.0378959},\r\n{\"type\":32, \"data\":[289,453,12],\"color\":[149,116,70,255],\"score\":0.0378901},\r\n{\"type\":32, \"data\":[319,97,6],\"color\":[103,94,50,255],\"score\":0.0378837},\r\n{\"type\":32, \"data\":[622,401,5],\"color\":[127,105,67,255],\"score\":0.0378753},\r\n{\"type\":32, \"data\":[552,322,6],\"color\":[67,76,26,255],\"score\":0.03787},\r\n{\"type\":32, \"data\":[300,425,10],\"color\":[11,12,51,255],\"score\":0.0378629},\r\n{\"type\":32, \"data\":[390,70,1],\"color\":[193,196,203,255],\"score\":0.0378557},\r\n{\"type\":32, \"data\":[470,417,3],\"color\":[64,89,29,255],\"score\":0.0378488},\r\n{\"type\":32, \"data\":[167,149,1],\"color\":[99,122,92,255],\"score\":0.0378401},\r\n{\"type\":32, \"data\":[311,267,3],\"color\":[191,148,110,255],\"score\":0.0378332},\r\n{\"type\":32, \"data\":[527,361,2],\"color\":[56,83,20,255],\"score\":0.0378241},\r\n{\"type\":32, \"data\":[443,86,2],\"color\":[38,48,53,255],\"score\":0.0378156},\r\n{\"type\":32, \"data\":[301,54,2],\"color\":[36,36,72,255],\"score\":0.0378051},\r\n{\"type\":32, \"data\":[461,242,3],\"color\":[29,47,40,255],\"score\":0.037799},\r\n{\"type\":32, \"data\":[302,577,32],\"color\":[11,10,50,255],\"score\":0.0377935},\r\n{\"type\":32, \"data\":[257,119,6],\"color\":[18,18,44,255],\"score\":0.0377869},\r\n{\"type\":32, \"data\":[346,346,9],\"color\":[13,12,49,255],\"score\":0.037779},\r\n{\"type\":32, \"data\":[400,66,1],\"color\":[40,41,79,255],\"score\":0.0377688},\r\n{\"type\":32, \"data\":[491,116,4],\"color\":[11,14,51,255],\"score\":0.0377624},\r\n{\"type\":32, \"data\":[720,412,4],\"color\":[69,76,32,255],\"score\":0.0377571},\r\n{\"type\":32, \"data\":[445,77,1],\"color\":[144,141,155,255],\"score\":0.0377492},\r\n{\"type\":32, \"data\":[379,58,4],\"color\":[12,11,51,255],\"score\":0.0377414},\r\n{\"type\":32, \"data\":[147,129,8],\"color\":[56,62,24,255],\"score\":0.0377335},\r\n{\"type\":32, \"data\":[334,308,4],\"color\":[110,96,60,255],\"score\":0.0377276},\r\n{\"type\":32, \"data\":[149,146,0],\"color\":[230,226,221,255],\"score\":0.0377188},\r\n{\"type\":32, \"data\":[326,525,6],\"color\":[120,103,70,255],\"score\":0.0377119},\r\n{\"type\":32, \"data\":[466,65,1],\"color\":[11,10,50,255],\"score\":0.0377037},\r\n{\"type\":32, \"data\":[298,490,3],\"color\":[183,143,97,255],\"score\":0.0376975},\r\n{\"type\":32, \"data\":[595,569,2],\"color\":[24,31,44,255],\"score\":0.0376887},\r\n{\"type\":32, \"data\":[613,558,8],\"color\":[11,12,51,255],\"score\":0.0376833},\r\n{\"type\":32, \"data\":[307,106,3],\"color\":[24,23,49,255],\"score\":0.0376757},\r\n{\"type\":32, \"data\":[457,177,5],\"color\":[51,57,20,255],\"score\":0.03767},\r\n{\"type\":32, \"data\":[338,79,2],\"color\":[161,158,139,255],\"score\":0.0376577},\r\n{\"type\":32, \"data\":[195,459,5],\"color\":[153,114,79,255],\"score\":0.0376521},\r\n{\"type\":32, \"data\":[459,80,3],\"color\":[168,157,137,255],\"score\":0.0376442},\r\n{\"type\":32, \"data\":[281,483,7],\"color\":[177,119,82,255],\"score\":0.0376369},\r\n{\"type\":32, \"data\":[74,162,3],\"color\":[59,78,32,255],\"score\":0.037628},\r\n{\"type\":32, \"data\":[168,120,5],\"color\":[72,73,32,255],\"score\":0.0376226},\r\n{\"type\":32, \"data\":[99,135,3],\"color\":[82,90,55,255],\"score\":0.0376164},\r\n{\"type\":32, \"data\":[249,248,4],\"color\":[37,47,17,255],\"score\":0.0376084},\r\n{\"type\":32, \"data\":[277,170,6],\"color\":[55,76,21,255],\"score\":0.0376026},\r\n{\"type\":32, \"data\":[387,97,2],\"color\":[15,15,50,255],\"score\":0.0375945},\r\n{\"type\":32, \"data\":[386,49,3],\"color\":[19,18,55,255],\"score\":0.0375893},\r\n{\"type\":32, \"data\":[301,61,4],\"color\":[29,29,62,255],\"score\":0.0375786},\r\n{\"type\":32, \"data\":[404,314,10],\"color\":[11,10,50,255],\"score\":0.0375723},\r\n{\"type\":32, \"data\":[573,548,2],\"color\":[105,114,117,255],\"score\":0.037566},\r\n{\"type\":32, \"data\":[469,42,0],\"color\":[8,5,36,255],\"score\":0.0375595},\r\n{\"type\":32, \"data\":[210,156,5],\"color\":[48,61,20,255],\"score\":0.0375527},\r\n{\"type\":32, \"data\":[5,392,30],\"color\":[11,10,50,255],\"score\":0.0375479},\r\n{\"type\":32, \"data\":[585,414,11],\"color\":[11,10,50,255],\"score\":0.0375411},\r\n{\"type\":32, \"data\":[522,368,4],\"color\":[11,10,50,255],\"score\":0.0375361},\r\n{\"type\":32, \"data\":[363,52,2],\"color\":[150,143,117,255],\"score\":0.0375291},\r\n{\"type\":32, \"data\":[453,53,2],\"color\":[160,155,130,255],\"score\":0.0375222},\r\n{\"type\":32, \"data\":[365,557,22],\"color\":[11,10,49,255],\"score\":0.0375173},\r\n{\"type\":32, \"data\":[262,85,4],\"color\":[113,100,62,255],\"score\":0.0375077},\r\n{\"type\":32, \"data\":[268,591,11],\"color\":[11,10,50,255],\"score\":0.0375034},\r\n{\"type\":32, \"data\":[332,472,7],\"color\":[124,105,70,255],\"score\":0.0374974},\r\n{\"type\":32, \"data\":[443,100,3],\"color\":[15,13,51,255],\"score\":0.0374902},\r\n{\"type\":32, \"data\":[444,93,3],\"color\":[109,99,66,255],\"score\":0.0374834},\r\n{\"type\":32, \"data\":[614,429,5],\"color\":[159,133,103,255],\"score\":0.0374761},\r\n{\"type\":32, \"data\":[569,54,20],\"color\":[11,10,50,255],\"score\":0.0374705},\r\n{\"type\":32, \"data\":[211,124,5],\"color\":[85,83,45,255],\"score\":0.0374647},\r\n{\"type\":32, \"data\":[310,113,5],\"color\":[76,74,45,255],\"score\":0.037458},\r\n{\"type\":32, \"data\":[449,49,3],\"color\":[86,89,69,255],\"score\":0.0374499},\r\n{\"type\":32, \"data\":[346,49,1],\"color\":[207,210,213,255],\"score\":0.0374436},\r\n{\"type\":32, \"data\":[308,319,2],\"color\":[70,59,58,255],\"score\":0.0374359},\r\n{\"type\":32, \"data\":[277,84,5],\"color\":[86,79,58,255],\"score\":0.0374293},\r\n{\"type\":32, \"data\":[128,334,6],\"color\":[24,27,43,255],\"score\":0.0374248},\r\n{\"type\":32, \"data\":[556,71,30],\"color\":[11,10,50,255],\"score\":0.0374178},\r\n{\"type\":32, \"data\":[389,75,4],\"color\":[15,15,54,255],\"score\":0.0374073},\r\n{\"type\":32, \"data\":[48,105,7],\"color\":[80,83,40,255],\"score\":0.0374009},\r\n{\"type\":32, \"data\":[343,52,2],\"color\":[31,31,67,255],\"score\":0.0373954},\r\n{\"type\":32, \"data\":[408,64,1],\"color\":[205,208,212,255],\"score\":0.0373839},\r\n{\"type\":32, \"data\":[655,480,11],\"color\":[67,77,33,255],\"score\":0.0373764},\r\n{\"type\":32, \"data\":[496,25,3],\"color\":[11,10,50,255],\"score\":0.0373678},\r\n{\"type\":32, \"data\":[640,246,5],\"color\":[60,79,20,255],\"score\":0.0373616},\r\n{\"type\":32, \"data\":[545,363,3],\"color\":[37,46,42,255],\"score\":0.0373559},\r\n{\"type\":32, \"data\":[299,94,2],\"color\":[59,55,58,255],\"score\":0.0373494},\r\n{\"type\":32, \"data\":[642,536,22],\"color\":[11,10,50,255],\"score\":0.0373448},\r\n{\"type\":32, \"data\":[588,554,1],\"color\":[183,176,149,255],\"score\":0.0373383},\r\n{\"type\":32, \"data\":[314,415,4],\"color\":[63,64,25,255],\"score\":0.0373324},\r\n{\"type\":32, \"data\":[498,157,9],\"color\":[67,66,27,255],\"score\":0.0373281},\r\n{\"type\":32, \"data\":[517,97,3],\"color\":[120,115,95,255],\"score\":0.0373199},\r\n{\"type\":32, \"data\":[443,40,3],\"color\":[176,177,183,255],\"score\":0.0373131},\r\n{\"type\":32, \"data\":[275,199,6],\"color\":[36,49,15,255],\"score\":0.0373087},\r\n{\"type\":32, \"data\":[537,42,2],\"color\":[48,48,82,255],\"score\":0.0373026},\r\n{\"type\":32, \"data\":[561,222,5],\"color\":[37,48,30,255],\"score\":0.0372957},\r\n{\"type\":32, \"data\":[447,62,2],\"color\":[197,201,201,255],\"score\":0.0372871},\r\n{\"type\":32, \"data\":[470,325,3],\"color\":[67,76,26,255],\"score\":0.0372795},\r\n{\"type\":32, \"data\":[272,361,3],\"color\":[28,45,18,255],\"score\":0.0372742},\r\n{\"type\":32, \"data\":[320,318,2],\"color\":[125,111,74,255],\"score\":0.0372691},\r\n{\"type\":32, \"data\":[420,55,1],\"color\":[21,19,51,255],\"score\":0.0372614},\r\n{\"type\":32, \"data\":[509,94,1],\"color\":[77,88,84,255],\"score\":0.0372565},\r\n{\"type\":32, \"data\":[349,307,9],\"color\":[161,136,95,255],\"score\":0.0372504},\r\n{\"type\":32, \"data\":[503,118,3],\"color\":[63,102,82,255],\"score\":0.0372436},\r\n{\"type\":32, \"data\":[527,139,5],\"color\":[14,13,51,255],\"score\":0.0372389},\r\n{\"type\":32, \"data\":[458,69,2],\"color\":[247,247,248,255],\"score\":0.0372292},\r\n{\"type\":32, \"data\":[319,251,2],\"color\":[165,143,99,255],\"score\":0.0372242},\r\n{\"type\":32, \"data\":[704,284,2],\"color\":[125,111,61,255],\"score\":0.0372167},\r\n{\"type\":32, \"data\":[100,140,2],\"color\":[150,154,133,255],\"score\":0.0372057},\r\n{\"type\":32, \"data\":[577,529,4],\"color\":[19,22,47,255],\"score\":0.037198},\r\n{\"type\":32, \"data\":[335,497,9],\"color\":[123,100,70,255],\"score\":0.0371932},\r\n{\"type\":32, \"data\":[359,186,7],\"color\":[53,72,21,255],\"score\":0.0371878},\r\n{\"type\":32, \"data\":[313,81,2],\"color\":[20,19,57,255],\"score\":0.0371824},\r\n{\"type\":32, \"data\":[340,18,31],\"color\":[11,10,50,255],\"score\":0.0371737},\r\n{\"type\":32, \"data\":[297,113,5],\"color\":[70,71,38,255],\"score\":0.037167},\r\n{\"type\":32, \"data\":[511,132,4],\"color\":[12,11,50,255],\"score\":0.0371619},\r\n{\"type\":32, \"data\":[737,363,7],\"color\":[98,85,53,255],\"score\":0.0371562},\r\n{\"type\":32, \"data\":[589,368,7],\"color\":[114,98,57,255],\"score\":0.0371494},\r\n{\"type\":32, \"data\":[352,86,5],\"color\":[11,10,50,255],\"score\":0.037142},\r\n{\"type\":32, \"data\":[133,484,32],\"color\":[11,10,50,255],\"score\":0.0371363},\r\n{\"type\":32, \"data\":[574,561,1],\"color\":[83,93,102,255],\"score\":0.0371287},\r\n{\"type\":32, \"data\":[408,44,3],\"color\":[231,230,232,255],\"score\":0.0371224},\r\n{\"type\":32, \"data\":[258,259,4],\"color\":[111,103,53,255],\"score\":0.0371165},\r\n{\"type\":32, \"data\":[43,114,3],\"color\":[13,12,49,255],\"score\":0.0371102},\r\n{\"type\":32, \"data\":[171,257,3],\"color\":[15,17,44,255],\"score\":0.0371027},\r\n{\"type\":32, \"data\":[380,314,5],\"color\":[116,112,65,255],\"score\":0.0370978},\r\n{\"type\":32, \"data\":[501,132,5],\"color\":[11,10,50,255],\"score\":0.0370917},\r\n{\"type\":32, \"data\":[582,503,3],\"color\":[45,64,25,255],\"score\":0.0370841},\r\n{\"type\":32, \"data\":[377,28,17],\"color\":[11,10,50,255],\"score\":0.0370761},\r\n{\"type\":32, \"data\":[417,83,4],\"color\":[12,11,50,255],\"score\":0.0370664},\r\n{\"type\":32, \"data\":[597,475,2],\"color\":[194,191,190,255],\"score\":0.0370564},\r\n{\"type\":32, \"data\":[483,49,2],\"color\":[158,163,146,255],\"score\":0.0370476},\r\n{\"type\":32, \"data\":[397,67,1],\"color\":[123,126,147,255],\"score\":0.0370383},\r\n{\"type\":32, \"data\":[69,87,6],\"color\":[11,10,50,255],\"score\":0.0370341},\r\n{\"type\":32, \"data\":[476,45,3],\"color\":[226,227,227,255],\"score\":0.0370276},\r\n{\"type\":32, \"data\":[99,302,5],\"color\":[11,10,50,255],\"score\":0.0370219},\r\n{\"type\":32, \"data\":[446,214,4],\"color\":[15,21,41,255],\"score\":0.0370135},\r\n{\"type\":32, \"data\":[237,200,5],\"color\":[17,28,26,255],\"score\":0.0370084},\r\n{\"type\":32, \"data\":[605,196,8],\"color\":[12,11,48,255],\"score\":0.0370019},\r\n{\"type\":32, \"data\":[434,350,3],\"color\":[47,77,16,255],\"score\":0.0369957},\r\n{\"type\":32, \"data\":[617,384,4],\"color\":[120,101,64,255],\"score\":0.0369899},\r\n{\"type\":32, \"data\":[586,377,2],\"color\":[190,169,129,255],\"score\":0.0369809},\r\n{\"type\":32, \"data\":[341,57,1],\"color\":[135,138,153,255],\"score\":0.0369709},\r\n{\"type\":32, \"data\":[471,341,3],\"color\":[62,81,29,255],\"score\":0.0369643},\r\n{\"type\":32, \"data\":[430,210,4],\"color\":[14,19,43,255],\"score\":0.0369582},\r\n{\"type\":32, \"data\":[423,64,1],\"color\":[144,149,163,255],\"score\":0.0369517},\r\n{\"type\":32, \"data\":[361,336,8],\"color\":[158,132,93,255],\"score\":0.036944},\r\n{\"type\":32, \"data\":[395,59,1],\"color\":[26,26,60,255],\"score\":0.0369336},\r\n{\"type\":32, \"data\":[462,233,2],\"color\":[12,17,50,255],\"score\":0.0369265},\r\n{\"type\":32, \"data\":[488,232,3],\"color\":[26,34,41,255],\"score\":0.0369203},\r\n{\"type\":32, \"data\":[230,430,7],\"color\":[106,92,59,255],\"score\":0.0369156},\r\n{\"type\":32, \"data\":[363,482,6],\"color\":[75,74,41,255],\"score\":0.0369077},\r\n{\"type\":32, \"data\":[664,462,12],\"color\":[81,88,40,255],\"score\":0.036902},\r\n{\"type\":32, \"data\":[595,384,2],\"color\":[180,147,109,255],\"score\":0.0368966},\r\n{\"type\":32, \"data\":[543,133,2],\"color\":[28,26,51,255],\"score\":0.0368902},\r\n{\"type\":32, \"data\":[276,320,20],\"color\":[11,10,50,255],\"score\":0.036885},\r\n{\"type\":32, \"data\":[470,134,4],\"color\":[11,10,50,255],\"score\":0.0368799},\r\n{\"type\":32, \"data\":[445,232,5],\"color\":[55,75,21,255],\"score\":0.0368739},\r\n{\"type\":32, \"data\":[323,145,9],\"color\":[36,38,31,255],\"score\":0.0368685},\r\n{\"type\":32, \"data\":[308,311,2],\"color\":[29,27,57,255],\"score\":0.0368623},\r\n{\"type\":32, \"data\":[401,213,8],\"color\":[48,68,16,255],\"score\":0.0368571},\r\n{\"type\":32, \"data\":[141,141,3],\"color\":[71,80,43,255],\"score\":0.0368511},\r\n{\"type\":32, \"data\":[130,130,1],\"color\":[154,155,143,255],\"score\":0.0368416},\r\n{\"type\":32, \"data\":[19,465,25],\"color\":[11,10,50,255],\"score\":0.0368375},\r\n{\"type\":32, \"data\":[552,202,5],\"color\":[15,18,43,255],\"score\":0.0368311},\r\n{\"type\":32, \"data\":[212,321,4],\"color\":[25,40,20,255],\"score\":0.0368261},\r\n{\"type\":32, \"data\":[371,80,3],\"color\":[142,137,92,255],\"score\":0.036819},\r\n{\"type\":32, \"data\":[311,53,1],\"color\":[182,183,193,255],\"score\":0.036809},\r\n{\"type\":32, \"data\":[433,93,2],\"color\":[121,113,71,255],\"score\":0.0368015},\r\n{\"type\":32, \"data\":[606,261,6],\"color\":[87,92,34,255],\"score\":0.0367973},\r\n{\"type\":32, \"data\":[387,61,1],\"color\":[138,144,157,255],\"score\":0.0367887},\r\n{\"type\":32, \"data\":[76,129,13],\"color\":[52,62,19,255],\"score\":0.0367833},\r\n{\"type\":32, \"data\":[466,340,2],\"color\":[57,85,27,255],\"score\":0.036778},\r\n{\"type\":32, \"data\":[106,147,3],\"color\":[40,55,30,255],\"score\":0.0367724},\r\n{\"type\":32, \"data\":[209,163,2],\"color\":[147,152,135,255],\"score\":0.0367642},\r\n{\"type\":32, \"data\":[355,285,6],\"color\":[147,123,89,255],\"score\":0.0367596},\r\n{\"type\":32, \"data\":[353,57,3],\"color\":[12,11,51,255],\"score\":0.0367525},\r\n{\"type\":32, \"data\":[345,59,1],\"color\":[113,114,124,255],\"score\":0.0367451},\r\n{\"type\":32, \"data\":[293,59,3],\"color\":[22,21,60,255],\"score\":0.0367381},\r\n{\"type\":32, \"data\":[477,268,15],\"color\":[50,74,15,255],\"score\":0.0367335},\r\n{\"type\":32, \"data\":[470,66,1],\"color\":[24,24,61,255],\"score\":0.0367214},\r\n{\"type\":32, \"data\":[467,329,2],\"color\":[25,82,65,255],\"score\":0.0367158},\r\n{\"type\":32, \"data\":[135,308,4],\"color\":[16,17,47,255],\"score\":0.036712},\r\n{\"type\":32, \"data\":[304,298,1],\"color\":[213,182,135,255],\"score\":0.0367041},\r\n{\"type\":32, \"data\":[411,112,12],\"color\":[87,81,53,255],\"score\":0.0366985},\r\n{\"type\":32, \"data\":[124,146,3],\"color\":[13,13,49,255],\"score\":0.0366915},\r\n{\"type\":32, \"data\":[247,196,2],\"color\":[128,134,120,255],\"score\":0.0366846},\r\n{\"type\":32, \"data\":[519,121,3],\"color\":[59,57,49,255],\"score\":0.0366792},\r\n{\"type\":32, \"data\":[304,307,3],\"color\":[32,28,57,255],\"score\":0.0366718},\r\n{\"type\":32, \"data\":[193,468,5],\"color\":[116,88,59,255],\"score\":0.0366663},\r\n{\"type\":32, \"data\":[479,103,3],\"color\":[55,84,77,255],\"score\":0.0366596},\r\n{\"type\":32, \"data\":[371,284,6],\"color\":[129,113,71,255],\"score\":0.0366548},\r\n{\"type\":32, \"data\":[303,307,3],\"color\":[22,19,54,255],\"score\":0.0366504},\r\n{\"type\":32, \"data\":[682,448,14],\"color\":[73,81,35,255],\"score\":0.0366455},\r\n{\"type\":32, \"data\":[597,378,4],\"color\":[136,113,70,255],\"score\":0.03664},\r\n{\"type\":32, \"data\":[327,293,4],\"color\":[172,142,104,255],\"score\":0.0366347},\r\n{\"type\":32, \"data\":[403,57,1],\"color\":[132,130,117,255],\"score\":0.0366273},\r\n{\"type\":32, \"data\":[316,227,6],\"color\":[72,71,34,255],\"score\":0.0366213},\r\n{\"type\":32, \"data\":[480,60,1],\"color\":[55,59,90,255],\"score\":0.036611},\r\n{\"type\":32, \"data\":[201,313,4],\"color\":[32,51,20,255],\"score\":0.036605},\r\n{\"type\":32, \"data\":[566,209,10],\"color\":[12,11,49,255],\"score\":0.0366},\r\n{\"type\":32, \"data\":[623,239,2],\"color\":[18,21,48,255],\"score\":0.0365942},\r\n{\"type\":32, \"data\":[490,362,8],\"color\":[15,17,47,255],\"score\":0.0365893},\r\n{\"type\":32, \"data\":[130,309,3],\"color\":[45,59,29,255],\"score\":0.036583},\r\n{\"type\":32, \"data\":[334,60,6],\"color\":[13,12,52,255],\"score\":0.0365725},\r\n{\"type\":32, \"data\":[541,118,3],\"color\":[13,12,50,255],\"score\":0.0365671},\r\n{\"type\":32, \"data\":[304,57,1],\"color\":[207,211,215,255],\"score\":0.0365578},\r\n{\"type\":32, \"data\":[475,69,1],\"color\":[148,153,168,255],\"score\":0.0365504},\r\n{\"type\":32, \"data\":[286,267,9],\"color\":[164,140,102,255],\"score\":0.036543},\r\n{\"type\":32, \"data\":[554,336,2],\"color\":[110,103,75,255],\"score\":0.0365369},\r\n{\"type\":32, \"data\":[546,98,8],\"color\":[12,12,50,255],\"score\":0.0365324},\r\n{\"type\":32, \"data\":[278,277,2],\"color\":[217,185,131,255],\"score\":0.0365252},\r\n{\"type\":32, \"data\":[390,368,8],\"color\":[62,81,24,255],\"score\":0.0365184},\r\n{\"type\":32, \"data\":[427,42,1],\"color\":[59,59,86,255],\"score\":0.036511},\r\n{\"type\":32, \"data\":[483,38,4],\"color\":[199,199,202,255],\"score\":0.0365058},\r\n{\"type\":32, \"data\":[430,72,1],\"color\":[164,161,148,255],\"score\":0.0364996},\r\n{\"type\":32, \"data\":[475,138,2],\"color\":[103,101,69,255],\"score\":0.0364854},\r\n{\"type\":32, \"data\":[515,135,4],\"color\":[11,10,50,255],\"score\":0.03648},\r\n{\"type\":32, \"data\":[172,149,2],\"color\":[189,193,187,255],\"score\":0.0364741},\r\n{\"type\":32, \"data\":[235,189,1],\"color\":[122,129,106,255],\"score\":0.0364662},\r\n{\"type\":32, \"data\":[297,307,2],\"color\":[160,135,107,255],\"score\":0.0364547},\r\n{\"type\":32, \"data\":[42,154,6],\"color\":[12,11,49,255],\"score\":0.0364504},\r\n{\"type\":32, \"data\":[484,61,0],\"color\":[205,209,219,255],\"score\":0.0364404},\r\n{\"type\":32, \"data\":[755,364,3],\"color\":[52,69,14,255],\"score\":0.0364344},\r\n{\"type\":32, \"data\":[417,40,2],\"color\":[28,27,64,255],\"score\":0.0364257},\r\n{\"type\":32, \"data\":[440,120,2],\"color\":[21,20,50,255],\"score\":0.0364205},\r\n{\"type\":32, \"data\":[456,80,2],\"color\":[171,162,139,255],\"score\":0.0364145},\r\n{\"type\":32, \"data\":[596,435,3],\"color\":[161,135,101,255],\"score\":0.0364089},\r\n{\"type\":32, \"data\":[471,232,5],\"color\":[67,84,31,255],\"score\":0.0364032},\r\n{\"type\":32, \"data\":[404,59,2],\"color\":[28,26,60,255],\"score\":0.0363972},\r\n{\"type\":32, \"data\":[604,235,2],\"color\":[84,93,40,255],\"score\":0.0363935},\r\n{\"type\":32, \"data\":[262,242,5],\"color\":[94,84,50,255],\"score\":0.0363883},\r\n{\"type\":32, \"data\":[587,487,4],\"color\":[36,40,32,255],\"score\":0.0363829},\r\n{\"type\":32, \"data\":[555,113,3],\"color\":[121,118,108,255],\"score\":0.0363759},\r\n{\"type\":32, \"data\":[549,39,1],\"color\":[55,54,89,255],\"score\":0.03637},\r\n{\"type\":32, \"data\":[446,75,2],\"color\":[32,32,67,255],\"score\":0.0363632},\r\n{\"type\":32, \"data\":[582,227,5],\"color\":[11,10,50,255],\"score\":0.0363555},\r\n{\"type\":32, \"data\":[486,154,3],\"color\":[69,66,27,255],\"score\":0.0363498},\r\n{\"type\":32, \"data\":[364,97,2],\"color\":[81,86,60,255],\"score\":0.0363433},\r\n{\"type\":32, \"data\":[280,66,2],\"color\":[37,35,64,255],\"score\":0.0363373},\r\n{\"type\":32, \"data\":[397,32,7],\"color\":[12,11,51,255],\"score\":0.036332},\r\n{\"type\":32, \"data\":[338,561,5],\"color\":[22,26,39,255],\"score\":0.0363279},\r\n{\"type\":32, \"data\":[371,54,2],\"color\":[143,138,122,255],\"score\":0.0363215},\r\n{\"type\":32, \"data\":[54,293,6],\"color\":[57,78,20,255],\"score\":0.0363162},\r\n{\"type\":32, \"data\":[458,87,3],\"color\":[168,155,111,255],\"score\":0.0363097},\r\n{\"type\":32, \"data\":[599,441,5],\"color\":[151,127,102,255],\"score\":0.0363027},\r\n{\"type\":32, \"data\":[541,126,4],\"color\":[103,94,66,255],\"score\":0.0362971},\r\n{\"type\":32, \"data\":[347,208,8],\"color\":[98,101,51,255],\"score\":0.036292},\r\n{\"type\":32, \"data\":[657,535,23],\"color\":[11,10,50,255],\"score\":0.0362869},\r\n{\"type\":32, \"data\":[477,83,2],\"color\":[57,70,70,255],\"score\":0.0362819},\r\n{\"type\":32, \"data\":[325,306,6],\"color\":[76,82,34,255],\"score\":0.0362764},\r\n{\"type\":32, \"data\":[495,53,2],\"color\":[167,175,181,255],\"score\":0.0362693},\r\n{\"type\":32, \"data\":[410,69,1],\"color\":[183,186,193,255],\"score\":0.0362638},\r\n{\"type\":32, \"data\":[96,318,4],\"color\":[31,39,43,255],\"score\":0.0362567},\r\n{\"type\":32, \"data\":[306,58,0],\"color\":[204,196,195,255],\"score\":0.0362515},\r\n{\"type\":32, \"data\":[294,67,1],\"color\":[213,206,194,255],\"score\":0.036244},\r\n{\"type\":32, \"data\":[339,278,4],\"color\":[141,120,87,255],\"score\":0.0362388},\r\n{\"type\":32, \"data\":[464,42,1],\"color\":[133,135,145,255],\"score\":0.036232},\r\n{\"type\":32, \"data\":[548,314,4],\"color\":[67,77,27,255],\"score\":0.0362272},\r\n{\"type\":32, \"data\":[306,70,4],\"color\":[115,103,78,255],\"score\":0.0362225},\r\n{\"type\":32, \"data\":[428,53,1],\"color\":[113,109,80,255],\"score\":0.0362153},\r\n{\"type\":32, \"data\":[326,197,8],\"color\":[132,120,75,255],\"score\":0.0362108},\r\n{\"type\":32, \"data\":[144,145,1],\"color\":[183,186,178,255],\"score\":0.0362032},\r\n{\"type\":32, \"data\":[643,450,5],\"color\":[88,94,51,255],\"score\":0.0361979},\r\n{\"type\":32, \"data\":[355,505,9],\"color\":[81,79,42,255],\"score\":0.0361914},\r\n{\"type\":32, \"data\":[296,525,3],\"color\":[82,92,42,255],\"score\":0.0361862},\r\n{\"type\":32, \"data\":[590,569,1],\"color\":[162,173,171,255],\"score\":0.0361796},\r\n{\"type\":32, \"data\":[444,69,1],\"color\":[210,211,197,255],\"score\":0.0361733},\r\n{\"type\":32, \"data\":[317,541,7],\"color\":[70,86,35,255],\"score\":0.0361679},\r\n{\"type\":32, \"data\":[469,129,1],\"color\":[142,135,99,255],\"score\":0.0361601},\r\n{\"type\":32, \"data\":[473,69,1],\"color\":[206,212,217,255],\"score\":0.0361538},\r\n{\"type\":32, \"data\":[599,234,2],\"color\":[125,123,69,255],\"score\":0.0361472},\r\n{\"type\":32, \"data\":[195,110,9],\"color\":[41,47,27,255],\"score\":0.0361423},\r\n{\"type\":32, \"data\":[191,153,2],\"color\":[168,173,164,255],\"score\":0.0361325},\r\n{\"type\":32, \"data\":[589,535,1],\"color\":[208,206,198,255],\"score\":0.0361279},\r\n{\"type\":32, \"data\":[284,342,3],\"color\":[30,44,32,255],\"score\":0.0361226},\r\n{\"type\":32, \"data\":[592,452,3],\"color\":[95,86,57,255],\"score\":0.0361173},\r\n{\"type\":32, \"data\":[319,277,3],\"color\":[189,148,115,255],\"score\":0.0361125},\r\n{\"type\":32, \"data\":[568,423,27],\"color\":[11,10,50,255],\"score\":0.0361066},\r\n{\"type\":32, \"data\":[537,30,1],\"color\":[109,106,127,255],\"score\":0.0360985},\r\n{\"type\":32, \"data\":[333,261,7],\"color\":[73,74,35,255],\"score\":0.0360932},\r\n{\"type\":32, \"data\":[337,316,4],\"color\":[114,102,65,255],\"score\":0.0360884},\r\n{\"type\":32, \"data\":[545,304,3],\"color\":[85,93,62,255],\"score\":0.0360803},\r\n{\"type\":32, \"data\":[314,106,3],\"color\":[27,26,49,255],\"score\":0.0360745},\r\n{\"type\":32, \"data\":[721,308,11],\"color\":[53,75,16,255],\"score\":0.0360695},\r\n{\"type\":32, \"data\":[486,349,3],\"color\":[62,88,24,255],\"score\":0.0360623},\r\n{\"type\":32, \"data\":[540,41,1],\"color\":[36,35,71,255],\"score\":0.0360506},\r\n{\"type\":32, \"data\":[328,243,4],\"color\":[178,157,107,255],\"score\":0.0360447},\r\n{\"type\":32, \"data\":[57,224,16],\"color\":[11,10,50,255],\"score\":0.0360389},\r\n{\"type\":32, \"data\":[52,153,2],\"color\":[65,86,30,255],\"score\":0.0360349},\r\n{\"type\":32, \"data\":[532,207,3],\"color\":[18,25,38,255],\"score\":0.0360303},\r\n{\"type\":32, \"data\":[394,291,5],\"color\":[67,81,26,255],\"score\":0.0360272},\r\n{\"type\":32, \"data\":[377,348,5],\"color\":[69,85,27,255],\"score\":0.0360212},\r\n{\"type\":32, \"data\":[441,58,2],\"color\":[143,133,101,255],\"score\":0.0360125},\r\n{\"type\":32, \"data\":[274,84,2],\"color\":[42,42,62,255],\"score\":0.0360078},\r\n{\"type\":32, \"data\":[284,94,2],\"color\":[48,42,57,255],\"score\":0.036001},\r\n{\"type\":32, \"data\":[247,177,16],\"color\":[36,50,14,255],\"score\":0.035996},\r\n{\"type\":32, \"data\":[298,193,4],\"color\":[76,91,36,255],\"score\":0.0359905},\r\n{\"type\":32, \"data\":[315,216,2],\"color\":[69,69,26,255],\"score\":0.0359841},\r\n{\"type\":32, \"data\":[599,464,2],\"color\":[154,152,149,255],\"score\":0.0359776},\r\n{\"type\":32, \"data\":[146,142,2],\"color\":[71,78,40,255],\"score\":0.0359709},\r\n{\"type\":32, \"data\":[97,253,11],\"color\":[11,10,50,255],\"score\":0.0359665},\r\n{\"type\":32, \"data\":[549,327,3],\"color\":[92,93,53,255],\"score\":0.0359606},\r\n{\"type\":32, \"data\":[592,381,2],\"color\":[191,162,132,255],\"score\":0.0359526},\r\n{\"type\":32, \"data\":[418,60,2],\"color\":[32,32,60,255],\"score\":0.0359453},\r\n{\"type\":32, \"data\":[466,399,12],\"color\":[11,10,49,255],\"score\":0.0359376},\r\n{\"type\":32, \"data\":[95,161,1],\"color\":[92,113,66,255],\"score\":0.0359319},\r\n{\"type\":32, \"data\":[301,84,2],\"color\":[143,130,79,255],\"score\":0.0359267},\r\n{\"type\":32, \"data\":[521,115,2],\"color\":[23,29,45,255],\"score\":0.0359201},\r\n{\"type\":32, \"data\":[387,65,3],\"color\":[27,27,65,255],\"score\":0.0359152},\r\n{\"type\":32, \"data\":[554,522,27],\"color\":[11,10,49,255],\"score\":0.0359108},\r\n{\"type\":32, \"data\":[290,437,4],\"color\":[103,90,57,255],\"score\":0.0359042},\r\n{\"type\":32, \"data\":[205,455,5],\"color\":[159,114,79,255],\"score\":0.0358994},\r\n{\"type\":32, \"data\":[402,84,1],\"color\":[94,94,69,255],\"score\":0.0358935},\r\n{\"type\":32, \"data\":[137,168,22],\"color\":[11,10,50,255],\"score\":0.0358873},\r\n{\"type\":32, \"data\":[108,297,4],\"color\":[44,68,14,255],\"score\":0.0358827},\r\n{\"type\":32, \"data\":[274,60,1],\"color\":[174,169,147,255],\"score\":0.035877},\r\n{\"type\":32, \"data\":[425,69,2],\"color\":[220,221,214,255],\"score\":0.0358706},\r\n{\"type\":32, \"data\":[40,175,1],\"color\":[81,88,81,255],\"score\":0.0358639},\r\n{\"type\":32, \"data\":[489,165,3],\"color\":[13,12,50,255],\"score\":0.0358598},\r\n{\"type\":32, \"data\":[460,48,1],\"color\":[183,170,147,255],\"score\":0.0358541},\r\n{\"type\":32, \"data\":[476,79,1],\"color\":[221,222,221,255],\"score\":0.0358459},\r\n{\"type\":32, \"data\":[344,103,2],\"color\":[24,24,50,255],\"score\":0.0358411},\r\n{\"type\":32, \"data\":[325,63,2],\"color\":[133,130,118,255],\"score\":0.0358357},\r\n{\"type\":32, \"data\":[578,566,2],\"color\":[34,38,65,255],\"score\":0.0358299},\r\n{\"type\":32, \"data\":[471,66,1],\"color\":[23,23,61,255],\"score\":0.0358214},\r\n{\"type\":32, \"data\":[539,290,7],\"color\":[11,10,50,255],\"score\":0.0358154},\r\n{\"type\":32, \"data\":[510,121,6],\"color\":[104,97,56,255],\"score\":0.0358096},\r\n{\"type\":32, \"data\":[472,78,1],\"color\":[198,198,196,255],\"score\":0.0358017},\r\n{\"type\":32, \"data\":[153,465,14],\"color\":[11,10,50,255],\"score\":0.0357951},\r\n{\"type\":32, \"data\":[383,364,3],\"color\":[99,99,50,255],\"score\":0.0357906},\r\n{\"type\":32, \"data\":[588,511,3],\"color\":[101,106,99,255],\"score\":0.0357854},\r\n{\"type\":32, \"data\":[109,160,9],\"color\":[11,10,50,255],\"score\":0.0357815},\r\n{\"type\":32, \"data\":[587,554,1],\"color\":[200,196,173,255],\"score\":0.0357766},\r\n{\"type\":32, \"data\":[488,53,2],\"color\":[204,210,213,255],\"score\":0.0357638},\r\n{\"type\":32, \"data\":[468,45,2],\"color\":[193,197,191,255],\"score\":0.0357581},\r\n{\"type\":32, \"data\":[536,106,2],\"color\":[181,179,172,255],\"score\":0.0357526},\r\n{\"type\":32, \"data\":[488,181,9],\"color\":[41,47,27,255],\"score\":0.0357484},\r\n{\"type\":32, \"data\":[412,58,4],\"color\":[16,15,52,255],\"score\":0.0357432},\r\n{\"type\":32, \"data\":[411,37,1],\"color\":[92,92,127,255],\"score\":0.0357358},\r\n{\"type\":32, \"data\":[296,301,2],\"color\":[23,20,54,255],\"score\":0.0357292},\r\n{\"type\":32, \"data\":[602,418,4],\"color\":[192,153,116,255],\"score\":0.0357243},\r\n{\"type\":32, \"data\":[326,254,3],\"color\":[113,105,66,255],\"score\":0.0357201},\r\n{\"type\":32, \"data\":[275,66,3],\"color\":[45,41,60,255],\"score\":0.0357148},\r\n{\"type\":32, \"data\":[539,147,10],\"color\":[13,12,50,255],\"score\":0.0357089},\r\n{\"type\":32, \"data\":[300,250,2],\"color\":[231,223,190,255],\"score\":0.0357036},\r\n{\"type\":32, \"data\":[290,285,5],\"color\":[191,172,131,255],\"score\":0.0356972},\r\n{\"type\":32, \"data\":[350,261,5],\"color\":[129,122,77,255],\"score\":0.0356927},\r\n{\"type\":32, \"data\":[311,503,6],\"color\":[182,132,89,255],\"score\":0.0356888},\r\n{\"type\":32, \"data\":[368,102,1],\"color\":[84,114,88,255],\"score\":0.0356818},\r\n{\"type\":32, \"data\":[403,51,1],\"color\":[119,121,130,255],\"score\":0.0356752},\r\n{\"type\":32, \"data\":[353,96,4],\"color\":[83,84,45,255],\"score\":0.0356708},\r\n{\"type\":32, \"data\":[427,73,1],\"color\":[42,41,67,255],\"score\":0.0356635},\r\n{\"type\":32, \"data\":[543,323,1],\"color\":[228,222,198,255],\"score\":0.0356568},\r\n{\"type\":32, \"data\":[279,237,7],\"color\":[126,109,72,255],\"score\":0.0356526},\r\n{\"type\":32, \"data\":[36,111,3],\"color\":[11,10,50,255],\"score\":0.0356468},\r\n{\"type\":32, \"data\":[606,510,1],\"color\":[164,149,118,255],\"score\":0.0356421},\r\n{\"type\":32, \"data\":[734,335,9],\"color\":[70,74,28,255],\"score\":0.0356379},\r\n{\"type\":32, \"data\":[157,231,2],\"color\":[55,85,17,255],\"score\":0.0356303},\r\n{\"type\":32, \"data\":[455,67,0],\"color\":[189,194,201,255],\"score\":0.0356226},\r\n{\"type\":32, \"data\":[697,286,4],\"color\":[49,67,14,255],\"score\":0.0356181},\r\n{\"type\":32, \"data\":[277,419,5],\"color\":[86,82,45,255],\"score\":0.0356132},\r\n{\"type\":32, \"data\":[365,78,1],\"color\":[128,132,109,255],\"score\":0.0356081},\r\n{\"type\":32, \"data\":[549,301,1],\"color\":[196,211,188,255],\"score\":0.0356021},\r\n{\"type\":32, \"data\":[384,306,7],\"color\":[92,97,40,255],\"score\":0.0355983},\r\n{\"type\":32, \"data\":[196,164,5],\"color\":[19,27,39,255],\"score\":0.0355933},\r\n{\"type\":32, \"data\":[226,469,5],\"color\":[142,99,66,255],\"score\":0.0355885},\r\n{\"type\":32, \"data\":[319,106,3],\"color\":[24,23,48,255],\"score\":0.0355828},\r\n{\"type\":32, \"data\":[394,84,1],\"color\":[34,39,62,255],\"score\":0.0355763},\r\n{\"type\":32, \"data\":[295,305,1],\"color\":[168,145,114,255],\"score\":0.0355712},\r\n{\"type\":32, \"data\":[465,72,1],\"color\":[231,231,230,255],\"score\":0.0355658},\r\n{\"type\":32, \"data\":[120,142,1],\"color\":[154,164,150,255],\"score\":0.0355593},\r\n{\"type\":32, \"data\":[605,554,2],\"color\":[15,16,49,255],\"score\":0.0355549},\r\n{\"type\":32, \"data\":[203,330,3],\"color\":[26,43,40,255],\"score\":0.0355509},\r\n{\"type\":32, \"data\":[349,335,4],\"color\":[114,99,64,255],\"score\":0.0355444},\r\n{\"type\":32, \"data\":[435,49,4],\"color\":[103,100,75,255],\"score\":0.0355384},\r\n{\"type\":32, \"data\":[575,140,20],\"color\":[11,10,50,255],\"score\":0.0355346},\r\n{\"type\":32, \"data\":[399,39,1],\"color\":[139,141,161,255],\"score\":0.0355293},\r\n{\"type\":32, \"data\":[604,434,3],\"color\":[167,145,126,255],\"score\":0.0355243},\r\n{\"type\":32, \"data\":[775,321,3],\"color\":[83,87,43,255],\"score\":0.035517},\r\n{\"type\":32, \"data\":[445,116,2],\"color\":[21,20,52,255],\"score\":0.0355106},\r\n{\"type\":32, \"data\":[41,127,3],\"color\":[12,11,49,255],\"score\":0.0355046},\r\n{\"type\":32, \"data\":[310,246,5],\"color\":[96,96,52,255],\"score\":0.0354998},\r\n{\"type\":32, \"data\":[106,101,7],\"color\":[82,80,39,255],\"score\":0.0354931},\r\n{\"type\":32, \"data\":[484,103,3],\"color\":[14,18,52,255],\"score\":0.0354883},\r\n{\"type\":32, \"data\":[430,38,3],\"color\":[214,214,216,255],\"score\":0.0354804},\r\n{\"type\":32, \"data\":[739,316,10],\"color\":[57,73,18,255],\"score\":0.0354767},\r\n{\"type\":32, \"data\":[23,126,5],\"color\":[11,11,50,255],\"score\":0.0354723},\r\n{\"type\":32, \"data\":[412,63,1],\"color\":[229,229,228,255],\"score\":0.0354656},\r\n{\"type\":32, \"data\":[306,206,4],\"color\":[134,122,76,255],\"score\":0.0354601},\r\n{\"type\":32, \"data\":[387,68,1],\"color\":[120,127,155,255],\"score\":0.0354479},\r\n{\"type\":32, \"data\":[94,148,1],\"color\":[130,141,110,255],\"score\":0.0354435},\r\n{\"type\":32, \"data\":[539,216,9],\"color\":[39,65,12,255],\"score\":0.0354395},\r\n{\"type\":32, \"data\":[395,51,2],\"color\":[20,19,57,255],\"score\":0.0354333},\r\n{\"type\":32, \"data\":[35,217,2],\"color\":[58,86,29,255],\"score\":0.0354283},\r\n{\"type\":32, \"data\":[424,37,2],\"color\":[210,209,215,255],\"score\":0.0354175},\r\n{\"type\":32, \"data\":[616,507,8],\"color\":[103,88,58,255],\"score\":0.0354121},\r\n{\"type\":32, \"data\":[307,271,2],\"color\":[107,89,58,255],\"score\":0.0354064},\r\n{\"type\":32, \"data\":[307,53,0],\"color\":[199,198,221,255],\"score\":0.0354003},\r\n{\"type\":32, \"data\":[547,115,1],\"color\":[121,115,92,255],\"score\":0.0353953},\r\n{\"type\":32, \"data\":[383,110,6],\"color\":[87,87,48,255],\"score\":0.0353896},\r\n{\"type\":32, \"data\":[526,128,5],\"color\":[100,90,58,255],\"score\":0.0353853},\r\n{\"type\":32, \"data\":[585,560,2],\"color\":[62,66,44,255],\"score\":0.0353804},\r\n{\"type\":32, \"data\":[599,502,7],\"color\":[100,85,55,255],\"score\":0.0353759},\r\n{\"type\":32, \"data\":[398,84,1],\"color\":[204,195,187,255],\"score\":0.0353702},\r\n{\"type\":32, \"data\":[321,53,1],\"color\":[166,167,190,255],\"score\":0.0353648},\r\n{\"type\":32, \"data\":[544,120,4],\"color\":[15,14,50,255],\"score\":0.0353603},\r\n{\"type\":32, \"data\":[361,295,3],\"color\":[189,156,114,255],\"score\":0.0353561},\r\n{\"type\":32, \"data\":[658,364,5],\"color\":[79,79,35,255],\"score\":0.0353524},\r\n{\"type\":32, \"data\":[28,253,4],\"color\":[47,67,20,255],\"score\":0.0353476},\r\n{\"type\":32, \"data\":[319,88,7],\"color\":[124,111,70,255],\"score\":0.0353424},\r\n{\"type\":32, \"data\":[567,365,1],\"color\":[193,186,151,255],\"score\":0.0353369},\r\n{\"type\":32, \"data\":[436,43,1],\"color\":[10,7,46,255],\"score\":0.03533},\r\n{\"type\":32, \"data\":[722,355,4],\"color\":[101,94,54,255],\"score\":0.0353246},\r\n{\"type\":32, \"data\":[455,119,3],\"color\":[35,34,59,255],\"score\":0.035319},\r\n{\"type\":32, \"data\":[566,373,5],\"color\":[12,11,50,255],\"score\":0.035314},\r\n{\"type\":32, \"data\":[475,88,4],\"color\":[121,111,84,255],\"score\":0.0353091},\r\n{\"type\":32, \"data\":[494,262,3],\"color\":[25,43,27,255],\"score\":0.0353046},\r\n{\"type\":32, \"data\":[597,574,1],\"color\":[169,181,185,255],\"score\":0.0352977},\r\n{\"type\":32, \"data\":[272,228,4],\"color\":[78,73,38,255],\"score\":0.035293},\r\n{\"type\":32, \"data\":[315,311,3],\"color\":[146,128,85,255],\"score\":0.0352878},\r\n{\"type\":32, \"data\":[420,36,1],\"color\":[200,200,208,255],\"score\":0.0352825},\r\n{\"type\":32, \"data\":[595,466,1],\"color\":[69,68,36,255],\"score\":0.0352781},\r\n{\"type\":32, \"data\":[83,338,18],\"color\":[11,10,50,255],\"score\":0.0352723},\r\n{\"type\":32, \"data\":[298,72,3],\"color\":[53,50,63,255],\"score\":0.035265},\r\n{\"type\":32, \"data\":[491,52,2],\"color\":[188,195,197,255],\"score\":0.0352583},\r\n{\"type\":32, \"data\":[289,141,3],\"color\":[22,24,38,255],\"score\":0.0352544},\r\n{\"type\":32, \"data\":[98,143,1],\"color\":[183,188,173,255],\"score\":0.0352481},\r\n{\"type\":32, \"data\":[314,54,3],\"color\":[166,168,179,255],\"score\":0.035243},\r\n{\"type\":32, \"data\":[471,85,2],\"color\":[84,87,83,255],\"score\":0.0352389},\r\n{\"type\":32, \"data\":[455,61,2],\"color\":[164,160,143,255],\"score\":0.0352329},\r\n{\"type\":32, \"data\":[336,249,5],\"color\":[73,75,34,255],\"score\":0.0352288},\r\n{\"type\":32, \"data\":[585,564,1],\"color\":[62,71,70,255],\"score\":0.0352244},\r\n{\"type\":32, \"data\":[309,303,4],\"color\":[164,140,102,255],\"score\":0.0352191},\r\n{\"type\":32, \"data\":[422,41,1],\"color\":[39,38,62,255],\"score\":0.0352097},\r\n{\"type\":32, \"data\":[487,48,2],\"color\":[135,145,129,255],\"score\":0.0352045},\r\n{\"type\":32, \"data\":[450,295,8],\"color\":[60,79,20,255],\"score\":0.0352002},\r\n{\"type\":32, \"data\":[438,77,0],\"color\":[178,175,174,255],\"score\":0.0351944},\r\n{\"type\":32, \"data\":[349,49,1],\"color\":[208,211,209,255],\"score\":0.0351878},\r\n{\"type\":32, \"data\":[441,55,1],\"color\":[24,25,51,255],\"score\":0.0351799},\r\n{\"type\":32, \"data\":[374,370,3],\"color\":[49,66,25,255],\"score\":0.0351756},\r\n{\"type\":32, \"data\":[147,339,2],\"color\":[61,76,24,255],\"score\":0.0351705},\r\n{\"type\":32, \"data\":[155,335,2],\"color\":[44,52,30,255],\"score\":0.0351665},\r\n{\"type\":32, \"data\":[173,495,3],\"color\":[103,98,55,255],\"score\":0.0351612},\r\n{\"type\":32, \"data\":[372,49,3],\"color\":[13,12,51,255],\"score\":0.0351557},\r\n{\"type\":32, \"data\":[368,64,2],\"color\":[158,162,171,255],\"score\":0.0351489},\r\n{\"type\":32, \"data\":[342,539,5],\"color\":[29,36,21,255],\"score\":0.0351442},\r\n{\"type\":32, \"data\":[399,43,3],\"color\":[208,209,206,255],\"score\":0.0351361},\r\n{\"type\":32, \"data\":[459,37,3],\"color\":[227,226,227,255],\"score\":0.0351321},\r\n{\"type\":32, \"data\":[45,269,7],\"color\":[52,72,17,255],\"score\":0.0351256},\r\n{\"type\":32, \"data\":[25,147,2],\"color\":[60,65,52,255],\"score\":0.0351202},\r\n{\"type\":32, \"data\":[584,520,1],\"color\":[90,102,87,255],\"score\":0.035114},\r\n{\"type\":32, \"data\":[341,79,2],\"color\":[173,166,133,255],\"score\":0.0351061},\r\n{\"type\":32, \"data\":[177,153,2],\"color\":[170,178,168,255],\"score\":0.0350976},\r\n{\"type\":32, \"data\":[470,59,1],\"color\":[162,172,179,255],\"score\":0.0350931},\r\n{\"type\":32, \"data\":[169,249,4],\"color\":[50,77,14,255],\"score\":0.0350883},\r\n{\"type\":32, \"data\":[546,218,6],\"color\":[39,63,13,255],\"score\":0.0350839},\r\n{\"type\":32, \"data\":[259,151,15],\"color\":[40,56,12,255],\"score\":0.0350793},\r\n{\"type\":32, \"data\":[434,55,2],\"color\":[43,42,61,255],\"score\":0.0350732},\r\n{\"type\":32, \"data\":[218,335,5],\"color\":[12,14,50,255],\"score\":0.0350697},\r\n{\"type\":32, \"data\":[226,101,6],\"color\":[64,67,30,255],\"score\":0.0350645},\r\n{\"type\":32, \"data\":[374,244,6],\"color\":[87,95,45,255],\"score\":0.0350599},\r\n{\"type\":32, \"data\":[725,387,10],\"color\":[94,87,46,255],\"score\":0.0350551},\r\n{\"type\":32, \"data\":[297,56,1],\"color\":[170,173,190,255],\"score\":0.0350448},\r\n{\"type\":32, \"data\":[350,67,1],\"color\":[23,22,58,255],\"score\":0.0350384},\r\n{\"type\":32, \"data\":[388,504,18],\"color\":[11,10,50,255],\"score\":0.0350326},\r\n{\"type\":32, \"data\":[242,157,3],\"color\":[82,83,49,255],\"score\":0.0350273},\r\n{\"type\":32, \"data\":[652,227,18],\"color\":[11,10,50,255],\"score\":0.0350233},\r\n{\"type\":32, \"data\":[318,316,2],\"color\":[135,116,73,255],\"score\":0.0350173},\r\n{\"type\":32, \"data\":[421,45,3],\"color\":[212,214,215,255],\"score\":0.035011},\r\n{\"type\":32, \"data\":[775,336,4],\"color\":[68,88,22,255],\"score\":0.0350059},\r\n{\"type\":32, \"data\":[329,258,2],\"color\":[112,102,63,255],\"score\":0.0350013},\r\n{\"type\":32, \"data\":[321,235,3],\"color\":[105,96,60,255],\"score\":0.034996},\r\n{\"type\":32, \"data\":[334,296,2],\"color\":[234,199,155,255],\"score\":0.0349905},\r\n{\"type\":32, \"data\":[440,78,1],\"color\":[203,198,147,255],\"score\":0.0349866},\r\n{\"type\":32, \"data\":[539,38,2],\"color\":[155,156,166,255],\"score\":0.0349805},\r\n{\"type\":32, \"data\":[273,105,4],\"color\":[91,84,47,255],\"score\":0.0349763},\r\n{\"type\":32, \"data\":[302,275,5],\"color\":[141,117,83,255],\"score\":0.0349712},\r\n{\"type\":32, \"data\":[340,67,2],\"color\":[129,121,100,255],\"score\":0.034959},\r\n{\"type\":32, \"data\":[526,95,3],\"color\":[174,180,179,255],\"score\":0.0349542},\r\n{\"type\":32, \"data\":[70,158,3],\"color\":[14,15,49,255],\"score\":0.034947},\r\n{\"type\":32, \"data\":[282,513,1],\"color\":[192,162,132,255],\"score\":0.0349426},\r\n{\"type\":32, \"data\":[465,415,2],\"color\":[55,81,26,255],\"score\":0.0349378},\r\n{\"type\":32, \"data\":[397,69,1],\"color\":[247,245,236,255],\"score\":0.0349337},\r\n{\"type\":32, \"data\":[597,251,9],\"color\":[63,85,19,255],\"score\":0.0349301},\r\n{\"type\":32, \"data\":[331,301,3],\"color\":[154,129,93,255],\"score\":0.0349256},\r\n{\"type\":32, \"data\":[598,208,4],\"color\":[45,57,16,255],\"score\":0.0349206},\r\n{\"type\":32, \"data\":[627,466,6],\"color\":[108,98,63,255],\"score\":0.0349168},\r\n{\"type\":32, \"data\":[376,73,2],\"color\":[11,10,50,255],\"score\":0.0349106},\r\n{\"type\":32, \"data\":[236,453,8],\"color\":[155,114,78,255],\"score\":0.034907},\r\n{\"type\":32, \"data\":[409,72,2],\"color\":[11,10,50,255],\"score\":0.0349},\r\n{\"type\":32, \"data\":[499,354,2],\"color\":[57,72,28,255],\"score\":0.0348958},\r\n{\"type\":32, \"data\":[375,321,4],\"color\":[160,142,95,255],\"score\":0.034891},\r\n{\"type\":32, \"data\":[363,513,4],\"color\":[38,48,23,255],\"score\":0.0348862},\r\n{\"type\":32, \"data\":[316,499,3],\"color\":[198,157,108,255],\"score\":0.0348807},\r\n{\"type\":32, \"data\":[591,535,1],\"color\":[217,212,201,255],\"score\":0.0348702},\r\n{\"type\":32, \"data\":[268,102,2],\"color\":[103,93,60,255],\"score\":0.034866},\r\n{\"type\":32, \"data\":[303,502,2],\"color\":[217,176,122,255],\"score\":0.0348623},\r\n{\"type\":32, \"data\":[533,95,2],\"color\":[96,99,108,255],\"score\":0.0348556},\r\n{\"type\":32, \"data\":[424,81,1],\"color\":[11,10,50,255],\"score\":0.0348494},\r\n{\"type\":32, \"data\":[399,65,1],\"color\":[62,63,97,255],\"score\":0.0348401},\r\n{\"type\":32, \"data\":[515,359,3],\"color\":[74,88,32,255],\"score\":0.0348337},\r\n{\"type\":32, \"data\":[491,180,3],\"color\":[24,27,38,255],\"score\":0.034831},\r\n{\"type\":32, \"data\":[316,260,5],\"color\":[187,148,110,255],\"score\":0.034827},\r\n{\"type\":32, \"data\":[175,94,8],\"color\":[12,11,49,255],\"score\":0.0348225},\r\n{\"type\":32, \"data\":[480,35,5],\"color\":[215,215,216,255],\"score\":0.0348172},\r\n{\"type\":32, \"data\":[309,307,2],\"color\":[198,167,126,255],\"score\":0.0348129},\r\n{\"type\":32, \"data\":[313,207,5],\"color\":[154,135,91,255],\"score\":0.0348073},\r\n{\"type\":32, \"data\":[611,457,2],\"color\":[167,134,104,255],\"score\":0.0348026},\r\n{\"type\":32, \"data\":[269,37,22],\"color\":[11,10,50,255],\"score\":0.0347988},\r\n{\"type\":32, \"data\":[357,320,3],\"color\":[155,133,89,255],\"score\":0.034794},\r\n{\"type\":32, \"data\":[217,318,5],\"color\":[33,52,13,255],\"score\":0.0347893},\r\n{\"type\":32, \"data\":[328,278,4],\"color\":[130,113,79,255],\"score\":0.0347854},\r\n{\"type\":32, \"data\":[451,311,8],\"color\":[11,10,49,255],\"score\":0.0347803},\r\n{\"type\":32, \"data\":[756,403,7],\"color\":[11,10,50,255],\"score\":0.034776},\r\n{\"type\":32, \"data\":[338,288,1],\"color\":[231,213,173,255],\"score\":0.0347683},\r\n{\"type\":32, \"data\":[504,200,19],\"color\":[39,55,14,255],\"score\":0.0347644},\r\n{\"type\":32, \"data\":[496,85,1],\"color\":[203,207,210,255],\"score\":0.0347608},\r\n{\"type\":32, \"data\":[273,246,1],\"color\":[206,186,151,255],\"score\":0.0347556},\r\n{\"type\":32, \"data\":[131,363,26],\"color\":[11,10,50,255],\"score\":0.0347521},\r\n{\"type\":32, \"data\":[59,160,7],\"color\":[12,11,49,255],\"score\":0.0347459},\r\n{\"type\":32, \"data\":[590,503,2],\"color\":[120,121,120,255],\"score\":0.0347401},\r\n{\"type\":32, \"data\":[348,51,1],\"color\":[70,72,89,255],\"score\":0.0347315},\r\n{\"type\":32, \"data\":[404,55,2],\"color\":[28,27,60,255],\"score\":0.0347272},\r\n{\"type\":32, \"data\":[261,252,3],\"color\":[52,57,17,255],\"score\":0.0347215},\r\n{\"type\":32, \"data\":[216,169,2],\"color\":[133,142,124,255],\"score\":0.0347158},\r\n{\"type\":32, \"data\":[313,272,2],\"color\":[222,169,127,255],\"score\":0.0347122},\r\n{\"type\":32, \"data\":[136,102,6],\"color\":[76,73,39,255],\"score\":0.0347084},\r\n{\"type\":32, \"data\":[485,80,1],\"color\":[219,224,222,255],\"score\":0.0347016},\r\n{\"type\":32, \"data\":[171,228,2],\"color\":[48,75,25,255],\"score\":0.0346954},\r\n{\"type\":32, \"data\":[31,232,6],\"color\":[11,10,50,255],\"score\":0.0346899},\r\n{\"type\":32, \"data\":[165,153,4],\"color\":[13,16,49,255],\"score\":0.0346821},\r\n{\"type\":32, \"data\":[429,46,1],\"color\":[106,100,58,255],\"score\":0.034675},\r\n{\"type\":32, \"data\":[299,59,3],\"color\":[32,32,67,255],\"score\":0.0346696},\r\n{\"type\":32, \"data\":[412,39,1],\"color\":[15,14,53,255],\"score\":0.0346636},\r\n{\"type\":32, \"data\":[364,80,1],\"color\":[30,30,61,255],\"score\":0.034659},\r\n{\"type\":32, \"data\":[79,153,7],\"color\":[59,71,31,255],\"score\":0.0346546},\r\n{\"type\":32, \"data\":[547,289,1],\"color\":[149,166,161,255],\"score\":0.0346487},\r\n{\"type\":32, \"data\":[518,50,3],\"color\":[27,25,56,255],\"score\":0.034645},\r\n{\"type\":32, \"data\":[29,84,19],\"color\":[11,10,50,255],\"score\":0.0346395},\r\n{\"type\":32, \"data\":[157,142,2],\"color\":[158,157,149,255],\"score\":0.0346334},\r\n{\"type\":32, \"data\":[348,171,10],\"color\":[36,49,15,255],\"score\":0.034629},\r\n{\"type\":32, \"data\":[339,54,3],\"color\":[17,16,56,255],\"score\":0.0346232},\r\n{\"type\":32, \"data\":[591,474,3],\"color\":[56,68,24,255],\"score\":0.0346161},\r\n{\"type\":32, \"data\":[156,200,4],\"color\":[61,85,19,255],\"score\":0.0346124},\r\n{\"type\":32, \"data\":[366,57,2],\"color\":[22,21,56,255],\"score\":0.0346057},\r\n{\"type\":32, \"data\":[420,74,1],\"color\":[27,27,64,255],\"score\":0.0346006},\r\n{\"type\":32, \"data\":[241,85,2],\"color\":[97,88,65,255],\"score\":0.0345965},\r\n{\"type\":32, \"data\":[234,322,6],\"color\":[39,59,16,255],\"score\":0.0345916},\r\n{\"type\":32, \"data\":[522,43,1],\"color\":[149,148,154,255],\"score\":0.0345874},\r\n{\"type\":32, \"data\":[289,59,1],\"color\":[100,100,129,255],\"score\":0.0345813},\r\n{\"type\":32, \"data\":[160,89,10],\"color\":[11,10,50,255],\"score\":0.0345775},\r\n{\"type\":32, \"data\":[313,54,1],\"color\":[91,92,115,255],\"score\":0.0345685},\r\n{\"type\":32, \"data\":[299,315,2],\"color\":[209,186,147,255],\"score\":0.0345631},\r\n{\"type\":32, \"data\":[591,541,2],\"color\":[158,146,116,255],\"score\":0.0345574},\r\n{\"type\":32, \"data\":[299,310,2],\"color\":[148,123,90,255],\"score\":0.0345485},\r\n{\"type\":32, \"data\":[492,107,2],\"color\":[123,114,63,255],\"score\":0.0345439},\r\n{\"type\":32, \"data\":[335,325,6],\"color\":[63,72,24,255],\"score\":0.0345399},\r\n{\"type\":32, \"data\":[343,479,3],\"color\":[70,66,34,255],\"score\":0.0345351},\r\n{\"type\":32, \"data\":[364,66,1],\"color\":[233,237,231,255],\"score\":0.0345305},\r\n{\"type\":32, \"data\":[305,54,1],\"color\":[68,69,98,255],\"score\":0.0345248},\r\n{\"type\":32, \"data\":[384,82,2],\"color\":[83,78,55,255],\"score\":0.0345203},\r\n{\"type\":32, \"data\":[392,322,7],\"color\":[11,10,50,255],\"score\":0.0345145},\r\n{\"type\":32, \"data\":[449,118,2],\"color\":[38,39,57,255],\"score\":0.0345104},\r\n{\"type\":32, \"data\":[79,72,19],\"color\":[11,10,50,255],\"score\":0.0345066},\r\n{\"type\":32, \"data\":[611,430,1],\"color\":[208,189,163,255],\"score\":0.0345014},\r\n{\"type\":32, \"data\":[500,49,3],\"color\":[102,109,107,255],\"score\":0.0344967},\r\n{\"type\":32, \"data\":[147,261,15],\"color\":[11,10,49,255],\"score\":0.0344932},\r\n{\"type\":32, \"data\":[425,58,3],\"color\":[17,16,54,255],\"score\":0.0344887},\r\n{\"type\":32, \"data\":[582,362,4],\"color\":[69,67,30,255],\"score\":0.0344849},\r\n{\"type\":32, \"data\":[288,516,4],\"color\":[134,100,69,255],\"score\":0.0344808},\r\n{\"type\":32, \"data\":[320,486,7],\"color\":[164,122,86,255],\"score\":0.0344768},\r\n{\"type\":32, \"data\":[318,531,7],\"color\":[101,95,55,255],\"score\":0.0344732},\r\n{\"type\":32, \"data\":[587,232,2],\"color\":[129,127,82,255],\"score\":0.0344689},\r\n{\"type\":32, \"data\":[594,513,5],\"color\":[100,87,60,255],\"score\":0.034464},\r\n{\"type\":32, \"data\":[554,39,3],\"color\":[19,18,57,255],\"score\":0.0344573},\r\n{\"type\":32, \"data\":[415,51,2],\"color\":[208,209,206,255],\"score\":0.0344507},\r\n{\"type\":32, \"data\":[580,394,16],\"color\":[11,10,50,255],\"score\":0.0344435},\r\n{\"type\":32, \"data\":[309,54,0],\"color\":[13,12,52,255],\"score\":0.0344389},\r\n{\"type\":32, \"data\":[240,193,1],\"color\":[137,141,128,255],\"score\":0.0344337},\r\n{\"type\":32, \"data\":[623,448,8],\"color\":[88,84,47,255],\"score\":0.0344308},\r\n{\"type\":32, \"data\":[200,238,27],\"color\":[11,10,50,255],\"score\":0.0344276},\r\n{\"type\":32, \"data\":[286,277,4],\"color\":[199,171,126,255],\"score\":0.0344229},\r\n{\"type\":32, \"data\":[639,350,5],\"color\":[57,78,18,255],\"score\":0.0344185},\r\n{\"type\":32, \"data\":[392,69,1],\"color\":[223,223,220,255],\"score\":0.0344138},\r\n{\"type\":32, \"data\":[689,446,6],\"color\":[62,73,27,255],\"score\":0.0344106},\r\n{\"type\":32, \"data\":[547,127,1],\"color\":[205,202,201,255],\"score\":0.0344056},\r\n{\"type\":32, \"data\":[181,524,4],\"color\":[51,70,23,255],\"score\":0.0344004},\r\n{\"type\":32, \"data\":[503,49,1],\"color\":[12,11,50,255],\"score\":0.0343956},\r\n{\"type\":32, \"data\":[294,509,4],\"color\":[145,111,76,255],\"score\":0.0343909},\r\n{\"type\":32, \"data\":[63,168,1],\"color\":[120,136,97,255],\"score\":0.0343847},\r\n{\"type\":32, \"data\":[65,300,5],\"color\":[11,10,50,255],\"score\":0.034379},\r\n{\"type\":32, \"data\":[348,98,5],\"color\":[84,82,42,255],\"score\":0.0343744},\r\n{\"type\":32, \"data\":[443,43,0],\"color\":[29,31,63,255],\"score\":0.0343677},\r\n{\"type\":32, \"data\":[320,264,2],\"color\":[144,114,80,255],\"score\":0.034363},\r\n{\"type\":32, \"data\":[325,310,6],\"color\":[67,78,27,255],\"score\":0.0343594},\r\n{\"type\":32, \"data\":[568,33,1],\"color\":[91,91,122,255],\"score\":0.0343506},\r\n{\"type\":32, \"data\":[451,69,2],\"color\":[238,236,235,255],\"score\":0.034343},\r\n{\"type\":32, \"data\":[581,374,2],\"color\":[154,129,97,255],\"score\":0.0343379},\r\n{\"type\":32, \"data\":[593,571,1],\"color\":[58,71,73,255],\"score\":0.0343337},\r\n{\"type\":32, \"data\":[204,441,6],\"color\":[12,11,50,255],\"score\":0.0343295},\r\n{\"type\":32, \"data\":[549,353,10],\"color\":[11,10,50,255],\"score\":0.0343257},\r\n{\"type\":32, \"data\":[320,67,1],\"color\":[47,45,73,255],\"score\":0.0343208},\r\n{\"type\":32, \"data\":[387,58,2],\"color\":[21,20,57,255],\"score\":0.034315},\r\n{\"type\":32, \"data\":[272,185,5],\"color\":[62,70,36,255],\"score\":0.0343104},\r\n{\"type\":32, \"data\":[351,274,6],\"color\":[130,117,79,255],\"score\":0.0343061},\r\n{\"type\":32, \"data\":[471,226,2],\"color\":[12,20,47,255],\"score\":0.0343007},\r\n{\"type\":32, \"data\":[414,39,1],\"color\":[11,10,50,255],\"score\":0.0342961},\r\n{\"type\":32, \"data\":[318,112,5],\"color\":[78,75,46,255],\"score\":0.0342911},\r\n{\"type\":32, \"data\":[521,52,1],\"color\":[73,73,84,255],\"score\":0.034287},\r\n{\"type\":32, \"data\":[468,47,1],\"color\":[114,111,86,255],\"score\":0.0342812},\r\n{\"type\":32, \"data\":[59,306,2],\"color\":[57,78,15,255],\"score\":0.0342767},\r\n{\"type\":32, \"data\":[395,54,1],\"color\":[125,124,111,255],\"score\":0.0342711},\r\n{\"type\":32, \"data\":[279,61,2],\"color\":[145,136,103,255],\"score\":0.0342666},\r\n{\"type\":32, \"data\":[567,33,0],\"color\":[221,223,236,255],\"score\":0.0342611},\r\n{\"type\":32, \"data\":[254,345,3],\"color\":[67,90,44,255],\"score\":0.0342562},\r\n{\"type\":32, \"data\":[549,38,0],\"color\":[168,168,194,255],\"score\":0.0342519},\r\n{\"type\":32, \"data\":[473,41,1],\"color\":[119,118,135,255],\"score\":0.0342459},\r\n{\"type\":32, \"data\":[460,65,1],\"color\":[12,11,51,255],\"score\":0.0342375},\r\n{\"type\":32, \"data\":[580,534,1],\"color\":[227,231,232,255],\"score\":0.0342324},\r\n{\"type\":32, \"data\":[360,70,2],\"color\":[14,14,53,255],\"score\":0.0342283},\r\n{\"type\":32, \"data\":[218,174,4],\"color\":[68,84,55,255],\"score\":0.0342224},\r\n{\"type\":32, \"data\":[540,334,9],\"color\":[11,10,50,255],\"score\":0.0342175},\r\n{\"type\":32, \"data\":[591,568,0],\"color\":[224,228,240,255],\"score\":0.0342129},\r\n{\"type\":32, \"data\":[451,39,3],\"color\":[210,210,213,255],\"score\":0.0342072},\r\n{\"type\":32, \"data\":[24,180,2],\"color\":[48,54,62,255],\"score\":0.0342018},\r\n{\"type\":32, \"data\":[177,476,4],\"color\":[179,128,92,255],\"score\":0.0341977},\r\n{\"type\":32, \"data\":[461,34,3],\"color\":[199,199,203,255],\"score\":0.0341928},\r\n{\"type\":32, \"data\":[295,62,2],\"color\":[68,68,83,255],\"score\":0.0341872},\r\n{\"type\":32, \"data\":[134,137,4],\"color\":[51,60,18,255],\"score\":0.0341824},\r\n{\"type\":32, \"data\":[34,297,12],\"color\":[11,10,50,255],\"score\":0.0341788},\r\n{\"type\":32, \"data\":[475,417,3],\"color\":[13,12,50,255],\"score\":0.0341754},\r\n{\"type\":32, \"data\":[34,246,4],\"color\":[11,10,50,255],\"score\":0.0341706},\r\n{\"type\":32, \"data\":[353,76,6],\"color\":[11,10,50,255],\"score\":0.0341648},\r\n{\"type\":32, \"data\":[303,106,2],\"color\":[15,14,49,255],\"score\":0.0341611},\r\n{\"type\":32, \"data\":[447,82,2],\"color\":[128,117,101,255],\"score\":0.0341571},\r\n{\"type\":32, \"data\":[440,61,2],\"color\":[208,204,194,255],\"score\":0.0341516},\r\n{\"type\":32, \"data\":[584,535,2],\"color\":[128,131,132,255],\"score\":0.0341471},\r\n{\"type\":32, \"data\":[364,347,1],\"color\":[23,21,53,255],\"score\":0.0341431},\r\n{\"type\":32, \"data\":[465,65,1],\"color\":[20,18,59,255],\"score\":0.0341372},\r\n{\"type\":32, \"data\":[109,132,1],\"color\":[161,163,149,255],\"score\":0.0341312},\r\n{\"type\":32, \"data\":[597,483,1],\"color\":[167,155,144,255],\"score\":0.0341258},\r\n{\"type\":32, \"data\":[266,195,8],\"color\":[38,51,15,255],\"score\":0.0341224},\r\n{\"type\":32, \"data\":[318,516,6],\"color\":[142,107,73,255],\"score\":0.0341191},\r\n{\"type\":32, \"data\":[442,34,1],\"color\":[201,202,207,255],\"score\":0.0341141},\r\n{\"type\":32, \"data\":[142,311,4],\"color\":[27,37,33,255],\"score\":0.0341111},\r\n{\"type\":32, \"data\":[656,423,19],\"color\":[62,73,27,255],\"score\":0.0341076},\r\n{\"type\":32, \"data\":[398,46,2],\"color\":[155,156,147,255],\"score\":0.0341005},\r\n{\"type\":32, \"data\":[644,433,4],\"color\":[80,82,45,255],\"score\":0.0340964},\r\n{\"type\":32, \"data\":[233,109,5],\"color\":[37,37,31,255],\"score\":0.0340932},\r\n{\"type\":32, \"data\":[301,290,2],\"color\":[227,192,145,255],\"score\":0.0340892},\r\n{\"type\":32, \"data\":[332,98,3],\"color\":[77,78,38,255],\"score\":0.0340858},\r\n{\"type\":32, \"data\":[428,52,1],\"color\":[113,108,77,255],\"score\":0.0340816},\r\n{\"type\":32, \"data\":[316,355,28],\"color\":[11,10,49,255],\"score\":0.0340787},\r\n{\"type\":32, \"data\":[413,49,1],\"color\":[107,112,86,255],\"score\":0.0340744},\r\n{\"type\":32, \"data\":[470,75,2],\"color\":[23,23,60,255],\"score\":0.0340675},\r\n{\"type\":32, \"data\":[269,63,2],\"color\":[110,99,70,255],\"score\":0.0340632},\r\n{\"type\":32, \"data\":[355,104,2],\"color\":[16,15,49,255],\"score\":0.0340584},\r\n{\"type\":32, \"data\":[329,73,3],\"color\":[16,15,51,255],\"score\":0.0340523},\r\n{\"type\":32, \"data\":[179,515,3],\"color\":[57,65,29,255],\"score\":0.0340493},\r\n{\"type\":32, \"data\":[398,101,2],\"color\":[22,34,38,255],\"score\":0.0340451},\r\n{\"type\":32, \"data\":[580,559,1],\"color\":[147,156,156,255],\"score\":0.0340393},\r\n{\"type\":32, \"data\":[164,144,2],\"color\":[210,209,206,255],\"score\":0.0340354},\r\n{\"type\":32, \"data\":[386,277,5],\"color\":[83,94,35,255],\"score\":0.0340322},\r\n{\"type\":32, \"data\":[606,380,3],\"color\":[152,123,82,255],\"score\":0.0340271},\r\n{\"type\":32, \"data\":[59,169,2],\"color\":[63,80,43,255],\"score\":0.0340206},\r\n{\"type\":32, \"data\":[292,297,1],\"color\":[200,181,137,255],\"score\":0.0340142},\r\n{\"type\":32, \"data\":[514,54,1],\"color\":[177,180,162,255],\"score\":0.0340103},\r\n{\"type\":32, \"data\":[238,273,19],\"color\":[11,10,50,255],\"score\":0.0340065},\r\n{\"type\":32, \"data\":[404,82,1],\"color\":[73,61,58,255],\"score\":0.0340021},\r\n{\"type\":32, \"data\":[181,155,1],\"color\":[129,143,131,255],\"score\":0.0339964},\r\n{\"type\":32, \"data\":[299,435,2],\"color\":[32,80,77,255],\"score\":0.0339916},\r\n{\"type\":32, \"data\":[568,114,1],\"color\":[113,122,102,255],\"score\":0.0339855},\r\n{\"type\":32, \"data\":[287,94,1],\"color\":[30,27,52,255],\"score\":0.0339818},\r\n{\"type\":32, \"data\":[345,456,3],\"color\":[74,73,41,255],\"score\":0.0339779},\r\n{\"type\":32, \"data\":[366,47,3],\"color\":[11,10,50,255],\"score\":0.0339711},\r\n{\"type\":32, \"data\":[322,126,6],\"color\":[47,47,34,255],\"score\":0.0339679},\r\n{\"type\":32, \"data\":[341,289,1],\"color\":[91,77,37,255],\"score\":0.033963},\r\n{\"type\":32, \"data\":[453,27,6],\"color\":[11,10,50,255],\"score\":0.0339569},\r\n{\"type\":32, \"data\":[435,65,2],\"color\":[24,23,59,255],\"score\":0.0339521},\r\n{\"type\":32, \"data\":[593,459,2],\"color\":[71,70,39,255],\"score\":0.0339484},\r\n{\"type\":32, \"data\":[231,186,2],\"color\":[68,80,60,255],\"score\":0.0339447},\r\n{\"type\":32, \"data\":[450,76,2],\"color\":[11,10,50,255],\"score\":0.0339392},\r\n{\"type\":32, \"data\":[670,254,8],\"color\":[11,11,50,255],\"score\":0.0339359},\r\n{\"type\":32, \"data\":[663,353,8],\"color\":[46,67,15,255],\"score\":0.0339325},\r\n{\"type\":32, \"data\":[290,505,4],\"color\":[195,144,102,255],\"score\":0.0339282},\r\n{\"type\":32, \"data\":[313,56,1],\"color\":[209,212,205,255],\"score\":0.0339217},\r\n{\"type\":32, \"data\":[291,229,5],\"color\":[69,69,32,255],\"score\":0.0339176},\r\n{\"type\":32, \"data\":[37,137,7],\"color\":[64,73,30,255],\"score\":0.0339109},\r\n{\"type\":32, \"data\":[462,138,3],\"color\":[14,13,49,255],\"score\":0.0339068},\r\n{\"type\":32, \"data\":[514,49,3],\"color\":[15,14,53,255],\"score\":0.0339004},\r\n{\"type\":32, \"data\":[510,109,2],\"color\":[26,93,93,255],\"score\":0.0338951},\r\n{\"type\":32, \"data\":[465,88,3],\"color\":[170,155,108,255],\"score\":0.0338903},\r\n{\"type\":32, \"data\":[359,325,1],\"color\":[233,219,175,255],\"score\":0.0338849},\r\n{\"type\":32, \"data\":[747,367,4],\"color\":[105,85,49,255],\"score\":0.0338815},\r\n{\"type\":32, \"data\":[589,558,4],\"color\":[112,97,56,255],\"score\":0.0338752},\r\n{\"type\":32, \"data\":[611,597,19],\"color\":[11,10,50,255],\"score\":0.0338712},\r\n{\"type\":32, \"data\":[480,233,2],\"color\":[21,28,41,255],\"score\":0.033867},\r\n{\"type\":32, \"data\":[480,39,2],\"color\":[175,175,182,255],\"score\":0.0338612},\r\n{\"type\":32, \"data\":[417,45,2],\"color\":[237,239,241,255],\"score\":0.0338566},\r\n{\"type\":32, \"data\":[253,352,5],\"color\":[12,11,50,255],\"score\":0.0338521},\r\n{\"type\":32, \"data\":[423,193,15],\"color\":[34,48,14,255],\"score\":0.0338491},\r\n{\"type\":32, \"data\":[454,43,1],\"color\":[16,15,46,255],\"score\":0.0338429},\r\n{\"type\":32, \"data\":[430,402,11],\"color\":[11,10,50,255],\"score\":0.0338388},\r\n{\"type\":32, \"data\":[323,272,2],\"color\":[113,98,64,255],\"score\":0.0338331},\r\n{\"type\":32, \"data\":[344,115,10],\"color\":[76,73,38,255],\"score\":0.0338296},\r\n{\"type\":32, \"data\":[359,78,2],\"color\":[11,10,50,255],\"score\":0.0338244},\r\n{\"type\":32, \"data\":[147,114,8],\"color\":[49,61,17,255],\"score\":0.0338205},\r\n{\"type\":32, \"data\":[287,63,1],\"color\":[29,26,61,255],\"score\":0.0338159},\r\n{\"type\":32, \"data\":[414,88,6],\"color\":[11,10,50,255],\"score\":0.0338112},\r\n{\"type\":32, \"data\":[92,154,1],\"color\":[105,117,89,255],\"score\":0.0338029},\r\n{\"type\":32, \"data\":[523,338,18],\"color\":[11,10,50,255],\"score\":0.0337991},\r\n{\"type\":32, \"data\":[260,64,2],\"color\":[120,112,90,255],\"score\":0.0337915},\r\n{\"type\":32, \"data\":[256,253,3],\"color\":[107,97,50,255],\"score\":0.0337874},\r\n{\"type\":32, \"data\":[481,150,4],\"color\":[11,10,50,255],\"score\":0.0337838},\r\n{\"type\":32, \"data\":[256,109,4],\"color\":[79,75,42,255],\"score\":0.0337798},\r\n{\"type\":32, \"data\":[336,159,6],\"color\":[57,60,27,255],\"score\":0.0337761},\r\n{\"type\":32, \"data\":[773,308,10],\"color\":[11,10,50,255],\"score\":0.0337719},\r\n{\"type\":32, \"data\":[334,94,1],\"color\":[155,152,106,255],\"score\":0.0337665},\r\n{\"type\":32, \"data\":[282,100,2],\"color\":[17,17,50,255],\"score\":0.0337599},\r\n{\"type\":32, \"data\":[535,146,1],\"color\":[74,77,78,255],\"score\":0.0337547},\r\n{\"type\":32, \"data\":[554,33,2],\"color\":[235,237,235,255],\"score\":0.0337487},\r\n{\"type\":32, \"data\":[501,88,2],\"color\":[133,146,146,255],\"score\":0.0337438},\r\n{\"type\":32, \"data\":[236,510,5],\"color\":[113,94,57,255],\"score\":0.0337405},\r\n{\"type\":32, \"data\":[94,123,12],\"color\":[51,62,19,255],\"score\":0.0337377},\r\n{\"type\":32, \"data\":[362,348,3],\"color\":[16,14,51,255],\"score\":0.0337332},\r\n{\"type\":32, \"data\":[320,86,5],\"color\":[128,114,78,255],\"score\":0.0337299},\r\n{\"type\":32, \"data\":[667,477,1],\"color\":[11,10,50,255],\"score\":0.0337255},\r\n{\"type\":32, \"data\":[608,403,4],\"color\":[166,132,96,255],\"score\":0.033722},\r\n{\"type\":32, \"data\":[101,134,1],\"color\":[129,137,109,255],\"score\":0.0337166},\r\n{\"type\":32, \"data\":[377,101,2],\"color\":[72,75,57,255],\"score\":0.0337118},\r\n{\"type\":32, \"data\":[474,358,12],\"color\":[11,10,50,255],\"score\":0.0337083},\r\n{\"type\":32, \"data\":[372,58,1],\"color\":[11,10,50,255],\"score\":0.0337035},\r\n{\"type\":32, \"data\":[316,270,6],\"color\":[199,152,114,255],\"score\":0.0336989},\r\n{\"type\":32, \"data\":[511,97,1],\"color\":[219,218,219,255],\"score\":0.0336931},\r\n{\"type\":32, \"data\":[604,446,2],\"color\":[101,87,57,255],\"score\":0.0336893},\r\n{\"type\":32, \"data\":[404,73,1],\"color\":[31,31,66,255],\"score\":0.0336808},\r\n{\"type\":32, \"data\":[302,87,6],\"color\":[125,110,69,255],\"score\":0.0336761},\r\n{\"type\":32, \"data\":[615,240,3],\"color\":[63,84,25,255],\"score\":0.0336722},\r\n{\"type\":32, \"data\":[454,382,3],\"color\":[63,81,23,255],\"score\":0.0336683},\r\n{\"type\":32, \"data\":[464,41,0],\"color\":[251,251,255,255],\"score\":0.0336636},\r\n{\"type\":32, \"data\":[286,184,4],\"color\":[36,52,12,255],\"score\":0.0336592},\r\n{\"type\":32, \"data\":[473,35,5],\"color\":[219,220,220,255],\"score\":0.0336529},\r\n{\"type\":32, \"data\":[321,284,3],\"color\":[79,76,37,255],\"score\":0.0336485},\r\n{\"type\":32, \"data\":[498,79,5],\"color\":[12,11,51,255],\"score\":0.0336431},\r\n{\"type\":32, \"data\":[630,513,1],\"color\":[71,79,52,255],\"score\":0.0336387},\r\n{\"type\":32, \"data\":[243,194,1],\"color\":[147,153,133,255],\"score\":0.0336315},\r\n{\"type\":32, \"data\":[311,524,4],\"color\":[121,100,67,255],\"score\":0.0336284},\r\n{\"type\":32, \"data\":[281,72,3],\"color\":[21,19,54,255],\"score\":0.0336246},\r\n{\"type\":32, \"data\":[214,521,4],\"color\":[46,46,33,255],\"score\":0.0336197},\r\n{\"type\":32, \"data\":[62,293,3],\"color\":[14,52,70,255],\"score\":0.0336162},\r\n{\"type\":32, \"data\":[320,59,3],\"color\":[16,15,54,255],\"score\":0.0336117},\r\n{\"type\":32, \"data\":[634,240,3],\"color\":[57,77,23,255],\"score\":0.0336072},\r\n{\"type\":32, \"data\":[562,354,1],\"color\":[136,130,129,255],\"score\":0.0336016},\r\n{\"type\":32, \"data\":[520,305,22],\"color\":[11,10,50,255],\"score\":0.0335982},\r\n{\"type\":32, \"data\":[755,373,3],\"color\":[63,80,20,255],\"score\":0.0335951},\r\n{\"type\":32, \"data\":[478,30,0],\"color\":[138,136,147,255],\"score\":0.0335905},\r\n{\"type\":32, \"data\":[270,275,3],\"color\":[146,129,83,255],\"score\":0.0335857},\r\n{\"type\":32, \"data\":[289,479,4],\"color\":[188,118,82,255],\"score\":0.0335824},\r\n{\"type\":32, \"data\":[49,172,1],\"color\":[109,122,82,255],\"score\":0.033576},\r\n{\"type\":32, \"data\":[569,16,17],\"color\":[11,10,50,255],\"score\":0.0335715},\r\n{\"type\":32, \"data\":[380,68,2],\"color\":[198,199,190,255],\"score\":0.0335677},\r\n{\"type\":32, \"data\":[313,282,3],\"color\":[93,84,47,255],\"score\":0.033562},\r\n{\"type\":32, \"data\":[324,324,2],\"color\":[109,108,60,255],\"score\":0.0335571},\r\n{\"type\":32, \"data\":[519,241,3],\"color\":[41,58,19,255],\"score\":0.0335533},\r\n{\"type\":32, \"data\":[261,118,6],\"color\":[14,14,47,255],\"score\":0.0335498},\r\n{\"type\":32, \"data\":[516,103,4],\"color\":[82,77,55,255],\"score\":0.0335461},\r\n{\"type\":32, \"data\":[445,65,1],\"color\":[26,27,62,255],\"score\":0.0335422},\r\n{\"type\":32, \"data\":[301,482,4],\"color\":[215,164,115,255],\"score\":0.0335382},\r\n{\"type\":32, \"data\":[395,252,10],\"color\":[68,86,31,255],\"score\":0.0335342},\r\n{\"type\":32, \"data\":[462,340,2],\"color\":[56,81,33,255],\"score\":0.0335295},\r\n{\"type\":32, \"data\":[356,350,7],\"color\":[11,10,50,255],\"score\":0.0335251},\r\n{\"type\":32, \"data\":[466,110,1],\"color\":[77,74,62,255],\"score\":0.0335202},\r\n{\"type\":32, \"data\":[352,231,2],\"color\":[65,68,24,255],\"score\":0.0335162},\r\n{\"type\":32, \"data\":[434,63,1],\"color\":[127,123,120,255],\"score\":0.0335081},\r\n{\"type\":32, \"data\":[463,307,4],\"color\":[65,79,25,255],\"score\":0.0335036},\r\n{\"type\":32, \"data\":[598,471,1],\"color\":[186,185,183,255],\"score\":0.0334998},\r\n{\"type\":32, \"data\":[40,95,6],\"color\":[11,10,50,255],\"score\":0.0334963},\r\n{\"type\":32, \"data\":[343,326,3],\"color\":[112,101,64,255],\"score\":0.0334913},\r\n{\"type\":32, \"data\":[611,381,1],\"color\":[128,106,71,255],\"score\":0.0334877},\r\n{\"type\":32, \"data\":[684,464,3],\"color\":[42,51,32,255],\"score\":0.0334841},\r\n{\"type\":32, \"data\":[667,96,24],\"color\":[11,10,50,255],\"score\":0.0334815},\r\n{\"type\":32, \"data\":[574,363,4],\"color\":[117,100,60,255],\"score\":0.0334758},\r\n{\"type\":32, \"data\":[294,64,2],\"color\":[123,114,87,255],\"score\":0.0334721},\r\n{\"type\":32, \"data\":[194,454,2],\"color\":[125,102,74,255],\"score\":0.0334682},\r\n{\"type\":32, \"data\":[447,129,3],\"color\":[133,125,76,255],\"score\":0.0334618},\r\n{\"type\":32, \"data\":[454,124,3],\"color\":[93,85,61,255],\"score\":0.0334582},\r\n{\"type\":32, \"data\":[275,271,2],\"color\":[86,79,44,255],\"score\":0.033454},\r\n{\"type\":32, \"data\":[80,186,22],\"color\":[11,10,50,255],\"score\":0.033451},\r\n{\"type\":32, \"data\":[559,162,6],\"color\":[82,77,40,255],\"score\":0.0334478},\r\n{\"type\":32, \"data\":[256,423,7],\"color\":[104,89,50,255],\"score\":0.0334432},\r\n{\"type\":32, \"data\":[372,64,2],\"color\":[225,226,229,255],\"score\":0.0334377},\r\n{\"type\":32, \"data\":[382,51,0],\"color\":[122,121,140,255],\"score\":0.033434},\r\n{\"type\":32, \"data\":[441,101,4],\"color\":[11,10,50,255],\"score\":0.0334304},\r\n{\"type\":32, \"data\":[472,240,2],\"color\":[21,32,41,255],\"score\":0.0334267},\r\n{\"type\":32, \"data\":[63,19,20],\"color\":[11,10,50,255],\"score\":0.0334239},\r\n{\"type\":32, \"data\":[222,341,4],\"color\":[40,63,27,255],\"score\":0.0334193},\r\n{\"type\":32, \"data\":[647,274,5],\"color\":[92,94,37,255],\"score\":0.0334139},\r\n{\"type\":32, \"data\":[676,271,11],\"color\":[41,62,14,255],\"score\":0.033409},\r\n{\"type\":32, \"data\":[294,104,1],\"color\":[95,90,52,255],\"score\":0.0334052},\r\n{\"type\":32, \"data\":[201,170,5],\"color\":[18,28,32,255],\"score\":0.0334007},\r\n{\"type\":32, \"data\":[523,35,5],\"color\":[212,212,213,255],\"score\":0.0333978},\r\n{\"type\":32, \"data\":[544,201,4],\"color\":[13,13,46,255],\"score\":0.0333929},\r\n{\"type\":32, \"data\":[475,255,14],\"color\":[48,72,14,255],\"score\":0.0333887},\r\n{\"type\":32, \"data\":[517,36,1],\"color\":[158,157,165,255],\"score\":0.0333834},\r\n{\"type\":32, \"data\":[540,109,2],\"color\":[217,215,207,255],\"score\":0.0333788},\r\n{\"type\":32, \"data\":[126,130,2],\"color\":[114,118,88,255],\"score\":0.0333739},\r\n{\"type\":32, \"data\":[153,143,1],\"color\":[106,107,82,255],\"score\":0.0333697},\r\n{\"type\":32, \"data\":[537,112,2],\"color\":[91,87,55,255],\"score\":0.0333656},\r\n{\"type\":32, \"data\":[594,575,2],\"color\":[123,137,141,255],\"score\":0.0333611},\r\n{\"type\":32, \"data\":[126,278,2],\"color\":[38,64,24,255],\"score\":0.0333574},\r\n{\"type\":32, \"data\":[738,306,1],\"color\":[109,131,83,255],\"score\":0.0333513},\r\n{\"type\":32, \"data\":[164,220,2],\"color\":[39,56,31,255],\"score\":0.0333477},\r\n{\"type\":32, \"data\":[364,104,4],\"color\":[16,18,52,255],\"score\":0.0333433},\r\n{\"type\":32, \"data\":[433,68,0],\"color\":[176,179,191,255],\"score\":0.033338},\r\n{\"type\":32, \"data\":[200,491,10],\"color\":[130,93,64,255],\"score\":0.0333344},\r\n{\"type\":32, \"data\":[109,128,3],\"color\":[55,67,22,255],\"score\":0.0333305},\r\n{\"type\":32, \"data\":[293,55,0],\"color\":[107,108,139,255],\"score\":0.0333273},\r\n{\"type\":32, \"data\":[251,254,3],\"color\":[56,61,20,255],\"score\":0.0333235},\r\n{\"type\":32, \"data\":[536,35,2],\"color\":[238,238,238,255],\"score\":0.0333186},\r\n{\"type\":32, \"data\":[306,153,12],\"color\":[45,58,16,255],\"score\":0.0333154},\r\n{\"type\":32, \"data\":[757,340,4],\"color\":[114,98,55,255],\"score\":0.0333119},\r\n{\"type\":32, \"data\":[497,52,2],\"color\":[161,172,174,255],\"score\":0.033306},\r\n{\"type\":32, \"data\":[227,398,24],\"color\":[11,10,50,255],\"score\":0.0333031},\r\n{\"type\":32, \"data\":[590,234,2],\"color\":[37,76,58,255],\"score\":0.0332974},\r\n{\"type\":32, \"data\":[702,282,1],\"color\":[119,108,66,255],\"score\":0.0332929},\r\n{\"type\":32, \"data\":[250,241,3],\"color\":[37,52,14,255],\"score\":0.033289},\r\n{\"type\":32, \"data\":[536,131,2],\"color\":[42,40,55,255],\"score\":0.0332842},\r\n{\"type\":32, \"data\":[293,486,3],\"color\":[233,190,138,255],\"score\":0.0332799},\r\n{\"type\":32, \"data\":[599,541,8],\"color\":[126,107,65,255],\"score\":0.0332766},\r\n{\"type\":32, \"data\":[576,543,2],\"color\":[74,87,90,255],\"score\":0.0332715},\r\n{\"type\":32, \"data\":[501,366,11],\"color\":[13,12,49,255],\"score\":0.0332686},\r\n{\"type\":32, \"data\":[90,285,8],\"color\":[47,70,13,255],\"score\":0.0332643},\r\n{\"type\":32, \"data\":[430,221,6],\"color\":[44,67,13,255],\"score\":0.0332603},\r\n{\"type\":32, \"data\":[387,42,1],\"color\":[20,18,56,255],\"score\":0.0332569},\r\n{\"type\":32, \"data\":[484,85,1],\"color\":[148,149,133,255],\"score\":0.0332526},\r\n{\"type\":32, \"data\":[437,69,1],\"color\":[221,224,222,255],\"score\":0.0332491},\r\n{\"type\":32, \"data\":[491,44,3],\"color\":[231,234,234,255],\"score\":0.0332452},\r\n{\"type\":32, \"data\":[606,570,4],\"color\":[96,94,55,255],\"score\":0.0332407},\r\n{\"type\":32, \"data\":[367,66,1],\"color\":[218,220,219,255],\"score\":0.0332371},\r\n{\"type\":32, \"data\":[213,304,9],\"color\":[11,10,49,255],\"score\":0.0332335},\r\n{\"type\":32, \"data\":[399,70,2],\"color\":[244,243,238,255],\"score\":0.033228},\r\n{\"type\":32, \"data\":[118,143,1],\"color\":[135,142,129,255],\"score\":0.0332242},\r\n{\"type\":32, \"data\":[371,83,4],\"color\":[128,123,78,255],\"score\":0.0332192},\r\n{\"type\":32, \"data\":[558,335,4],\"color\":[83,74,38,255],\"score\":0.033215},\r\n{\"type\":32, \"data\":[443,61,2],\"color\":[222,218,214,255],\"score\":0.0332113},\r\n{\"type\":32, \"data\":[323,237,2],\"color\":[99,90,56,255],\"score\":0.0332063},\r\n{\"type\":32, \"data\":[383,161,7],\"color\":[42,45,24,255],\"score\":0.0332027},\r\n{\"type\":32, \"data\":[483,45,3],\"color\":[228,229,230,255],\"score\":0.0331967},\r\n{\"type\":32, \"data\":[493,91,4],\"color\":[137,126,103,255],\"score\":0.0331925},\r\n{\"type\":32, \"data\":[545,114,1],\"color\":[102,99,63,255],\"score\":0.033186},\r\n{\"type\":32, \"data\":[501,108,2],\"color\":[52,107,94,255],\"score\":0.0331823},\r\n{\"type\":32, \"data\":[475,334,6],\"color\":[11,13,52,255],\"score\":0.0331772},\r\n{\"type\":32, \"data\":[171,149,2],\"color\":[204,206,203,255],\"score\":0.0331733},\r\n{\"type\":32, \"data\":[425,43,1],\"color\":[38,37,65,255],\"score\":0.0331675},\r\n{\"type\":32, \"data\":[367,505,2],\"color\":[31,42,13,255],\"score\":0.0331634},\r\n{\"type\":32, \"data\":[288,294,2],\"color\":[133,116,83,255],\"score\":0.0331589},\r\n{\"type\":32, \"data\":[490,99,3],\"color\":[64,82,62,255],\"score\":0.0331543},\r\n{\"type\":32, \"data\":[709,420,4],\"color\":[38,55,16,255],\"score\":0.0331506},\r\n{\"type\":32, \"data\":[312,65,2],\"color\":[11,10,50,255],\"score\":0.0331465},\r\n{\"type\":32, \"data\":[46,121,4],\"color\":[71,76,37,255],\"score\":0.0331426},\r\n{\"type\":32, \"data\":[370,45,0],\"color\":[191,193,211,255],\"score\":0.0331388},\r\n{\"type\":32, \"data\":[363,318,1],\"color\":[197,174,121,255],\"score\":0.0331348},\r\n{\"type\":32, \"data\":[472,76,1],\"color\":[27,26,61,255],\"score\":0.0331305},\r\n{\"type\":32, \"data\":[589,537,1],\"color\":[95,91,78,255],\"score\":0.0331264},\r\n{\"type\":32, \"data\":[293,301,1],\"color\":[177,142,105,255],\"score\":0.0331203},\r\n{\"type\":32, \"data\":[54,273,3],\"color\":[16,27,51,255],\"score\":0.033116},\r\n{\"type\":32, \"data\":[622,250,4],\"color\":[102,104,39,255],\"score\":0.0331125},\r\n{\"type\":32, \"data\":[295,276,4],\"color\":[173,142,103,255],\"score\":0.0331092},\r\n{\"type\":32, \"data\":[205,160,2],\"color\":[84,88,66,255],\"score\":0.0331042},\r\n{\"type\":32, \"data\":[144,330,8],\"color\":[11,10,50,255],\"score\":0.0331005},\r\n{\"type\":32, \"data\":[548,210,4],\"color\":[28,43,26,255],\"score\":0.0330977},\r\n{\"type\":32, \"data\":[233,443,6],\"color\":[141,114,73,255],\"score\":0.033095},\r\n{\"type\":32, \"data\":[348,537,2],\"color\":[83,77,46,255],\"score\":0.0330915},\r\n{\"type\":32, \"data\":[167,464,1],\"color\":[89,75,79,255],\"score\":0.0330869},\r\n{\"type\":32, \"data\":[323,216,2],\"color\":[93,91,48,255],\"score\":0.0330832},\r\n{\"type\":32, \"data\":[283,64,2],\"color\":[41,39,63,255],\"score\":0.0330755},\r\n{\"type\":32, \"data\":[450,137,5],\"color\":[11,10,50,255],\"score\":0.0330719},\r\n{\"type\":32, \"data\":[543,137,1],\"color\":[132,127,108,255],\"score\":0.0330656},\r\n{\"type\":32, \"data\":[375,69,1],\"color\":[238,240,234,255],\"score\":0.0330583},\r\n{\"type\":32, \"data\":[317,288,3],\"color\":[126,107,71,255],\"score\":0.0330548},\r\n{\"type\":32, \"data\":[469,8,22],\"color\":[11,10,50,255],\"score\":0.0330481},\r\n{\"type\":32, \"data\":[110,141,6],\"color\":[46,61,19,255],\"score\":0.0330453},\r\n{\"type\":32, \"data\":[354,195,6],\"color\":[79,93,39,255],\"score\":0.0330427},\r\n{\"type\":32, \"data\":[71,164,2],\"color\":[66,84,34,255],\"score\":0.0330387},\r\n{\"type\":32, \"data\":[538,131,1],\"color\":[13,12,49,255],\"score\":0.0330351},\r\n{\"type\":32, \"data\":[497,119,2],\"color\":[25,92,92,255],\"score\":0.0330305},\r\n{\"type\":32, \"data\":[400,164,9],\"color\":[51,57,19,255],\"score\":0.0330266},\r\n{\"type\":32, \"data\":[488,365,2],\"color\":[46,64,32,255],\"score\":0.0330213},\r\n{\"type\":32, \"data\":[581,528,1],\"color\":[67,81,68,255],\"score\":0.0330165},\r\n{\"type\":32, \"data\":[593,424,2],\"color\":[12,10,50,255],\"score\":0.033013},\r\n{\"type\":32, \"data\":[614,434,2],\"color\":[112,93,63,255],\"score\":0.0330078},\r\n{\"type\":32, \"data\":[605,360,8],\"color\":[38,58,12,255],\"score\":0.0330049},\r\n{\"type\":32, \"data\":[280,223,5],\"color\":[71,74,32,255],\"score\":0.0330021},\r\n{\"type\":32, \"data\":[555,339,1],\"color\":[147,142,110,255],\"score\":0.0329967},\r\n{\"type\":32, \"data\":[446,121,2],\"color\":[146,135,85,255],\"score\":0.0329924},\r\n{\"type\":32, \"data\":[377,341,5],\"color\":[77,90,33,255],\"score\":0.032988},\r\n{\"type\":32, \"data\":[456,40,2],\"color\":[200,201,205,255],\"score\":0.032982},\r\n{\"type\":32, \"data\":[537,34,2],\"color\":[240,240,238,255],\"score\":0.0329784},\r\n{\"type\":32, \"data\":[44,259,2],\"color\":[17,23,42,255],\"score\":0.0329748},\r\n{\"type\":32, \"data\":[417,48,1],\"color\":[117,121,101,255],\"score\":0.0329691},\r\n{\"type\":32, \"data\":[463,70,3],\"color\":[243,243,242,255],\"score\":0.0329592},\r\n{\"type\":32, \"data\":[366,263,6],\"color\":[112,110,60,255],\"score\":0.0329567},\r\n{\"type\":32, \"data\":[415,74,1],\"color\":[11,10,50,255],\"score\":0.0329509},\r\n{\"type\":32, \"data\":[593,456,2],\"color\":[86,79,46,255],\"score\":0.0329472},\r\n{\"type\":32, \"data\":[367,338,2],\"color\":[123,108,75,255],\"score\":0.0329442},\r\n{\"type\":32, \"data\":[518,53,1],\"color\":[106,99,94,255],\"score\":0.0329373},\r\n{\"type\":32, \"data\":[290,286,2],\"color\":[153,139,102,255],\"score\":0.032932},\r\n{\"type\":32, \"data\":[369,91,4],\"color\":[14,13,52,255],\"score\":0.032929},\r\n{\"type\":32, \"data\":[154,101,4],\"color\":[74,73,39,255],\"score\":0.0329258},\r\n{\"type\":32, \"data\":[173,105,4],\"color\":[76,78,34,255],\"score\":0.0329218},\r\n{\"type\":32, \"data\":[284,289,2],\"color\":[114,98,58,255],\"score\":0.0329174},\r\n{\"type\":32, \"data\":[36,261,6],\"color\":[49,72,17,255],\"score\":0.0329142},\r\n{\"type\":32, \"data\":[743,389,11],\"color\":[75,77,32,255],\"score\":0.0329107},\r\n{\"type\":32, \"data\":[62,120,6],\"color\":[68,79,33,255],\"score\":0.0329075},\r\n{\"type\":32, \"data\":[707,292,3],\"color\":[111,99,34,255],\"score\":0.032904},\r\n{\"type\":32, \"data\":[563,355,1],\"color\":[142,133,124,255],\"score\":0.0329005},\r\n{\"type\":32, \"data\":[627,409,3],\"color\":[45,55,17,255],\"score\":0.0328948},\r\n{\"type\":32, \"data\":[270,236,3],\"color\":[134,114,79,255],\"score\":0.0328911},\r\n{\"type\":32, \"data\":[305,249,2],\"color\":[147,134,87,255],\"score\":0.032887},\r\n{\"type\":32, \"data\":[433,87,3],\"color\":[214,200,142,255],\"score\":0.032882},\r\n{\"type\":32, \"data\":[45,128,3],\"color\":[14,14,49,255],\"score\":0.0328779},\r\n{\"type\":32, \"data\":[446,77,1],\"color\":[131,129,148,255],\"score\":0.032873},\r\n{\"type\":32, \"data\":[374,79,3],\"color\":[144,135,97,255],\"score\":0.0328685},\r\n{\"type\":32, \"data\":[590,532,1],\"color\":[55,52,48,255],\"score\":0.032862},\r\n{\"type\":32, \"data\":[355,137,7],\"color\":[60,56,29,255],\"score\":0.0328591},\r\n{\"type\":32, \"data\":[172,492,4],\"color\":[107,91,55,255],\"score\":0.0328551},\r\n{\"type\":32, \"data\":[323,248,2],\"color\":[117,102,65,255],\"score\":0.0328512},\r\n{\"type\":32, \"data\":[295,295,1],\"color\":[82,76,78,255],\"score\":0.032846},\r\n{\"type\":32, \"data\":[291,281,2],\"color\":[224,201,159,255],\"score\":0.0328415},\r\n{\"type\":32, \"data\":[407,56,3],\"color\":[17,16,55,255],\"score\":0.0328384},\r\n{\"type\":32, \"data\":[362,83,1],\"color\":[141,128,86,255],\"score\":0.0328337},\r\n{\"type\":32, \"data\":[493,352,3],\"color\":[72,91,28,255],\"score\":0.0328303},\r\n{\"type\":32, \"data\":[282,189,3],\"color\":[87,88,59,255],\"score\":0.032827},\r\n{\"type\":32, \"data\":[403,132,7],\"color\":[65,62,33,255],\"score\":0.0328232},\r\n{\"type\":32, \"data\":[493,142,7],\"color\":[83,75,40,255],\"score\":0.0328195},\r\n{\"type\":32, \"data\":[212,162,1],\"color\":[115,119,87,255],\"score\":0.0328152},\r\n{\"type\":32, \"data\":[345,76,1],\"color\":[11,10,50,255],\"score\":0.0328107},\r\n{\"type\":32, \"data\":[487,81,2],\"color\":[170,178,182,255],\"score\":0.0328066},\r\n{\"type\":32, \"data\":[427,294,7],\"color\":[46,68,14,255],\"score\":0.0328033},\r\n{\"type\":32, \"data\":[376,46,1],\"color\":[130,131,160,255],\"score\":0.0327896},\r\n{\"type\":32, \"data\":[554,274,5],\"color\":[11,10,50,255],\"score\":0.0327836},\r\n{\"type\":32, \"data\":[515,98,0],\"color\":[227,219,209,255],\"score\":0.0327793},\r\n{\"type\":32, \"data\":[278,76,1],\"color\":[145,136,88,255],\"score\":0.0327755},\r\n{\"type\":32, \"data\":[580,537,2],\"color\":[197,202,202,255],\"score\":0.0327724},\r\n{\"type\":32, \"data\":[451,237,9],\"color\":[62,82,26,255],\"score\":0.03277},\r\n{\"type\":32, \"data\":[219,454,4],\"color\":[180,126,88,255],\"score\":0.0327672},\r\n{\"type\":32, \"data\":[469,150,12],\"color\":[11,10,50,255],\"score\":0.0327643},\r\n{\"type\":32, \"data\":[133,142,2],\"color\":[113,125,99,255],\"score\":0.0327607},\r\n{\"type\":32, \"data\":[608,520,5],\"color\":[126,106,70,255],\"score\":0.0327576},\r\n{\"type\":32, \"data\":[181,105,5],\"color\":[73,74,36,255],\"score\":0.0327546},\r\n{\"type\":32, \"data\":[357,379,13],\"color\":[11,10,50,255],\"score\":0.0327518},\r\n{\"type\":32, \"data\":[183,155,1],\"color\":[25,41,47,255],\"score\":0.0327458},\r\n{\"type\":32, \"data\":[522,146,4],\"color\":[82,76,46,255],\"score\":0.0327404},\r\n{\"type\":32, \"data\":[363,113,6],\"color\":[80,78,40,255],\"score\":0.0327367},\r\n{\"type\":32, \"data\":[167,484,2],\"color\":[58,71,54,255],\"score\":0.0327326},\r\n{\"type\":32, \"data\":[550,331,1],\"color\":[128,125,85,255],\"score\":0.0327296},\r\n{\"type\":32, \"data\":[223,148,6],\"color\":[38,51,12,255],\"score\":0.0327263},\r\n{\"type\":32, \"data\":[303,264,2],\"color\":[107,95,57,255],\"score\":0.0327231},\r\n{\"type\":32, \"data\":[256,409,2],\"color\":[47,71,38,255],\"score\":0.03272},\r\n{\"type\":32, \"data\":[119,294,5],\"color\":[12,12,49,255],\"score\":0.0327166},\r\n{\"type\":32, \"data\":[656,264,8],\"color\":[50,71,18,255],\"score\":0.0327138},\r\n{\"type\":32, \"data\":[427,92,1],\"color\":[124,118,85,255],\"score\":0.0327077},\r\n{\"type\":32, \"data\":[450,4,29],\"color\":[11,10,50,255],\"score\":0.0327025},\r\n{\"type\":32, \"data\":[203,163,1],\"color\":[205,211,204,255],\"score\":0.0326969},\r\n{\"type\":32, \"data\":[432,62,1],\"color\":[219,218,203,255],\"score\":0.0326931},\r\n{\"type\":32, \"data\":[643,239,1],\"color\":[61,75,39,255],\"score\":0.0326888},\r\n{\"type\":32, \"data\":[237,358,6],\"color\":[13,14,48,255],\"score\":0.0326851},\r\n{\"type\":32, \"data\":[257,246,3],\"color\":[57,60,24,255],\"score\":0.032681},\r\n{\"type\":32, \"data\":[102,134,1],\"color\":[130,137,112,255],\"score\":0.0326781},\r\n{\"type\":32, \"data\":[141,282,2],\"color\":[27,47,19,255],\"score\":0.0326744},\r\n{\"type\":32, \"data\":[618,428,3],\"color\":[134,110,78,255],\"score\":0.0326708},\r\n{\"type\":32, \"data\":[258,129,6],\"color\":[50,52,23,255],\"score\":0.0326676},\r\n{\"type\":32, \"data\":[390,59,1],\"color\":[44,43,76,255],\"score\":0.0326634},\r\n{\"type\":32, \"data\":[602,575,1],\"color\":[187,197,196,255],\"score\":0.0326546},\r\n{\"type\":32, \"data\":[318,56,1],\"color\":[97,98,119,255],\"score\":0.0326502},\r\n{\"type\":32, \"data\":[535,195,7],\"color\":[33,46,13,255],\"score\":0.0326468},\r\n{\"type\":32, \"data\":[589,539,1],\"color\":[208,208,197,255],\"score\":0.0326426},\r\n{\"type\":32, \"data\":[631,425,11],\"color\":[66,72,31,255],\"score\":0.0326394},\r\n{\"type\":32, \"data\":[539,44,0],\"color\":[255,255,255,255],\"score\":0.0326332},\r\n{\"type\":32, \"data\":[570,367,2],\"color\":[178,158,123,255],\"score\":0.0326297},\r\n{\"type\":32, \"data\":[141,131,2],\"color\":[84,87,54,255],\"score\":0.0326261},\r\n{\"type\":32, \"data\":[287,98,2],\"color\":[133,122,69,255],\"score\":0.0326224},\r\n{\"type\":32, \"data\":[297,502,3],\"color\":[187,144,99,255],\"score\":0.0326191},\r\n{\"type\":32, \"data\":[566,224,2],\"color\":[44,64,14,255],\"score\":0.0326151},\r\n{\"type\":32, \"data\":[427,63,0],\"color\":[133,132,135,255],\"score\":0.0326113},\r\n{\"type\":32, \"data\":[449,45,2],\"color\":[145,139,115,255],\"score\":0.0326073},\r\n{\"type\":32, \"data\":[297,530,3],\"color\":[72,88,37,255],\"score\":0.032601},\r\n{\"type\":32, \"data\":[392,43,2],\"color\":[198,199,202,255],\"score\":0.0325948},\r\n{\"type\":32, \"data\":[345,64,2],\"color\":[11,10,50,255],\"score\":0.0325906},\r\n{\"type\":32, \"data\":[263,350,3],\"color\":[34,51,19,255],\"score\":0.0325874},\r\n{\"type\":32, \"data\":[130,267,5],\"color\":[11,10,49,255],\"score\":0.0325833},\r\n{\"type\":32, \"data\":[413,80,1],\"color\":[172,167,136,255],\"score\":0.0325806},\r\n{\"type\":32, \"data\":[112,148,1],\"color\":[206,215,199,255],\"score\":0.0325757},\r\n{\"type\":32, \"data\":[445,592,26],\"color\":[11,10,50,255],\"score\":0.0325733},\r\n{\"type\":32, \"data\":[510,122,2],\"color\":[143,130,78,255],\"score\":0.0325685},\r\n{\"type\":32, \"data\":[462,43,1],\"color\":[134,135,145,255],\"score\":0.032563},\r\n{\"type\":32, \"data\":[337,270,3],\"color\":[91,84,48,255],\"score\":0.0325594},\r\n{\"type\":32, \"data\":[635,412,6],\"color\":[76,79,37,255],\"score\":0.0325561},\r\n{\"type\":32, \"data\":[315,69,1],\"color\":[125,111,78,255],\"score\":0.0325518},\r\n{\"type\":32, \"data\":[454,69,2],\"color\":[242,241,240,255],\"score\":0.0325481},\r\n{\"type\":32, \"data\":[440,44,1],\"color\":[56,51,75,255],\"score\":0.0325429},\r\n{\"type\":32, \"data\":[335,173,9],\"color\":[38,52,16,255],\"score\":0.0325404},\r\n{\"type\":32, \"data\":[530,35,5],\"color\":[206,205,207,255],\"score\":0.0325352},\r\n{\"type\":32, \"data\":[324,106,3],\"color\":[14,13,50,255],\"score\":0.0325326},\r\n{\"type\":32, \"data\":[471,47,1],\"color\":[136,134,116,255],\"score\":0.032528},\r\n{\"type\":32, \"data\":[123,258,7],\"color\":[35,57,14,255],\"score\":0.0325245},\r\n{\"type\":32, \"data\":[327,249,2],\"color\":[140,122,85,255],\"score\":0.0325211},\r\n{\"type\":32, \"data\":[445,398,3],\"color\":[41,67,25,255],\"score\":0.0325174},\r\n{\"type\":32, \"data\":[575,241,5],\"color\":[70,92,26,255],\"score\":0.0325127},\r\n{\"type\":32, \"data\":[284,229,2],\"color\":[103,99,57,255],\"score\":0.0325099},\r\n{\"type\":32, \"data\":[284,285,2],\"color\":[116,99,59,255],\"score\":0.0325059},\r\n{\"type\":32, \"data\":[439,107,1],\"color\":[88,98,60,255],\"score\":0.0325011},\r\n{\"type\":32, \"data\":[251,188,6],\"color\":[45,56,16,255],\"score\":0.0324974},\r\n{\"type\":32, \"data\":[328,546,2],\"color\":[30,43,39,255],\"score\":0.0324935},\r\n{\"type\":32, \"data\":[484,59,1],\"color\":[25,24,62,255],\"score\":0.0324881},\r\n{\"type\":32, \"data\":[379,73,2],\"color\":[14,13,52,255],\"score\":0.032483},\r\n{\"type\":32, \"data\":[536,134,2],\"color\":[107,101,71,255],\"score\":0.0324786},\r\n{\"type\":32, \"data\":[300,296,0],\"color\":[144,144,122,255],\"score\":0.0324749},\r\n{\"type\":32, \"data\":[441,259,13],\"color\":[56,81,18,255],\"score\":0.032472},\r\n{\"type\":32, \"data\":[366,81,1],\"color\":[24,23,60,255],\"score\":0.0324661},\r\n{\"type\":32, \"data\":[460,72,1],\"color\":[211,211,190,255],\"score\":0.0324613},\r\n{\"type\":32, \"data\":[54,170,1],\"color\":[60,76,26,255],\"score\":0.0324569},\r\n{\"type\":32, \"data\":[221,326,3],\"color\":[71,91,41,255],\"score\":0.0324533},\r\n{\"type\":32, \"data\":[262,410,3],\"color\":[50,97,69,255],\"score\":0.0324501},\r\n{\"type\":32, \"data\":[318,248,2],\"color\":[88,82,48,255],\"score\":0.0324464},\r\n{\"type\":32, \"data\":[764,346,5],\"color\":[81,93,29,255],\"score\":0.0324429},\r\n{\"type\":32, \"data\":[285,101,1],\"color\":[11,10,50,255],\"score\":0.0324388},\r\n{\"type\":32, \"data\":[601,491,6],\"color\":[114,96,63,255],\"score\":0.0324353},\r\n{\"type\":32, \"data\":[584,370,4],\"color\":[122,104,63,255],\"score\":0.0324315},\r\n{\"type\":32, \"data\":[616,389,3],\"color\":[137,118,73,255],\"score\":0.0324284},\r\n{\"type\":32, \"data\":[578,202,5],\"color\":[11,10,49,255],\"score\":0.0324254},\r\n{\"type\":32, \"data\":[498,45,2],\"color\":[193,197,199,255],\"score\":0.0324226},\r\n{\"type\":32, \"data\":[187,524,5],\"color\":[87,93,45,255],\"score\":0.032419},\r\n{\"type\":32, \"data\":[514,98,1],\"color\":[207,202,192,255],\"score\":0.0324141},\r\n{\"type\":32, \"data\":[513,95,1],\"color\":[105,102,87,255],\"score\":0.0324102},\r\n{\"type\":32, \"data\":[325,227,2],\"color\":[171,156,103,255],\"score\":0.0324066},\r\n{\"type\":32, \"data\":[525,66,14],\"color\":[11,10,50,255],\"score\":0.0324029},\r\n{\"type\":32, \"data\":[227,509,7],\"color\":[112,91,60,255],\"score\":0.0323992},\r\n{\"type\":32, \"data\":[42,139,9],\"color\":[67,74,27,255],\"score\":0.0323954},\r\n{\"type\":32, \"data\":[397,74,1],\"color\":[21,21,59,255],\"score\":0.0323894},\r\n{\"type\":32, \"data\":[261,503,8],\"color\":[152,101,68,255],\"score\":0.0323864},\r\n{\"type\":32, \"data\":[286,59,1],\"color\":[151,143,126,255],\"score\":0.0323825},\r\n{\"type\":32, \"data\":[308,189,3],\"color\":[95,101,50,255],\"score\":0.0323791},\r\n{\"type\":32, \"data\":[506,363,2],\"color\":[44,53,43,255],\"score\":0.0323748},\r\n{\"type\":32, \"data\":[561,351,1],\"color\":[142,136,121,255],\"score\":0.03237},\r\n{\"type\":32, \"data\":[550,32,1],\"color\":[220,222,222,255],\"score\":0.0323662},\r\n{\"type\":32, \"data\":[18,283,19],\"color\":[11,10,50,255],\"score\":0.0323629},\r\n{\"type\":32, \"data\":[543,364,2],\"color\":[55,73,29,255],\"score\":0.032359},\r\n{\"type\":32, \"data\":[301,66,1],\"color\":[150,141,105,255],\"score\":0.0323548},\r\n{\"type\":32, \"data\":[405,90,1],\"color\":[133,130,93,255],\"score\":0.0323504},\r\n{\"type\":32, \"data\":[115,90,5],\"color\":[11,10,50,255],\"score\":0.0323479},\r\n{\"type\":32, \"data\":[368,300,4],\"color\":[125,114,71,255],\"score\":0.0323449},\r\n{\"type\":32, \"data\":[544,320,3],\"color\":[141,136,82,255],\"score\":0.0323413},\r\n{\"type\":32, \"data\":[130,120,9],\"color\":[49,60,18,255],\"score\":0.0323375},\r\n{\"type\":32, \"data\":[445,73,0],\"color\":[90,99,102,255],\"score\":0.0323337},\r\n{\"type\":32, \"data\":[588,544,1],\"color\":[222,222,204,255],\"score\":0.0323307},\r\n{\"type\":32, \"data\":[542,101,4],\"color\":[16,16,51,255],\"score\":0.0323266},\r\n{\"type\":32, \"data\":[294,460,5],\"color\":[161,125,78,255],\"score\":0.0323237},\r\n{\"type\":32, \"data\":[406,80,2],\"color\":[173,155,111,255],\"score\":0.0323202},\r\n{\"type\":32, \"data\":[611,391,2],\"color\":[202,171,110,255],\"score\":0.0323161},\r\n{\"type\":32, \"data\":[476,54,4],\"color\":[223,227,229,255],\"score\":0.0323125},\r\n{\"type\":32, \"data\":[367,395,24],\"color\":[11,10,50,255],\"score\":0.0323084},\r\n{\"type\":32, \"data\":[348,72,1],\"color\":[11,10,50,255],\"score\":0.032303},\r\n{\"type\":32, \"data\":[582,511,4],\"color\":[16,18,44,255],\"score\":0.0322987},\r\n{\"type\":32, \"data\":[61,135,7],\"color\":[56,69,18,255],\"score\":0.0322956},\r\n{\"type\":32, \"data\":[573,551,1],\"color\":[20,22,56,255],\"score\":0.0322926},\r\n{\"type\":32, \"data\":[253,64,0],\"color\":[127,123,126,255],\"score\":0.0322893},\r\n{\"type\":32, \"data\":[446,72,1],\"color\":[196,197,185,255],\"score\":0.0322851},\r\n{\"type\":32, \"data\":[573,347,5],\"color\":[42,59,14,255],\"score\":0.0322823},\r\n{\"type\":32, \"data\":[331,537,4],\"color\":[75,88,40,255],\"score\":0.0322786},\r\n{\"type\":32, \"data\":[295,261,5],\"color\":[138,119,81,255],\"score\":0.0322746},\r\n{\"type\":32, \"data\":[242,340,5],\"color\":[60,83,32,255],\"score\":0.0322712},\r\n{\"type\":32, \"data\":[340,264,3],\"color\":[105,100,59,255],\"score\":0.0322677},\r\n{\"type\":32, \"data\":[545,160,5],\"color\":[69,69,31,255],\"score\":0.0322638},\r\n{\"type\":32, \"data\":[594,232,2],\"color\":[16,21,53,255],\"score\":0.0322567},\r\n{\"type\":32, \"data\":[338,456,7],\"color\":[103,89,57,255],\"score\":0.0322529},\r\n{\"type\":32, \"data\":[656,559,2],\"color\":[68,68,40,255],\"score\":0.0322488},\r\n{\"type\":32, \"data\":[444,128,2],\"color\":[88,87,48,255],\"score\":0.0322449},\r\n{\"type\":32, \"data\":[400,381,6],\"color\":[11,10,50,255],\"score\":0.0322416},\r\n{\"type\":32, \"data\":[454,26,7],\"color\":[11,10,50,255],\"score\":0.0322372},\r\n{\"type\":32, \"data\":[325,268,1],\"color\":[227,197,151,255],\"score\":0.0322335},\r\n{\"type\":32, \"data\":[362,362,4],\"color\":[58,79,21,255],\"score\":0.0322284},\r\n{\"type\":32, \"data\":[505,96,1],\"color\":[248,249,247,255],\"score\":0.0322246},\r\n{\"type\":32, \"data\":[551,140,1],\"color\":[86,84,83,255],\"score\":0.0322199},\r\n{\"type\":32, \"data\":[614,399,2],\"color\":[223,184,144,255],\"score\":0.0322171},\r\n{\"type\":32, \"data\":[190,521,4],\"color\":[111,103,56,255],\"score\":0.032214},\r\n{\"type\":32, \"data\":[514,157,10],\"color\":[77,73,33,255],\"score\":0.0322108},\r\n{\"type\":32, \"data\":[520,44,1],\"color\":[145,144,155,255],\"score\":0.0322066},\r\n{\"type\":32, \"data\":[608,564,2],\"color\":[30,73,70,255],\"score\":0.0322034},\r\n{\"type\":32, \"data\":[578,561,2],\"color\":[49,58,62,255],\"score\":0.0322001},\r\n{\"type\":32, \"data\":[372,96,5],\"color\":[12,11,51,255],\"score\":0.0321973},\r\n{\"type\":32, \"data\":[172,157,4],\"color\":[11,10,50,255],\"score\":0.032191},\r\n{\"type\":32, \"data\":[456,97,2],\"color\":[53,51,59,255],\"score\":0.0321872},\r\n{\"type\":32, \"data\":[444,59,1],\"color\":[146,140,111,255],\"score\":0.0321841},\r\n{\"type\":32, \"data\":[187,132,7],\"color\":[45,55,17,255],\"score\":0.0321814},\r\n{\"type\":32, \"data\":[485,137,1],\"color\":[90,87,41,255],\"score\":0.0321779},\r\n{\"type\":32, \"data\":[333,79,1],\"color\":[32,31,60,255],\"score\":0.0321729},\r\n{\"type\":32, \"data\":[292,84,4],\"color\":[113,101,58,255],\"score\":0.0321703},\r\n{\"type\":32, \"data\":[37,105,3],\"color\":[83,86,40,255],\"score\":0.0321654},\r\n{\"type\":32, \"data\":[249,197,2],\"color\":[105,111,94,255],\"score\":0.0321619},\r\n{\"type\":32, \"data\":[309,53,0],\"color\":[239,240,253,255],\"score\":0.0321579},\r\n{\"type\":32, \"data\":[425,84,1],\"color\":[232,231,217,255],\"score\":0.0321538},\r\n{\"type\":32, \"data\":[596,388,0],\"color\":[11,10,50,255],\"score\":0.0321485},\r\n{\"type\":32, \"data\":[275,255,3],\"color\":[178,156,115,255],\"score\":0.0321432},\r\n{\"type\":32, \"data\":[328,80,0],\"color\":[173,176,162,255],\"score\":0.0321396},\r\n{\"type\":32, \"data\":[477,94,4],\"color\":[78,76,49,255],\"score\":0.0321357},\r\n{\"type\":32, \"data\":[509,92,1],\"color\":[195,195,191,255],\"score\":0.0321299},\r\n{\"type\":32, \"data\":[306,66,1],\"color\":[172,163,144,255],\"score\":0.0321267},\r\n{\"type\":32, \"data\":[251,436,10],\"color\":[126,103,61,255],\"score\":0.0321234},\r\n{\"type\":32, \"data\":[342,49,1],\"color\":[151,154,174,255],\"score\":0.0321145},\r\n{\"type\":32, \"data\":[414,65,2],\"color\":[231,230,228,255],\"score\":0.0321084},\r\n{\"type\":32, \"data\":[331,104,4],\"color\":[41,43,45,255],\"score\":0.0321048},\r\n{\"type\":32, \"data\":[437,371,6],\"color\":[11,11,50,255],\"score\":0.0321015},\r\n{\"type\":32, \"data\":[593,483,2],\"color\":[164,162,156,255],\"score\":0.032098},\r\n{\"type\":32, \"data\":[380,53,0],\"color\":[161,161,153,255],\"score\":0.0320938},\r\n{\"type\":32, \"data\":[419,279,8],\"color\":[66,86,26,255],\"score\":0.0320911},\r\n{\"type\":32, \"data\":[512,98,0],\"color\":[241,237,231,255],\"score\":0.032088},\r\n{\"type\":32, \"data\":[453,65,1],\"color\":[11,10,50,255],\"score\":0.032083},\r\n{\"type\":32, \"data\":[338,24,25],\"color\":[11,10,50,255],\"score\":0.0320799},\r\n{\"type\":32, \"data\":[38,226,3],\"color\":[67,92,28,255],\"score\":0.0320768},\r\n{\"type\":32, \"data\":[587,567,0],\"color\":[47,58,61,255],\"score\":0.0320741},\r\n{\"type\":32, \"data\":[267,185,2],\"color\":[76,87,52,255],\"score\":0.032071},\r\n{\"type\":32, \"data\":[305,226,3],\"color\":[106,101,58,255],\"score\":0.0320679},\r\n{\"type\":32, \"data\":[180,206,20],\"color\":[11,10,50,255],\"score\":0.0320644},\r\n{\"type\":32, \"data\":[120,137,2],\"color\":[115,111,82,255],\"score\":0.0320605},\r\n{\"type\":32, \"data\":[352,61,1],\"color\":[11,10,50,255],\"score\":0.0320573},\r\n{\"type\":32, \"data\":[448,97,1],\"color\":[32,31,51,255],\"score\":0.0320537},\r\n{\"type\":32, \"data\":[400,103,2],\"color\":[39,57,41,255],\"score\":0.0320502},\r\n{\"type\":32, \"data\":[265,94,5],\"color\":[11,10,50,255],\"score\":0.0320449},\r\n{\"type\":32, \"data\":[465,128,1],\"color\":[135,127,80,255],\"score\":0.0320412},\r\n{\"type\":32, \"data\":[268,61,1],\"color\":[118,112,90,255],\"score\":0.0320381},\r\n{\"type\":32, \"data\":[539,31,1],\"color\":[145,147,160,255],\"score\":0.0320346},\r\n{\"type\":32, \"data\":[483,233,2],\"color\":[19,25,45,255],\"score\":0.0320308},\r\n{\"type\":32, \"data\":[360,64,1],\"color\":[140,143,161,255],\"score\":0.0320252},\r\n{\"type\":32, \"data\":[251,460,6],\"color\":[154,111,75,255],\"score\":0.0320224},\r\n{\"type\":32, \"data\":[364,290,4],\"color\":[148,123,90,255],\"score\":0.03202},\r\n{\"type\":32, \"data\":[375,354,4],\"color\":[94,96,48,255],\"score\":0.0320168},\r\n{\"type\":32, \"data\":[451,157,16],\"color\":[11,10,50,255],\"score\":0.0320142},\r\n{\"type\":32, \"data\":[333,276,4],\"color\":[158,136,96,255],\"score\":0.0320108},\r\n{\"type\":32, \"data\":[289,104,2],\"color\":[112,103,61,255],\"score\":0.0320072},\r\n{\"type\":32, \"data\":[547,111,2],\"color\":[238,239,238,255],\"score\":0.0320019},\r\n{\"type\":32, \"data\":[599,445,2],\"color\":[173,151,131,255],\"score\":0.0319977},\r\n{\"type\":32, \"data\":[344,49,0],\"color\":[222,228,224,255],\"score\":0.0319929},\r\n{\"type\":32, \"data\":[541,323,0],\"color\":[121,122,138,255],\"score\":0.0319899},\r\n{\"type\":32, \"data\":[175,152,1],\"color\":[179,187,170,255],\"score\":0.0319854},\r\n{\"type\":32, \"data\":[37,127,3],\"color\":[14,14,49,255],\"score\":0.0319818},\r\n{\"type\":32, \"data\":[282,97,1],\"color\":[118,117,79,255],\"score\":0.0319767},\r\n{\"type\":32, \"data\":[521,92,1],\"color\":[164,172,186,255],\"score\":0.0319724},\r\n{\"type\":32, \"data\":[652,394,7],\"color\":[54,70,18,255],\"score\":0.0319701},\r\n{\"type\":32, \"data\":[44,281,6],\"color\":[46,70,14,255],\"score\":0.0319672},\r\n{\"type\":32, \"data\":[231,493,9],\"color\":[140,96,66,255],\"score\":0.031964},\r\n{\"type\":32, \"data\":[493,49,1],\"color\":[90,103,79,255],\"score\":0.0319608},\r\n{\"type\":32, \"data\":[85,316,4],\"color\":[64,80,24,255],\"score\":0.0319565},\r\n{\"type\":32, \"data\":[36,161,14],\"color\":[11,10,50,255],\"score\":0.0319531},\r\n{\"type\":32, \"data\":[342,507,5],\"color\":[106,98,60,255],\"score\":0.0319498},\r\n{\"type\":32, \"data\":[606,574,1],\"color\":[134,139,127,255],\"score\":0.0319452},\r\n{\"type\":32, \"data\":[603,482,5],\"color\":[116,99,68,255],\"score\":0.0319418},\r\n{\"type\":32, \"data\":[486,123,2],\"color\":[81,74,55,255],\"score\":0.0319386},\r\n{\"type\":32, \"data\":[545,127,1],\"color\":[110,105,85,255],\"score\":0.0319344},\r\n{\"type\":32, \"data\":[552,316,7],\"color\":[58,71,21,255],\"score\":0.0319304},\r\n{\"type\":32, \"data\":[41,162,12],\"color\":[11,10,50,255],\"score\":0.0319275},\r\n{\"type\":32, \"data\":[281,69,1],\"color\":[94,94,88,255],\"score\":0.0319223},\r\n{\"type\":32, \"data\":[642,487,8],\"color\":[82,86,44,255],\"score\":0.0319189},\r\n{\"type\":32, \"data\":[489,130,4],\"color\":[14,13,51,255],\"score\":0.0319153},\r\n{\"type\":32, \"data\":[253,65,1],\"color\":[141,139,136,255],\"score\":0.0319102},\r\n{\"type\":32, \"data\":[246,97,2],\"color\":[15,14,50,255],\"score\":0.0319072},\r\n{\"type\":32, \"data\":[466,62,1],\"color\":[181,179,169,255],\"score\":0.031903},\r\n{\"type\":32, \"data\":[228,99,4],\"color\":[74,79,36,255],\"score\":0.0319007},\r\n{\"type\":32, \"data\":[364,90,5],\"color\":[12,11,51,255],\"score\":0.0318975},\r\n{\"type\":32, \"data\":[492,82,1],\"color\":[121,129,140,255],\"score\":0.031892},\r\n{\"type\":32, \"data\":[446,66,1],\"color\":[11,10,50,255],\"score\":0.0318885},\r\n{\"type\":32, \"data\":[540,135,2],\"color\":[118,114,98,255],\"score\":0.0318851},\r\n{\"type\":32, \"data\":[550,114,2],\"color\":[181,181,173,255],\"score\":0.0318817},\r\n{\"type\":32, \"data\":[548,306,0],\"color\":[192,196,195,255],\"score\":0.0318762},\r\n{\"type\":32, \"data\":[321,64,2],\"color\":[121,121,108,255],\"score\":0.031873},\r\n{\"type\":32, \"data\":[598,386,2],\"color\":[201,163,123,255],\"score\":0.031868},\r\n{\"type\":32, \"data\":[421,57,4],\"color\":[31,29,55,255],\"score\":0.031865},\r\n{\"type\":32, \"data\":[242,193,1],\"color\":[95,101,77,255],\"score\":0.0318608},\r\n{\"type\":32, \"data\":[585,493,3],\"color\":[48,55,31,255],\"score\":0.0318573},\r\n{\"type\":32, \"data\":[453,57,3],\"color\":[111,108,85,255],\"score\":0.0318534},\r\n{\"type\":32, \"data\":[437,233,3],\"color\":[10,11,50,255],\"score\":0.0318501},\r\n{\"type\":32, \"data\":[419,85,3],\"color\":[11,10,50,255],\"score\":0.0318452},\r\n{\"type\":32, \"data\":[300,256,3],\"color\":[183,160,118,255],\"score\":0.0318406},\r\n{\"type\":32, \"data\":[630,397,5],\"color\":[66,68,30,255],\"score\":0.0318372},\r\n{\"type\":32, \"data\":[625,520,3],\"color\":[13,12,50,255],\"score\":0.0318339},\r\n{\"type\":32, \"data\":[572,577,11],\"color\":[11,10,50,255],\"score\":0.0318313},\r\n{\"type\":32, \"data\":[303,61,3],\"color\":[14,14,52,255],\"score\":0.0318287},\r\n{\"type\":32, \"data\":[608,447,2],\"color\":[168,131,101,255],\"score\":0.0318256},\r\n{\"type\":32, \"data\":[410,38,1],\"color\":[33,32,68,255],\"score\":0.0318215},\r\n{\"type\":32, \"data\":[157,148,0],\"color\":[63,80,66,255],\"score\":0.0318163},\r\n{\"type\":32, \"data\":[370,324,3],\"color\":[115,109,67,255],\"score\":0.0318135},\r\n{\"type\":32, \"data\":[203,333,1],\"color\":[37,86,71,255],\"score\":0.0318105},\r\n{\"type\":32, \"data\":[299,56,0],\"color\":[173,173,209,255],\"score\":0.031803},\r\n{\"type\":32, \"data\":[345,83,2],\"color\":[17,15,53,255],\"score\":0.0317985},\r\n{\"type\":32, \"data\":[443,90,2],\"color\":[118,105,63,255],\"score\":0.0317935},\r\n{\"type\":32, \"data\":[439,59,1],\"color\":[157,149,119,255],\"score\":0.0317904},\r\n{\"type\":32, \"data\":[504,96,1],\"color\":[250,250,248,255],\"score\":0.0317869},\r\n{\"type\":32, \"data\":[761,432,29],\"color\":[11,10,50,255],\"score\":0.0317845},\r\n{\"type\":32, \"data\":[615,574,2],\"color\":[63,70,47,255],\"score\":0.0317803},\r\n{\"type\":32, \"data\":[435,380,4],\"color\":[56,76,19,255],\"score\":0.0317769},\r\n{\"type\":32, \"data\":[115,122,7],\"color\":[45,59,16,255],\"score\":0.0317738},\r\n{\"type\":32, \"data\":[89,266,3],\"color\":[13,13,49,255],\"score\":0.0317708},\r\n{\"type\":32, \"data\":[585,236,2],\"color\":[60,80,20,255],\"score\":0.0317667},\r\n{\"type\":32, \"data\":[631,497,7],\"color\":[73,76,41,255],\"score\":0.0317633},\r\n{\"type\":32, \"data\":[637,383,4],\"color\":[79,88,34,255],\"score\":0.0317598},\r\n{\"type\":32, \"data\":[365,323,2],\"color\":[178,157,113,255],\"score\":0.0317556},\r\n{\"type\":32, \"data\":[475,238,2],\"color\":[22,31,44,255],\"score\":0.0317515},\r\n{\"type\":32, \"data\":[246,161,2],\"color\":[73,79,43,255],\"score\":0.0317481},\r\n{\"type\":32, \"data\":[746,345,7],\"color\":[101,89,52,255],\"score\":0.0317452},\r\n{\"type\":32, \"data\":[776,331,4],\"color\":[75,87,26,255],\"score\":0.0317425},\r\n{\"type\":32, \"data\":[465,106,2],\"color\":[20,24,55,255],\"score\":0.0317385},\r\n{\"type\":32, \"data\":[125,334,1],\"color\":[71,79,33,255],\"score\":0.0317354},\r\n{\"type\":32, \"data\":[441,71,1],\"color\":[225,224,208,255],\"score\":0.0317314},\r\n{\"type\":32, \"data\":[180,511,4],\"color\":[76,86,39,255],\"score\":0.0317286},\r\n{\"type\":32, \"data\":[694,234,31],\"color\":[11,10,50,255],\"score\":0.031725},\r\n{\"type\":32, \"data\":[260,233,2],\"color\":[83,77,44,255],\"score\":0.0317218},\r\n{\"type\":32, \"data\":[580,178,5],\"color\":[33,38,29,255],\"score\":0.0317193},\r\n{\"type\":32, \"data\":[661,265,6],\"color\":[46,70,15,255],\"score\":0.0317164},\r\n{\"type\":32, \"data\":[587,546,1],\"color\":[138,136,108,255],\"score\":0.0317126},\r\n{\"type\":32, \"data\":[129,136,4],\"color\":[59,66,24,255],\"score\":0.03171},\r\n{\"type\":32, \"data\":[302,507,3],\"color\":[203,155,111,255],\"score\":0.0317071},\r\n{\"type\":32, \"data\":[376,47,0],\"color\":[11,10,50,255],\"score\":0.0317019},\r\n{\"type\":32, \"data\":[456,30,3],\"color\":[11,10,50,255],\"score\":0.0316974},\r\n{\"type\":32, \"data\":[519,141,2],\"color\":[17,16,51,255],\"score\":0.0316947},\r\n{\"type\":32, \"data\":[648,381,8],\"color\":[52,68,15,255],\"score\":0.0316919},\r\n{\"type\":32, \"data\":[21,241,3],\"color\":[39,58,16,255],\"score\":0.0316887},\r\n{\"type\":32, \"data\":[439,51,4],\"color\":[98,96,71,255],\"score\":0.0316852},\r\n{\"type\":32, \"data\":[664,473,3],\"color\":[104,99,51,255],\"score\":0.0316817},\r\n{\"type\":32, \"data\":[66,151,4],\"color\":[55,72,25,255],\"score\":0.0316789},\r\n{\"type\":32, \"data\":[195,154,1],\"color\":[179,180,178,255],\"score\":0.0316735},\r\n{\"type\":32, \"data\":[666,398,8],\"color\":[69,79,31,255],\"score\":0.0316705},\r\n{\"type\":32, \"data\":[76,313,3],\"color\":[40,57,23,255],\"score\":0.0316665},\r\n{\"type\":32, \"data\":[352,339,1],\"color\":[108,97,62,255],\"score\":0.0316635},\r\n{\"type\":32, \"data\":[86,157,1],\"color\":[140,148,111,255],\"score\":0.031659},\r\n{\"type\":32, \"data\":[589,478,4],\"color\":[50,60,31,255],\"score\":0.0316554},\r\n{\"type\":32, \"data\":[329,286,3],\"color\":[101,90,56,255],\"score\":0.0316519},\r\n{\"type\":32, \"data\":[656,467,3],\"color\":[62,71,26,255],\"score\":0.031649},\r\n{\"type\":32, \"data\":[461,422,7],\"color\":[11,11,49,255],\"score\":0.0316453},\r\n{\"type\":32, \"data\":[368,149,7],\"color\":[50,49,31,255],\"score\":0.0316431},\r\n{\"type\":32, \"data\":[121,144,1],\"color\":[21,25,53,255],\"score\":0.0316377},\r\n{\"type\":32, \"data\":[482,99,2],\"color\":[58,75,63,255],\"score\":0.031635},\r\n{\"type\":32, \"data\":[345,60,0],\"color\":[11,10,50,255],\"score\":0.0316316},\r\n{\"type\":32, \"data\":[405,273,6],\"color\":[55,75,17,255],\"score\":0.0316293},\r\n{\"type\":32, \"data\":[368,326,1],\"color\":[83,77,39,255],\"score\":0.0316259},\r\n{\"type\":32, \"data\":[607,459,3],\"color\":[141,121,88,255],\"score\":0.0316226},\r\n{\"type\":32, \"data\":[532,101,3],\"color\":[144,148,144,255],\"score\":0.0316192},\r\n{\"type\":32, \"data\":[70,276,10],\"color\":[11,10,49,255],\"score\":0.0316154},\r\n{\"type\":32, \"data\":[393,72,1],\"color\":[116,119,135,255],\"score\":0.0316116},\r\n{\"type\":32, \"data\":[411,47,1],\"color\":[173,182,180,255],\"score\":0.0316083},\r\n{\"type\":32, \"data\":[464,75,2],\"color\":[22,21,59,255],\"score\":0.0316049},\r\n{\"type\":32, \"data\":[282,128,7],\"color\":[39,42,27,255],\"score\":0.0316019},\r\n{\"type\":32, \"data\":[510,92,1],\"color\":[198,200,202,255],\"score\":0.031599},\r\n{\"type\":32, \"data\":[392,108,2],\"color\":[34,60,41,255],\"score\":0.0315949},\r\n{\"type\":32, \"data\":[437,37,2],\"color\":[222,222,221,255],\"score\":0.0315915},\r\n{\"type\":32, \"data\":[599,394,1],\"color\":[206,175,145,255],\"score\":0.0315883},\r\n{\"type\":32, \"data\":[674,447,8],\"color\":[82,84,39,255],\"score\":0.0315858},\r\n{\"type\":32, \"data\":[487,165,5],\"color\":[12,11,50,255],\"score\":0.0315825},\r\n{\"type\":32, \"data\":[544,323,2],\"color\":[210,201,160,255],\"score\":0.0315793},\r\n{\"type\":32, \"data\":[466,44,1],\"color\":[217,219,219,255],\"score\":0.0315754},\r\n{\"type\":32, \"data\":[485,62,1],\"color\":[69,70,97,255],\"score\":0.0315717},\r\n{\"type\":32, \"data\":[379,76,0],\"color\":[204,200,217,255],\"score\":0.031568},\r\n{\"type\":32, \"data\":[618,423,2],\"color\":[126,106,82,255],\"score\":0.031564},\r\n{\"type\":32, \"data\":[251,236,6],\"color\":[35,51,14,255],\"score\":0.0315607},\r\n{\"type\":32, \"data\":[479,59,0],\"color\":[57,75,106,255],\"score\":0.031554},\r\n{\"type\":32, \"data\":[155,146,2],\"color\":[219,224,220,255],\"score\":0.0315485},\r\n{\"type\":32, \"data\":[95,137,2],\"color\":[61,63,32,255],\"score\":0.0315446},\r\n{\"type\":32, \"data\":[628,260,5],\"color\":[56,77,19,255],\"score\":0.0315425},\r\n{\"type\":32, \"data\":[278,65,1],\"color\":[94,97,110,255],\"score\":0.0315384},\r\n{\"type\":32, \"data\":[286,61,1],\"color\":[140,134,107,255],\"score\":0.031535},\r\n{\"type\":32, \"data\":[380,86,3],\"color\":[136,126,78,255],\"score\":0.0315308},\r\n{\"type\":32, \"data\":[306,77,4],\"color\":[13,11,50,255],\"score\":0.031527},\r\n{\"type\":32, \"data\":[537,16,13],\"color\":[11,10,50,255],\"score\":0.0315239},\r\n{\"type\":32, \"data\":[399,298,6],\"color\":[48,66,14,255],\"score\":0.0315215},\r\n{\"type\":32, \"data\":[573,558,2],\"color\":[40,45,70,255],\"score\":0.0315179},\r\n{\"type\":32, \"data\":[427,123,5],\"color\":[74,69,52,255],\"score\":0.0315145},\r\n{\"type\":32, \"data\":[403,57,1],\"color\":[132,130,117,255],\"score\":0.0315103},\r\n{\"type\":32, \"data\":[150,138,1],\"color\":[178,174,156,255],\"score\":0.0315035},\r\n{\"type\":32, \"data\":[476,137,1],\"color\":[122,119,85,255],\"score\":0.0315002},\r\n{\"type\":32, \"data\":[447,79,1],\"color\":[40,40,62,255],\"score\":0.0314972},\r\n{\"type\":32, \"data\":[553,129,1],\"color\":[98,105,92,255],\"score\":0.0314936},\r\n{\"type\":32, \"data\":[298,451,4],\"color\":[131,106,62,255],\"score\":0.0314905},\r\n{\"type\":32, \"data\":[631,478,6],\"color\":[88,88,48,255],\"score\":0.0314878},\r\n{\"type\":32, \"data\":[336,463,6],\"color\":[114,95,64,255],\"score\":0.0314854},\r\n{\"type\":32, \"data\":[101,137,2],\"color\":[61,74,33,255],\"score\":0.031481},\r\n{\"type\":32, \"data\":[564,470,23],\"color\":[11,10,50,255],\"score\":0.0314784},\r\n{\"type\":32, \"data\":[43,108,3],\"color\":[76,80,39,255],\"score\":0.0314754},\r\n{\"type\":32, \"data\":[391,49,2],\"color\":[14,14,53,255],\"score\":0.0314704},\r\n{\"type\":32, \"data\":[461,134,1],\"color\":[133,133,82,255],\"score\":0.0314665},\r\n{\"type\":32, \"data\":[446,53,0],\"color\":[224,230,219,255],\"score\":0.0314643},\r\n{\"type\":32, \"data\":[435,99,4],\"color\":[14,14,52,255],\"score\":0.0314612},\r\n{\"type\":32, \"data\":[401,84,1],\"color\":[110,110,61,255],\"score\":0.0314582},\r\n{\"type\":32, \"data\":[433,75,1],\"color\":[11,10,50,255],\"score\":0.0314542},\r\n{\"type\":32, \"data\":[157,239,1],\"color\":[67,89,26,255],\"score\":0.0314503},\r\n{\"type\":32, \"data\":[585,540,1],\"color\":[208,217,226,255],\"score\":0.031447},\r\n{\"type\":32, \"data\":[46,173,1],\"color\":[59,68,51,255],\"score\":0.0314435},\r\n{\"type\":32, \"data\":[327,84,2],\"color\":[40,39,62,255],\"score\":0.0314392},\r\n{\"type\":32, \"data\":[281,76,1],\"color\":[130,123,85,255],\"score\":0.0314357},\r\n{\"type\":32, \"data\":[486,53,2],\"color\":[206,213,217,255],\"score\":0.0314321},\r\n{\"type\":32, \"data\":[400,57,1],\"color\":[110,108,84,255],\"score\":0.0314281},\r\n{\"type\":32, \"data\":[602,370,2],\"color\":[106,93,60,255],\"score\":0.0314243},\r\n{\"type\":32, \"data\":[571,166,3],\"color\":[14,13,48,255],\"score\":0.031421},\r\n{\"type\":32, \"data\":[343,238,7],\"color\":[129,119,72,255],\"score\":0.0314183},\r\n{\"type\":32, \"data\":[468,58,1],\"color\":[188,192,189,255],\"score\":0.0314153},\r\n{\"type\":32, \"data\":[190,164,1],\"color\":[66,78,64,255],\"score\":0.0314113},\r\n{\"type\":32, \"data\":[335,185,4],\"color\":[85,93,43,255],\"score\":0.0314082},\r\n{\"type\":32, \"data\":[346,56,2],\"color\":[11,10,50,255],\"score\":0.0314038},\r\n{\"type\":32, \"data\":[552,228,3],\"color\":[36,57,15,255],\"score\":0.0314007},\r\n{\"type\":32, \"data\":[435,43,1],\"color\":[14,12,49,255],\"score\":0.0313957},\r\n{\"type\":32, \"data\":[532,184,9],\"color\":[46,53,15,255],\"score\":0.0313932},\r\n{\"type\":32, \"data\":[367,64,1],\"color\":[123,128,138,255],\"score\":0.0313906},\r\n{\"type\":32, \"data\":[77,159,4],\"color\":[53,69,31,255],\"score\":0.0313882},\r\n{\"type\":32, \"data\":[314,51,0],\"color\":[71,73,99,255],\"score\":0.0313851},\r\n{\"type\":32, \"data\":[480,61,0],\"color\":[178,187,197,255],\"score\":0.0313796},\r\n{\"type\":32, \"data\":[352,65,1],\"color\":[200,206,207,255],\"score\":0.031374},\r\n{\"type\":32, \"data\":[402,39,1],\"color\":[137,138,152,255],\"score\":0.031371},\r\n{\"type\":32, \"data\":[478,89,1],\"color\":[164,151,122,255],\"score\":0.0313674},\r\n{\"type\":32, \"data\":[366,68,0],\"color\":[66,66,88,255],\"score\":0.0313631},\r\n{\"type\":32, \"data\":[402,63,1],\"color\":[225,230,219,255],\"score\":0.031359},\r\n{\"type\":32, \"data\":[319,477,5],\"color\":[154,120,83,255],\"score\":0.0313566},\r\n{\"type\":32, \"data\":[100,148,3],\"color\":[22,29,53,255],\"score\":0.0313535},\r\n{\"type\":32, \"data\":[384,99,2],\"color\":[114,112,68,255],\"score\":0.0313488},\r\n{\"type\":32, \"data\":[157,285,1],\"color\":[39,61,8,255],\"score\":0.0313458},\r\n{\"type\":32, \"data\":[272,503,5],\"color\":[171,105,74,255],\"score\":0.0313428},\r\n{\"type\":32, \"data\":[410,74,1],\"color\":[21,21,60,255],\"score\":0.031338},\r\n{\"type\":32, \"data\":[549,108,1],\"color\":[98,100,95,255],\"score\":0.0313349},\r\n{\"type\":32, \"data\":[511,36,1],\"color\":[170,168,179,255],\"score\":0.0313288},\r\n{\"type\":32, \"data\":[404,48,1],\"color\":[98,108,103,255],\"score\":0.031324},\r\n{\"type\":32, \"data\":[193,155,1],\"color\":[220,227,219,255],\"score\":0.0313204},\r\n{\"type\":32, \"data\":[728,278,20],\"color\":[11,10,50,255],\"score\":0.0313177},\r\n{\"type\":32, \"data\":[677,470,3],\"color\":[62,74,34,255],\"score\":0.0313148},\r\n{\"type\":32, \"data\":[498,92,4],\"color\":[127,119,99,255],\"score\":0.031312},\r\n{\"type\":32, \"data\":[269,265,2],\"color\":[75,71,35,255],\"score\":0.0313087},\r\n{\"type\":32, \"data\":[361,64,1],\"color\":[197,201,214,255],\"score\":0.0313043},\r\n{\"type\":32, \"data\":[600,574,1],\"color\":[163,172,176,255],\"score\":0.0313001},\r\n{\"type\":32, \"data\":[182,470,4],\"color\":[139,100,72,255],\"score\":0.0312974},\r\n{\"type\":32, \"data\":[338,66,1],\"color\":[159,155,145,255],\"score\":0.0312948},\r\n{\"type\":32, \"data\":[464,72,1],\"color\":[232,231,231,255],\"score\":0.0312902},\r\n{\"type\":32, \"data\":[370,195,4],\"color\":[57,81,23,255],\"score\":0.0312872},\r\n{\"type\":32, \"data\":[346,518,7],\"color\":[80,86,41,255],\"score\":0.0312845},\r\n{\"type\":32, \"data\":[549,295,1],\"color\":[141,160,154,255],\"score\":0.031281},\r\n{\"type\":32, \"data\":[593,491,1],\"color\":[158,152,146,255],\"score\":0.0312758},\r\n{\"type\":32, \"data\":[760,355,4],\"color\":[68,82,24,255],\"score\":0.0312714},\r\n{\"type\":32, \"data\":[78,304,8],\"color\":[11,10,50,255],\"score\":0.0312681},\r\n{\"type\":32, \"data\":[467,64,1],\"color\":[17,16,53,255],\"score\":0.0312649},\r\n{\"type\":32, \"data\":[331,564,2],\"color\":[15,28,10,255],\"score\":0.0312619},\r\n{\"type\":32, \"data\":[537,39,1],\"color\":[195,197,194,255],\"score\":0.0312575},\r\n{\"type\":32, \"data\":[281,62,2],\"color\":[124,113,72,255],\"score\":0.0312518},\r\n{\"type\":32, \"data\":[262,532,17],\"color\":[11,10,50,255],\"score\":0.0312485},\r\n{\"type\":32, \"data\":[399,73,0],\"color\":[30,30,67,255],\"score\":0.0312451},\r\n{\"type\":32, \"data\":[255,67,0],\"color\":[11,10,50,255],\"score\":0.0312422},\r\n{\"type\":32, \"data\":[63,148,2],\"color\":[86,99,46,255],\"score\":0.0312394},\r\n{\"type\":32, \"data\":[438,73,0],\"color\":[156,156,160,255],\"score\":0.0312345},\r\n{\"type\":32, \"data\":[407,63,0],\"color\":[251,251,252,255],\"score\":0.0312292},\r\n{\"type\":32, \"data\":[269,71,4],\"color\":[12,11,50,255],\"score\":0.0312259},\r\n{\"type\":32, \"data\":[409,51,1],\"color\":[157,150,134,255],\"score\":0.0312228},\r\n{\"type\":32, \"data\":[142,137,1],\"color\":[166,162,150,255],\"score\":0.0312193},\r\n{\"type\":32, \"data\":[358,51,1],\"color\":[183,180,161,255],\"score\":0.0312146},\r\n{\"type\":32, \"data\":[29,147,2],\"color\":[64,76,48,255],\"score\":0.0312107},\r\n{\"type\":32, \"data\":[604,384,5],\"color\":[161,130,85,255],\"score\":0.0312081},\r\n{\"type\":32, \"data\":[201,159,2],\"color\":[174,176,162,255],\"score\":0.0312044},\r\n{\"type\":32, \"data\":[283,531,5],\"color\":[14,15,48,255],\"score\":0.0312013},\r\n{\"type\":32, \"data\":[516,113,3],\"color\":[108,101,53,255],\"score\":0.0311986},\r\n{\"type\":32, \"data\":[16,184,1],\"color\":[53,57,69,255],\"score\":0.0311958},\r\n{\"type\":32, \"data\":[166,309,2],\"color\":[32,52,20,255],\"score\":0.031191},\r\n{\"type\":32, \"data\":[484,80,1],\"color\":[228,232,228,255],\"score\":0.0311879},\r\n{\"type\":32, \"data\":[586,210,2],\"color\":[49,65,18,255],\"score\":0.0311839},\r\n{\"type\":32, \"data\":[378,76,0],\"color\":[196,197,216,255],\"score\":0.0311805},\r\n{\"type\":32, \"data\":[235,422,2],\"color\":[84,81,52,255],\"score\":0.0311775},\r\n{\"type\":32, \"data\":[321,267,2],\"color\":[224,164,126,255],\"score\":0.0311747},\r\n{\"type\":32, \"data\":[418,265,4],\"color\":[46,70,12,255],\"score\":0.0311718},\r\n{\"type\":32, \"data\":[245,127,8],\"color\":[56,60,22,255],\"score\":0.0311692},\r\n{\"type\":32, \"data\":[436,93,2],\"color\":[118,110,68,255],\"score\":0.0311656},\r\n{\"type\":32, \"data\":[166,103,3],\"color\":[82,80,39,255],\"score\":0.0311631},\r\n{\"type\":32, \"data\":[75,114,5],\"color\":[64,73,30,255],\"score\":0.0311608},\r\n{\"type\":32, \"data\":[358,66,1],\"color\":[178,181,183,255],\"score\":0.0311533},\r\n{\"type\":32, \"data\":[354,314,1],\"color\":[205,182,136,255],\"score\":0.0311505},\r\n{\"type\":32, \"data\":[509,46,0],\"color\":[102,104,102,255],\"score\":0.0311451},\r\n{\"type\":32, \"data\":[386,53,1],\"color\":[128,114,79,255],\"score\":0.0311415},\r\n{\"type\":32, \"data\":[323,154,1],\"color\":[90,89,53,255],\"score\":0.0311388},\r\n{\"type\":32, \"data\":[304,483,3],\"color\":[195,147,102,255],\"score\":0.0311366},\r\n{\"type\":32, \"data\":[468,129,1],\"color\":[164,154,109,255],\"score\":0.0311328},\r\n{\"type\":32, \"data\":[600,373,1],\"color\":[19,16,35,255],\"score\":0.0311289},\r\n{\"type\":32, \"data\":[591,566,1],\"color\":[45,44,46,255],\"score\":0.0311258},\r\n{\"type\":32, \"data\":[443,56,1],\"color\":[31,29,55,255],\"score\":0.0311219},\r\n{\"type\":32, \"data\":[415,48,1],\"color\":[122,125,104,255],\"score\":0.0311162},\r\n{\"type\":32, \"data\":[158,102,4],\"color\":[75,73,37,255],\"score\":0.0311135},\r\n{\"type\":32, \"data\":[206,471,6],\"color\":[150,102,70,255],\"score\":0.0311113},\r\n{\"type\":32, \"data\":[416,132,1],\"color\":[78,76,42,255],\"score\":0.031108},\r\n{\"type\":32, \"data\":[684,481,11],\"color\":[11,10,50,255],\"score\":0.0311051},\r\n{\"type\":32, \"data\":[553,324,5],\"color\":[68,77,27,255],\"score\":0.0311015},\r\n{\"type\":32, \"data\":[443,81,1],\"color\":[6,7,47,255],\"score\":0.0310988},\r\n{\"type\":32, \"data\":[283,205,5],\"color\":[36,50,14,255],\"score\":0.0310959},\r\n{\"type\":32, \"data\":[89,155,2],\"color\":[100,111,71,255],\"score\":0.0310938},\r\n{\"type\":32, \"data\":[602,464,1],\"color\":[83,72,52,255],\"score\":0.0310909},\r\n{\"type\":32, \"data\":[267,65,1],\"color\":[165,160,136,255],\"score\":0.0310861},\r\n{\"type\":32, \"data\":[415,47,0],\"color\":[225,226,223,255],\"score\":0.0310816},\r\n{\"type\":32, \"data\":[570,173,4],\"color\":[54,59,23,255],\"score\":0.0310791},\r\n{\"type\":32, \"data\":[293,299,1],\"color\":[185,167,125,255],\"score\":0.0310758},\r\n{\"type\":32, \"data\":[318,271,2],\"color\":[162,135,94,255],\"score\":0.0310724},\r\n{\"type\":32, \"data\":[410,81,1],\"color\":[190,180,137,255],\"score\":0.0310686},\r\n{\"type\":32, \"data\":[276,214,3],\"color\":[126,114,72,255],\"score\":0.0310659},\r\n{\"type\":32, \"data\":[175,122,4],\"color\":[72,73,33,255],\"score\":0.0310636},\r\n{\"type\":32, \"data\":[581,541,1],\"color\":[128,139,139,255],\"score\":0.0310603},\r\n{\"type\":32, \"data\":[472,295,4],\"color\":[11,10,50,255],\"score\":0.031058},\r\n{\"type\":32, \"data\":[565,106,6],\"color\":[11,10,50,255],\"score\":0.031055},\r\n{\"type\":32, \"data\":[251,200,2],\"color\":[53,63,46,255],\"score\":0.0310525},\r\n{\"type\":32, \"data\":[443,65,1],\"color\":[13,12,52,255],\"score\":0.0310497},\r\n{\"type\":32, \"data\":[316,488,8],\"color\":[167,126,88,255],\"score\":0.0310471},\r\n{\"type\":32, \"data\":[316,258,3],\"color\":[208,167,122,255],\"score\":0.0310436},\r\n{\"type\":32, \"data\":[592,186,5],\"color\":[40,55,15,255],\"score\":0.0310397},\r\n{\"type\":32, \"data\":[460,42,1],\"color\":[113,115,128,255],\"score\":0.0310337},\r\n{\"type\":32, \"data\":[491,48,1],\"color\":[113,124,104,255],\"score\":0.0310297},\r\n{\"type\":32, \"data\":[404,86,2],\"color\":[11,10,50,255],\"score\":0.0310267},\r\n{\"type\":32, \"data\":[583,525,1],\"color\":[111,122,113,255],\"score\":0.0310224},\r\n{\"type\":32, \"data\":[476,41,1],\"color\":[71,70,87,255],\"score\":0.0310187},\r\n{\"type\":32, \"data\":[91,142,2],\"color\":[69,73,37,255],\"score\":0.0310152},\r\n{\"type\":32, \"data\":[755,350,6],\"color\":[86,88,34,255],\"score\":0.0310123},\r\n{\"type\":32, \"data\":[529,161,8],\"color\":[63,66,26,255],\"score\":0.03101},\r\n{\"type\":32, \"data\":[460,49,1],\"color\":[190,184,164,255],\"score\":0.0310058},\r\n{\"type\":32, \"data\":[323,63,2],\"color\":[151,145,122,255],\"score\":0.0310025},\r\n{\"type\":32, \"data\":[129,140,0],\"color\":[164,170,152,255],\"score\":0.0309975},\r\n{\"type\":32, \"data\":[332,444,2],\"color\":[45,55,20,255],\"score\":0.0309937},\r\n{\"type\":32, \"data\":[372,228,8],\"color\":[84,95,42,255],\"score\":0.0309912},\r\n{\"type\":32, \"data\":[308,54,0],\"color\":[11,10,50,255],\"score\":0.0309859},\r\n{\"type\":32, \"data\":[604,393,3],\"color\":[151,119,78,255],\"score\":0.0309829},\r\n{\"type\":32, \"data\":[506,138,2],\"color\":[104,97,63,255],\"score\":0.0309798},\r\n{\"type\":32, \"data\":[349,104,2],\"color\":[16,16,49,255],\"score\":0.0309769},\r\n{\"type\":32, \"data\":[420,380,7],\"color\":[53,75,17,255],\"score\":0.0309742},\r\n{\"type\":32, \"data\":[284,253,7],\"color\":[144,124,85,255],\"score\":0.0309714},\r\n{\"type\":32, \"data\":[584,222,8],\"color\":[11,10,50,255],\"score\":0.0309686},\r\n{\"type\":32, \"data\":[190,123,2],\"color\":[84,82,47,255],\"score\":0.0309658},\r\n{\"type\":32, \"data\":[261,518,4],\"color\":[11,10,50,255],\"score\":0.0309624},\r\n{\"type\":32, \"data\":[421,37,0],\"color\":[231,233,234,255],\"score\":0.0309596},\r\n{\"type\":32, \"data\":[584,376,2],\"color\":[184,162,124,255],\"score\":0.0309563},\r\n{\"type\":32, \"data\":[483,56,2],\"color\":[185,188,197,255],\"score\":0.0309535},\r\n{\"type\":32, \"data\":[325,464,6],\"color\":[148,123,80,255],\"score\":0.0309507},\r\n{\"type\":32, \"data\":[461,413,3],\"color\":[57,80,27,255],\"score\":0.0309461},\r\n{\"type\":32, \"data\":[582,558,1],\"color\":[123,130,127,255],\"score\":0.0309422},\r\n{\"type\":32, \"data\":[44,252,3],\"color\":[50,72,19,255],\"score\":0.0309397},\r\n{\"type\":32, \"data\":[375,292,4],\"color\":[112,109,58,255],\"score\":0.0309371},\r\n{\"type\":32, \"data\":[272,137,7],\"color\":[53,59,22,255],\"score\":0.0309343},\r\n{\"type\":32, \"data\":[312,135,3],\"color\":[19,21,41,255],\"score\":0.030932},\r\n{\"type\":32, \"data\":[212,114,7],\"color\":[48,50,27,255],\"score\":0.0309291},\r\n{\"type\":32, \"data\":[470,409,3],\"color\":[11,10,49,255],\"score\":0.0309259},\r\n{\"type\":32, \"data\":[465,103,2],\"color\":[75,79,49,255],\"score\":0.0309217},\r\n{\"type\":32, \"data\":[180,155,1],\"color\":[173,188,175,255],\"score\":0.0309191},\r\n{\"type\":32, \"data\":[396,67,0],\"color\":[11,10,50,255],\"score\":0.0309145},\r\n{\"type\":32, \"data\":[559,115,1],\"color\":[199,200,195,255],\"score\":0.0309118},\r\n{\"type\":32, \"data\":[464,111,1],\"color\":[82,79,55,255],\"score\":0.0309084},\r\n{\"type\":32, \"data\":[582,565,1],\"color\":[147,158,163,255],\"score\":0.0309047},\r\n{\"type\":32, \"data\":[49,319,14],\"color\":[11,10,50,255],\"score\":0.0309026},\r\n{\"type\":32, \"data\":[462,37,2],\"color\":[236,235,234,255],\"score\":0.0308996},\r\n{\"type\":32, \"data\":[635,247,3],\"color\":[92,92,33,255],\"score\":0.0308962},\r\n{\"type\":32, \"data\":[603,528,8],\"color\":[111,95,57,255],\"score\":0.0308927},\r\n{\"type\":32, \"data\":[538,44,0],\"color\":[242,242,254,255],\"score\":0.030887},\r\n{\"type\":32, \"data\":[368,342,5],\"color\":[115,106,67,255],\"score\":0.0308835},\r\n{\"type\":32, \"data\":[310,261,2],\"color\":[102,91,52,255],\"score\":0.0308803},\r\n{\"type\":32, \"data\":[518,29,0],\"color\":[94,94,129,255],\"score\":0.0308757},\r\n{\"type\":32, \"data\":[289,60,0],\"color\":[11,10,50,255],\"score\":0.0308728},\r\n{\"type\":32, \"data\":[434,59,0],\"color\":[11,10,50,255],\"score\":0.0308694},\r\n{\"type\":32, \"data\":[153,214,2],\"color\":[79,104,31,255],\"score\":0.0308653},\r\n{\"type\":32, \"data\":[503,46,1],\"color\":[179,189,180,255],\"score\":0.030862},\r\n{\"type\":32, \"data\":[438,95,2],\"color\":[78,79,63,255],\"score\":0.0308581},\r\n{\"type\":32, \"data\":[493,81,0],\"color\":[97,106,128,255],\"score\":0.0308552},\r\n{\"type\":32, \"data\":[165,273,13],\"color\":[11,10,50,255],\"score\":0.030853},\r\n{\"type\":32, \"data\":[242,140,3],\"color\":[65,69,30,255],\"score\":0.0308503},\r\n{\"type\":32, \"data\":[110,309,9],\"color\":[11,10,50,255],\"score\":0.0308472},\r\n{\"type\":32, \"data\":[515,132,2],\"color\":[12,11,49,255],\"score\":0.0308443},\r\n{\"type\":32, \"data\":[517,361,4],\"color\":[75,88,34,255],\"score\":0.0308412},\r\n{\"type\":32, \"data\":[452,97,1],\"color\":[39,38,57,255],\"score\":0.0308381},\r\n{\"type\":32, \"data\":[310,171,6],\"color\":[39,59,13,255],\"score\":0.0308357},\r\n{\"type\":32, \"data\":[449,61,1],\"color\":[223,223,217,255],\"score\":0.0308326},\r\n{\"type\":32, \"data\":[135,146,1],\"color\":[44,59,47,255],\"score\":0.0308304},\r\n{\"type\":32, \"data\":[379,53,0],\"color\":[139,140,137,255],\"score\":0.0308275},\r\n{\"type\":32, \"data\":[127,336,1],\"color\":[72,82,29,255],\"score\":0.0308239},\r\n{\"type\":32, \"data\":[441,75,1],\"color\":[11,10,50,255],\"score\":0.0308205},\r\n{\"type\":32, \"data\":[434,41,0],\"color\":[248,249,255,255],\"score\":0.0308165},\r\n{\"type\":32, \"data\":[449,87,3],\"color\":[79,77,56,255],\"score\":0.0308138},\r\n{\"type\":32, \"data\":[319,56,0],\"color\":[11,10,50,255],\"score\":0.0308112},\r\n{\"type\":32, \"data\":[633,458,6],\"color\":[106,102,62,255],\"score\":0.0308083},\r\n{\"type\":32, \"data\":[214,84,14],\"color\":[11,10,50,255],\"score\":0.0308056},\r\n{\"type\":32, \"data\":[594,239,2],\"color\":[70,87,24,255],\"score\":0.0308028},\r\n{\"type\":32, \"data\":[424,86,1],\"color\":[219,216,187,255],\"score\":0.0308},\r\n{\"type\":32, \"data\":[50,267,2],\"color\":[85,92,28,255],\"score\":0.0307972},\r\n{\"type\":32, \"data\":[59,298,2],\"color\":[20,73,71,255],\"score\":0.0307947},\r\n{\"type\":32, \"data\":[363,132,2],\"color\":[27,23,39,255],\"score\":0.030791},\r\n{\"type\":32, \"data\":[219,176,1],\"color\":[119,123,106,255],\"score\":0.0307866},\r\n{\"type\":32, \"data\":[583,246,4],\"color\":[47,70,14,255],\"score\":0.0307839},\r\n{\"type\":32, \"data\":[495,244,11],\"color\":[50,73,17,255],\"score\":0.0307816},\r\n{\"type\":32, \"data\":[512,94,1],\"color\":[98,99,90,255],\"score\":0.0307784},\r\n{\"type\":32, \"data\":[604,456,2],\"color\":[96,85,53,255],\"score\":0.030775},\r\n{\"type\":32, \"data\":[589,519,1],\"color\":[157,159,160,255],\"score\":0.0307713},\r\n{\"type\":32, \"data\":[214,175,2],\"color\":[28,45,28,255],\"score\":0.0307688},\r\n{\"type\":32, \"data\":[377,133,8],\"color\":[57,54,27,255],\"score\":0.0307664},\r\n{\"type\":32, \"data\":[713,357,8],\"color\":[76,81,35,255],\"score\":0.0307636},\r\n{\"type\":32, \"data\":[319,76,5],\"color\":[12,11,50,255],\"score\":0.030761},\r\n{\"type\":32, \"data\":[269,253,2],\"color\":[129,113,78,255],\"score\":0.0307573},\r\n{\"type\":32, \"data\":[458,126,2],\"color\":[90,86,60,255],\"score\":0.0307549},\r\n{\"type\":32, \"data\":[62,112,4],\"color\":[60,70,26,255],\"score\":0.0307531},\r\n{\"type\":32, \"data\":[327,99,3],\"color\":[80,77,39,255],\"score\":0.0307507},\r\n{\"type\":32, \"data\":[261,452,3],\"color\":[173,126,85,255],\"score\":0.0307482},\r\n{\"type\":32, \"data\":[439,63,0],\"color\":[139,143,130,255],\"score\":0.0307449},\r\n{\"type\":32, \"data\":[241,425,1],\"color\":[57,80,50,255],\"score\":0.0307414},\r\n{\"type\":32, \"data\":[167,146,2],\"color\":[207,207,210,255],\"score\":0.0307363},\r\n{\"type\":32, \"data\":[549,302,1],\"color\":[202,217,192,255],\"score\":0.0307331},\r\n{\"type\":32, \"data\":[372,149,3],\"color\":[31,30,34,255],\"score\":0.0307304},\r\n{\"type\":32, \"data\":[386,94,3],\"color\":[14,13,51,255],\"score\":0.0307269},\r\n{\"type\":32, \"data\":[505,51,3],\"color\":[16,15,55,255],\"score\":0.0307234},\r\n{\"type\":32, \"data\":[268,512,3],\"color\":[122,96,60,255],\"score\":0.0307202},\r\n{\"type\":32, \"data\":[427,39,2],\"color\":[204,204,205,255],\"score\":0.0307153},\r\n{\"type\":32, \"data\":[364,241,7],\"color\":[109,108,64,255],\"score\":0.0307129},\r\n{\"type\":32, \"data\":[340,86,2],\"color\":[113,104,51,255],\"score\":0.0307099},\r\n{\"type\":32, \"data\":[753,313,6],\"color\":[67,85,27,255],\"score\":0.030707},\r\n{\"type\":32, \"data\":[571,273,6],\"color\":[76,86,32,255],\"score\":0.0307044},\r\n{\"type\":32, \"data\":[187,493,6],\"color\":[142,102,69,255],\"score\":0.0307015},\r\n{\"type\":32, \"data\":[90,151,3],\"color\":[36,44,42,255],\"score\":0.0306974},\r\n{\"type\":32, \"data\":[41,256,2],\"color\":[19,30,48,255],\"score\":0.0306945},\r\n{\"type\":32, \"data\":[412,72,0],\"color\":[134,134,151,255],\"score\":0.0306909},\r\n{\"type\":32, \"data\":[198,123,4],\"color\":[75,75,37,255],\"score\":0.0306884},\r\n{\"type\":32, \"data\":[254,223,6],\"color\":[39,59,14,255],\"score\":0.0306859},\r\n{\"type\":32, \"data\":[441,35,2],\"color\":[205,205,207,255],\"score\":0.0306821},\r\n{\"type\":32, \"data\":[618,273,12],\"color\":[43,63,13,255],\"score\":0.0306796},\r\n{\"type\":32, \"data\":[402,53,1],\"color\":[11,10,50,255],\"score\":0.0306767},\r\n{\"type\":32, \"data\":[296,212,2],\"color\":[74,81,39,255],\"score\":0.0306734},\r\n{\"type\":32, \"data\":[595,573,2],\"color\":[130,144,149,255],\"score\":0.0306702},\r\n{\"type\":32, \"data\":[277,493,5],\"color\":[176,135,92,255],\"score\":0.0306678},\r\n{\"type\":32, \"data\":[314,99,5],\"color\":[94,88,45,255],\"score\":0.0306645},\r\n{\"type\":32, \"data\":[311,456,5],\"color\":[167,131,83,255],\"score\":0.0306615},\r\n{\"type\":32, \"data\":[332,59,6],\"color\":[11,10,50,255],\"score\":0.0306579},\r\n{\"type\":32, \"data\":[649,255,7],\"color\":[41,65,13,255],\"score\":0.0306549},\r\n{\"type\":32, \"data\":[420,39,1],\"color\":[148,148,174,255],\"score\":0.0306504},\r\n{\"type\":32, \"data\":[335,296,2],\"color\":[243,208,161,255],\"score\":0.0306469},\r\n{\"type\":32, \"data\":[457,60,1],\"color\":[188,181,164,255],\"score\":0.0306433},\r\n{\"type\":32, \"data\":[393,57,2],\"color\":[92,90,79,255],\"score\":0.0306402},\r\n{\"type\":32, \"data\":[602,404,2],\"color\":[218,182,148,255],\"score\":0.030638},\r\n{\"type\":32, \"data\":[476,277,7],\"color\":[58,79,19,255],\"score\":0.0306358},\r\n{\"type\":32, \"data\":[493,86,2],\"color\":[201,201,201,255],\"score\":0.0306315},\r\n{\"type\":32, \"data\":[173,463,2],\"color\":[141,101,68,255],\"score\":0.0306274},\r\n{\"type\":32, \"data\":[331,112,2],\"color\":[24,25,47,255],\"score\":0.0306228},\r\n{\"type\":32, \"data\":[465,50,2],\"color\":[139,136,105,255],\"score\":0.0306205},\r\n{\"type\":32, \"data\":[390,102,2],\"color\":[97,93,48,255],\"score\":0.0306179},\r\n{\"type\":32, \"data\":[505,40,3],\"color\":[244,244,244,255],\"score\":0.0306153},\r\n{\"type\":32, \"data\":[406,82,0],\"color\":[68,53,43,255],\"score\":0.0306119},\r\n{\"type\":32, \"data\":[611,397,1],\"color\":[149,117,89,255],\"score\":0.0306096},\r\n{\"type\":32, \"data\":[586,528,2],\"color\":[103,105,91,255],\"score\":0.0306064},\r\n{\"type\":32, \"data\":[556,111,1],\"color\":[90,91,83,255],\"score\":0.030604},\r\n{\"type\":32, \"data\":[347,290,4],\"color\":[179,148,108,255],\"score\":0.0306016},\r\n{\"type\":32, \"data\":[432,364,1],\"color\":[60,125,77,255],\"score\":0.0305985},\r\n{\"type\":32, \"data\":[467,42,1],\"color\":[103,100,125,255],\"score\":0.0305952},\r\n{\"type\":32, \"data\":[430,201,2],\"color\":[12,20,37,255],\"score\":0.0305922},\r\n{\"type\":32, \"data\":[226,138,1],\"color\":[112,114,81,255],\"score\":0.0305896},\r\n{\"type\":32, \"data\":[426,91,1],\"color\":[79,85,77,255],\"score\":0.030587},\r\n{\"type\":32, \"data\":[393,80,1],\"color\":[135,148,146,255],\"score\":0.0305813}\r\n]}");
};
ludum_WorldBuilder.__name__ = true;
ludum_WorldBuilder.prototype = {
	loadWorld: function(data) {
		var shapeData = JSON.parse(data);
		var _g = 0;
		var _g1 = shapeData.shapes;
		while(_g < _g1.length) {
			var shape = _g1[_g];
			++_g;
			var red = shape.color[0];
			var green = shape.color[1];
			var blue = shape.color[2];
			var color = ((red < 0 ? 0 : red > 255 ? 255 : red) << 24) + ((green < 0 ? 0 : green > 255 ? 255 : green) << 16) + ((blue < 0 ? 0 : blue > 255 ? 255 : blue) << 8);
			var alpha = shape.color[3] / 255.0;
			this.shapes.push({ r : shape.data[2], x : shape.data[0], y : shape.data[1], rgb : color, alpha : alpha});
		}
	}
	,__class__: ludum_WorldBuilder
};
var motion_actuators_IGenericActuator = function() { };
motion_actuators_IGenericActuator.__name__ = true;
motion_actuators_IGenericActuator.prototype = {
	__class__: motion_actuators_IGenericActuator
};
var motion_actuators_GenericActuator = function(target,duration,properties) {
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = motion_Actuate.defaultEase;
};
motion_actuators_GenericActuator.__name__ = true;
motion_actuators_GenericActuator.__interfaces__ = [motion_actuators_IGenericActuator];
motion_actuators_GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) {
				this.target[i] = Reflect.field(this.properties,i);
			} else {
				Reflect.setProperty(this.target,i,Reflect.field(this.properties,i));
			}
		}
	}
	,autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) {
			params = [];
		}
		return method.apply(method,params);
	}
	,change: function() {
		if(this._onUpdate != null) {
			var method = this._onUpdate;
			var params = this._onUpdateParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) {
				var method = this._onComplete;
				var params = this._onCompleteParams;
				if(params == null) {
					params = [];
				}
				method.apply(method,params);
			}
		}
		motion_Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) {
			this._onCompleteParams = [];
		} else {
			this._onCompleteParams = parameters;
		}
		if(this.duration == 0) {
			this.complete();
		}
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) {
			this._onRepeatParams = [];
		} else {
			this._onRepeatParams = parameters;
		}
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		return this;
	}
	,onPause: function(handler,parameters) {
		this._onPause = handler;
		if(parameters == null) {
			this._onPauseParams = [];
		} else {
			this._onPauseParams = parameters;
		}
		return this;
	}
	,onResume: function(handler,parameters) {
		this._onResume = handler;
		if(parameters == null) {
			this._onResumeParams = [];
		} else {
			this._onResumeParams = parameters;
		}
		return this;
	}
	,pause: function() {
		if(this._onPause != null) {
			var method = this._onPause;
			var params = this._onPauseParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,reflect: function(value) {
		if(value == null) {
			value = true;
		}
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) {
			times = -1;
		}
		this._repeat = times;
		return this;
	}
	,resume: function() {
		if(this._onResume != null) {
			var method = this._onResume;
			var params = this._onResumeParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,reverse: function(value) {
		if(value == null) {
			value = true;
		}
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) {
			value = true;
		}
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) {
			value = true;
		}
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: motion_actuators_GenericActuator
};
var motion_actuators_SimpleActuator = function(target,duration,properties) {
	this.active = true;
	this.propertyDetails = [];
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = new Date().getTime() / 1000;
	motion_actuators_GenericActuator.call(this,target,duration,properties);
	if(!motion_actuators_SimpleActuator.addedEvent) {
		motion_actuators_SimpleActuator.addedEvent = true;
		motion_actuators_SimpleActuator.timer = new haxe_Timer(33);
		motion_actuators_SimpleActuator.timer.run = motion_actuators_SimpleActuator.stage_onEnterFrame;
	}
};
motion_actuators_SimpleActuator.__name__ = true;
motion_actuators_SimpleActuator.stage_onEnterFrame = function() {
	var currentTime = new Date().getTime() / 1000;
	var actuator;
	var j = 0;
	var cleanup = false;
	var _g1 = 0;
	var _g = motion_actuators_SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		var i = _g1++;
		actuator = motion_actuators_SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(currentTime >= actuator.timeOffset) {
				actuator.update(currentTime);
			}
			++j;
		} else {
			motion_actuators_SimpleActuator.actuators.splice(j,1);
			--motion_actuators_SimpleActuator.actuatorsLength;
		}
	}
};
motion_actuators_SimpleActuator.__super__ = motion_actuators_GenericActuator;
motion_actuators_SimpleActuator.prototype = $extend(motion_actuators_GenericActuator.prototype,{
	setField_motion_actuators_MotionPathActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			target[propertyName] = value;
		} else {
			Reflect.setProperty(target,propertyName,value);
		}
	}
	,setField_motion_actuators_SimpleActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			target[propertyName] = value;
		} else {
			Reflect.setProperty(target,propertyName,value);
		}
	}
	,autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) {
				var target = this.target;
				var value1 = this.cacheVisible;
				if(Object.prototype.hasOwnProperty.call(target,"visible")) {
					target["visible"] = value1;
				} else {
					Reflect.setProperty(target,"visible",value1);
				}
			}
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			value = Reflect.field(target,propertyName);
		} else {
			value = Reflect.getProperty(target,propertyName);
		}
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) {
				start = Reflect.field(this.target,i);
			} else {
				isField = false;
				start = Reflect.getProperty(this.target,i);
			}
			if(typeof(start) == "number") {
				var target = this.properties;
				var value = null;
				if(Object.prototype.hasOwnProperty.call(target,i)) {
					value = Reflect.field(target,i);
				} else {
					value = Reflect.getProperty(target,i);
				}
				var value1 = value;
				if(start == null) {
					start = 0;
				}
				if(value1 == null) {
					value1 = 0;
				}
				details = new motion_actuators_PropertyDetails(this.target,i,start,value1 - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && Object.prototype.hasOwnProperty.call(this.properties,"visible");
		var tmp;
		if(this.toggleVisible && this.properties.alpha != 0) {
			var target = this.target;
			var value = null;
			if(Object.prototype.hasOwnProperty.call(target,"visible")) {
				value = Reflect.field(target,"visible");
			} else {
				value = Reflect.getProperty(target,"visible");
			}
			tmp = !value;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.setVisible = true;
			var target1 = this.target;
			var value1 = null;
			if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
				value1 = Reflect.field(target1,"visible");
			} else {
				value1 = Reflect.getProperty(target1,"visible");
			}
			this.cacheVisible = value1;
			var target2 = this.target;
			if(Object.prototype.hasOwnProperty.call(target2,"visible")) {
				target2["visible"] = true;
			} else {
				Reflect.setProperty(target2,"visible",true);
			}
		}
		this.timeOffset = this.startTime;
		motion_actuators_SimpleActuator.actuators.push(this);
		++motion_actuators_SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		if(!this.paused) {
			this.paused = true;
			motion_actuators_GenericActuator.prototype.pause.call(this);
			this.pauseTime = new Date().getTime() / 1000;
		}
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += new Date().getTime() / 1000 - this.pauseTime;
			motion_actuators_GenericActuator.prototype.resume.call(this);
		}
	}
	,setProperty: function(details,value) {
		if(details.isField) {
			details.target[details.propertyName] = value;
		} else {
			Reflect.setProperty(details.target,details.propertyName,value);
		}
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) {
					this.apply();
				}
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) {
						this.apply();
					}
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					var i1 = _g1++;
					details = this.propertyDetails[i1];
					var value = details.start + details.change * easing;
					if(details.isField) {
						details.target[details.propertyName] = value;
					} else {
						Reflect.setProperty(details.target,details.propertyName,value);
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					var i2 = _g11++;
					details = this.propertyDetails[i2];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) {
							rotation -= 360;
						} else if(rotation < -180) {
							rotation += 360;
						}
						endValue = details.start + rotation * easing;
					} else {
						endValue = details.start + details.change * easing;
					}
					if(!this._snapping) {
						if(details.isField) {
							details.target[details.propertyName] = endValue;
						} else {
							Reflect.setProperty(details.target,details.propertyName,endValue);
						}
					} else {
						var value1 = Math.round(endValue);
						if(details.isField) {
							details.target[details.propertyName] = value1;
						} else {
							Reflect.setProperty(details.target,details.propertyName,value1);
						}
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp;
					if(this.toggleVisible) {
						var target = this.target;
						var value2 = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value2 = Reflect.field(target,"alpha");
						} else {
							value2 = Reflect.getProperty(target,"alpha");
						}
						tmp = value2 == 0;
					} else {
						tmp = false;
					}
					if(tmp) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							Reflect.setProperty(target1,"visible",false);
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) {
						var method = this._onRepeat;
						var params = this._onRepeatParams;
						if(params == null) {
							params = [];
						}
						method.apply(method,params);
					}
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: motion_actuators_SimpleActuator
});
var motion_easing_Expo = function() { };
motion_easing_Expo.__name__ = true;
motion_easing_Expo.__properties__ = {get_easeOut:"get_easeOut"};
motion_easing_Expo.get_easeOut = function() {
	return new motion_easing_ExpoEaseOut();
};
var motion_easing_IEasing = function() { };
motion_easing_IEasing.__name__ = true;
motion_easing_IEasing.prototype = {
	__class__: motion_easing_IEasing
};
var motion_easing_ExpoEaseOut = function() {
};
motion_easing_ExpoEaseOut.__name__ = true;
motion_easing_ExpoEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseOut.prototype = {
	calculate: function(k) {
		if(k == 1) {
			return 1;
		} else {
			return 1 - Math.pow(2,-10 * k);
		}
	}
	,__class__: motion_easing_ExpoEaseOut
};
var motion_Actuate = function() { };
motion_Actuate.__name__ = true;
motion_Actuate.apply = function(target,properties,customActuator) {
	motion_Actuate.stop(target,properties);
	if(customActuator == null) {
		customActuator = motion_Actuate.defaultActuator;
	}
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
motion_Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) {
		allowCreation = true;
	}
	if(motion_Actuate.targetLibraries.h.__keys__[target.__id__] == null && allowCreation) {
		motion_Actuate.targetLibraries.set(target,[]);
	}
	return motion_Actuate.targetLibraries.h[target.__id__];
};
motion_Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) {
		sendEvent = true;
	}
	if(complete == null) {
		complete = false;
	}
	if(target != null) {
		if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
			var actuator = target;
			actuator.stop(null,complete,sendEvent);
		} else {
			var library = motion_Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					temp[properties] = null;
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1 = js_Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						temp1[property] = null;
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					--i;
				}
			}
		}
	}
};
motion_Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) {
		overwrite = true;
	}
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) {
				customActuator = motion_Actuate.defaultActuator;
			}
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = motion_Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					--i;
				}
				library = motion_Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else {
			return motion_Actuate.apply(target,properties,customActuator);
		}
	}
	return null;
};
motion_Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(motion_Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(motion_Actuate.targetLibraries.h[target.__id__],actuator);
		if(motion_Actuate.targetLibraries.h[target.__id__].length == 0) {
			motion_Actuate.targetLibraries.remove(target);
		}
	}
};
var motion_IComponentPath = function() { };
motion_IComponentPath.__name__ = true;
motion_IComponentPath.prototype = {
	__class__: motion_IComponentPath
	,__properties__: {get_end:"get_end"}
};
var motion_actuators_MethodActuator = function(target,duration,properties) {
	this.currentParameters = [];
	this.tweenProperties = { };
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) {
		this.properties.start = [];
	}
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) {
		this.properties.end = this.properties.start;
	}
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.currentParameters.push(this.properties.start[i]);
	}
};
motion_actuators_MethodActuator.__name__ = true;
motion_actuators_MethodActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MethodActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var method = this.target;
		var params = this.properties.end;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		var method = this.target;
		var params = this.currentParameters;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
		motion_actuators_SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || typeof(start) == "number" && ((start | 0) === start)) {
				details = new motion_actuators_PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active && !this.paused) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			var method = this.target;
			var params = this.currentParameters;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,__class__: motion_actuators_MethodActuator
});
var motion_actuators_MotionPathActuator = function(target,duration,properties) {
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
};
motion_actuators_MotionPathActuator.__name__ = true;
motion_actuators_MotionPathActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MotionPathActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
				this.target[propertyName] = (js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end();
			} else {
				Reflect.setProperty(this.target,propertyName,(js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end());
			}
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
					path.start = Reflect.field(this.target,propertyName);
				} else {
					isField = false;
					path.start = Reflect.getProperty(this.target,propertyName);
				}
				details = new motion_actuators_PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) {
						details1.target[details1.propertyName] = (js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing);
					} else {
						Reflect.setProperty(details1.target,details1.propertyName,(js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) {
							details2.target[details2.propertyName] = (js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing);
						} else {
							Reflect.setProperty(details2.target,details2.propertyName,(js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
						}
					} else if(details2.isField) {
						details2.target[details2.propertyName] = Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
					} else {
						Reflect.setProperty(details2.target,details2.propertyName,Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing)));
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp;
					if(this.toggleVisible) {
						var target = this.target;
						var value = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value = Reflect.field(target,"alpha");
						} else {
							value = Reflect.getProperty(target,"alpha");
						}
						tmp = value == 0;
					} else {
						tmp = false;
					}
					if(tmp) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							Reflect.setProperty(target1,"visible",false);
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) {
						var method = this._onRepeat;
						var params = this._onRepeatParams;
						if(params == null) {
							params = [];
						}
						method.apply(method,params);
					}
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: motion_actuators_MotionPathActuator
});
var motion_actuators_PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) {
		isField = true;
	}
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
motion_actuators_PropertyDetails.__name__ = true;
motion_actuators_PropertyDetails.prototype = {
	__class__: motion_actuators_PropertyDetails
};
var motion_actuators_PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) {
		isField = true;
	}
	motion_actuators_PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
motion_actuators_PropertyPathDetails.__name__ = true;
motion_actuators_PropertyPathDetails.__super__ = motion_actuators_PropertyDetails;
motion_actuators_PropertyPathDetails.prototype = $extend(motion_actuators_PropertyDetails.prototype,{
	__class__: motion_actuators_PropertyPathDetails
});
var msignal_Signal = function(valueClasses) {
	if(valueClasses == null) {
		valueClasses = [];
	}
	this.valueClasses = valueClasses;
	this.slots = msignal_SlotList.NIL;
	this.priorityBased = false;
};
msignal_Signal.__name__ = true;
msignal_Signal.prototype = {
	add: function(listener) {
		return this.registerListener(listener);
	}
	,addOnce: function(listener) {
		return this.registerListener(listener,true);
	}
	,addWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,false,priority);
	}
	,addOnceWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,true,priority);
	}
	,remove: function(listener) {
		var slot = this.slots.find(listener);
		if(slot == null) {
			return null;
		}
		this.slots = this.slots.filterNot(listener);
		return slot;
	}
	,removeAll: function() {
		this.slots = msignal_SlotList.NIL;
	}
	,registerListener: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		if(this.registrationPossible(listener,once)) {
			var newSlot = this.createSlot(listener,once,priority);
			if(!this.priorityBased && priority != 0) {
				this.priorityBased = true;
			}
			if(!this.priorityBased && priority == 0) {
				this.slots = this.slots.prepend(newSlot);
			} else {
				this.slots = this.slots.insertWithPriority(newSlot);
			}
			return newSlot;
		}
		return this.slots.find(listener);
	}
	,registrationPossible: function(listener,once) {
		if(!this.slots.nonEmpty) {
			return true;
		}
		var existingSlot = this.slots.find(listener);
		if(existingSlot == null) {
			return true;
		}
		if(existingSlot.once != once) {
			throw new js__$Boot_HaxeError("You cannot addOnce() then add() the same listener without removing the relationship first.");
		}
		return false;
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return null;
	}
	,get_numListeners: function() {
		return this.slots.get_length();
	}
	,__class__: msignal_Signal
	,__properties__: {get_numListeners:"get_numListeners"}
};
var msignal_Signal0 = function() {
	msignal_Signal.call(this);
};
msignal_Signal0.__name__ = true;
msignal_Signal0.__super__ = msignal_Signal;
msignal_Signal0.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function() {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute();
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot0(this,listener,once,priority);
	}
	,__class__: msignal_Signal0
});
var msignal_Signal1 = function(type) {
	msignal_Signal.call(this,[type]);
};
msignal_Signal1.__name__ = true;
msignal_Signal1.__super__ = msignal_Signal;
msignal_Signal1.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot1(this,listener,once,priority);
	}
	,__class__: msignal_Signal1
});
var msignal_Signal2 = function(type1,type2) {
	msignal_Signal.call(this,[type1,type2]);
};
msignal_Signal2.__name__ = true;
msignal_Signal2.__super__ = msignal_Signal;
msignal_Signal2.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value1,value2) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value1,value2);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot2(this,listener,once,priority);
	}
	,__class__: msignal_Signal2
});
var msignal_Slot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	this.signal = signal;
	this.set_listener(listener);
	this.once = once;
	this.priority = priority;
	this.enabled = true;
};
msignal_Slot.__name__ = true;
msignal_Slot.prototype = {
	remove: function() {
		this.signal.remove(this.listener);
	}
	,set_listener: function(value) {
		if(value == null) {
			throw new js__$Boot_HaxeError("listener cannot be null");
		}
		return this.listener = value;
	}
	,__class__: msignal_Slot
	,__properties__: {set_listener:"set_listener"}
};
var msignal_Slot0 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot0.__name__ = true;
msignal_Slot0.__super__ = msignal_Slot;
msignal_Slot0.prototype = $extend(msignal_Slot.prototype,{
	execute: function() {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener();
	}
	,__class__: msignal_Slot0
});
var msignal_Slot1 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot1.__name__ = true;
msignal_Slot1.__super__ = msignal_Slot;
msignal_Slot1.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param != null) {
			value1 = this.param;
		}
		this.listener(value1);
	}
	,__class__: msignal_Slot1
});
var msignal_Slot2 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot2.__name__ = true;
msignal_Slot2.__super__ = msignal_Slot;
msignal_Slot2.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1,value2) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param1 != null) {
			value1 = this.param1;
		}
		if(this.param2 != null) {
			value2 = this.param2;
		}
		this.listener(value1,value2);
	}
	,__class__: msignal_Slot2
});
var msignal_SlotList = function(head,tail) {
	this.nonEmpty = false;
	if(head == null && tail == null) {
		if(msignal_SlotList.NIL != null) {
			throw new js__$Boot_HaxeError("Parameters head and tail are null. Use the NIL element instead.");
		}
		this.nonEmpty = false;
	} else if(head == null) {
		throw new js__$Boot_HaxeError("Parameter head cannot be null.");
	} else {
		this.head = head;
		this.tail = tail == null ? msignal_SlotList.NIL : tail;
		this.nonEmpty = true;
	}
};
msignal_SlotList.__name__ = true;
msignal_SlotList.prototype = {
	get_length: function() {
		if(!this.nonEmpty) {
			return 0;
		}
		if(this.tail == msignal_SlotList.NIL) {
			return 1;
		}
		var result = 0;
		var p = this;
		while(p.nonEmpty) {
			++result;
			p = p.tail;
		}
		return result;
	}
	,prepend: function(slot) {
		return new msignal_SlotList(slot,this);
	}
	,insertWithPriority: function(slot) {
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		var priority = slot.priority;
		if(priority >= this.head.priority) {
			return this.prepend(slot);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(priority > current.head.priority) {
				subClone.tail = current.prepend(slot);
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,filterNot: function(listener) {
		if(!this.nonEmpty || listener == null) {
			return this;
		}
		if(Reflect.compareMethods(this.head.listener,listener)) {
			return this.tail;
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(Reflect.compareMethods(current.head.listener,listener)) {
				subClone.tail = current.tail;
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		return this;
	}
	,find: function(listener) {
		if(!this.nonEmpty) {
			return null;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return p.head;
			}
			p = p.tail;
		}
		return null;
	}
	,__class__: msignal_SlotList
	,__properties__: {get_length:"get_length"}
};
var nape_callbacks_Callback = function() {
	this.zpp_inner = null;
};
nape_callbacks_Callback.__name__ = true;
nape_callbacks_Callback.prototype = {
	toString: function() {
		return "";
	}
	,__class__: nape_callbacks_Callback
};
var nape_callbacks_BodyCallback = function() { };
nape_callbacks_BodyCallback.__name__ = true;
nape_callbacks_BodyCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_BodyCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:";
		ret += ["WAKE","SLEEP"][this.zpp_inner.event - 2];
		ret += ":" + this.zpp_inner.body.outer.toString();
		ret += " : listener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_BodyCallback
});
var nape_callbacks_Listener = function() {
	this.zpp_inner = null;
};
nape_callbacks_Listener.__name__ = true;
nape_callbacks_Listener.prototype = {
	toString: function() {
		var event = ["BEGIN","END","WAKE","SLEEP","BREAK","PRE","ONGOING"][this.zpp_inner.event];
		if(this.zpp_inner.type == 0) {
			var body = this.zpp_inner.body;
			return "BodyListener{" + event + "::" + Std.string(body.outer_zn.zpp_inner_zn.options.outer) + "}";
		} else if(this.zpp_inner.type == 1) {
			var con = this.zpp_inner.constraint;
			return "ConstraintListener{" + event + "::" + Std.string(con.outer_zn.zpp_inner_zn.options.outer) + "}";
		} else {
			var con1 = this.zpp_inner.interaction;
			var itype;
			var _g = con1.itype;
			switch(_g) {
			case 1:
				itype = "COLLISION";
				break;
			case 2:
				itype = "SENSOR";
				break;
			case 4:
				itype = "FLUID";
				break;
			default:
				itype = "ALL";
			}
			return (this.zpp_inner.type == 2 ? "InteractionListener{" + event + "#" + itype + "::" + Std.string(con1.outer_zni.zpp_inner_zn.options1.outer) + ":" + Std.string(con1.outer_zni.zpp_inner_zn.options2.outer) + "}" : "PreListener{" + itype + "::" + Std.string(con1.outer_znp.zpp_inner_zn.options1.outer) + ":" + Std.string(con1.outer_znp.zpp_inner_zn.options2.outer) + "}") + " precedence=" + this.zpp_inner.precedence;
		}
	}
	,__class__: nape_callbacks_Listener
};
var nape_callbacks_BodyListener = function() {
	this.zpp_inner_zn = null;
};
nape_callbacks_BodyListener.__name__ = true;
nape_callbacks_BodyListener.__super__ = nape_callbacks_Listener;
nape_callbacks_BodyListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	__class__: nape_callbacks_BodyListener
});
var nape_callbacks_CbEvent = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "CbEvent" + " derp!");
	}
};
nape_callbacks_CbEvent.__name__ = true;
nape_callbacks_CbEvent.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.CbEvent_PRE == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.CbEvent_PRE = new nape_callbacks_CbEvent();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.CbEvent_PRE) {
			return "PRE";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN) {
				return "BEGIN";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING = new nape_callbacks_CbEvent();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING) {
					return "ONGOING";
				} else {
					if(zpp_$nape_util_ZPP_$Flags.CbEvent_END == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.CbEvent_END = new nape_callbacks_CbEvent();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					if(this == zpp_$nape_util_ZPP_$Flags.CbEvent_END) {
						return "END";
					} else {
						if(zpp_$nape_util_ZPP_$Flags.CbEvent_WAKE == null) {
							zpp_$nape_util_ZPP_$Flags.internal = true;
							zpp_$nape_util_ZPP_$Flags.CbEvent_WAKE = new nape_callbacks_CbEvent();
							zpp_$nape_util_ZPP_$Flags.internal = false;
						}
						if(this == zpp_$nape_util_ZPP_$Flags.CbEvent_WAKE) {
							return "WAKE";
						} else {
							if(zpp_$nape_util_ZPP_$Flags.CbEvent_SLEEP == null) {
								zpp_$nape_util_ZPP_$Flags.internal = true;
								zpp_$nape_util_ZPP_$Flags.CbEvent_SLEEP = new nape_callbacks_CbEvent();
								zpp_$nape_util_ZPP_$Flags.internal = false;
							}
							if(this == zpp_$nape_util_ZPP_$Flags.CbEvent_SLEEP) {
								return "SLEEP";
							} else {
								if(zpp_$nape_util_ZPP_$Flags.CbEvent_BREAK == null) {
									zpp_$nape_util_ZPP_$Flags.internal = true;
									zpp_$nape_util_ZPP_$Flags.CbEvent_BREAK = new nape_callbacks_CbEvent();
									zpp_$nape_util_ZPP_$Flags.internal = false;
								}
								if(this == zpp_$nape_util_ZPP_$Flags.CbEvent_BREAK) {
									return "BREAK";
								} else {
									return "";
								}
							}
						}
					}
				}
			}
		}
	}
	,__class__: nape_callbacks_CbEvent
};
var nape_callbacks_CbType = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_callbacks_ZPP_$CbType();
	this.zpp_inner.outer = this;
};
nape_callbacks_CbType.__name__ = true;
nape_callbacks_CbType.__properties__ = {get_ANY_COMPOUND:"get_ANY_COMPOUND",get_ANY_SHAPE:"get_ANY_SHAPE",get_ANY_CONSTRAINT:"get_ANY_CONSTRAINT",get_ANY_BODY:"get_ANY_BODY"};
nape_callbacks_CbType.get_ANY_BODY = function() {
	return zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY;
};
nape_callbacks_CbType.get_ANY_CONSTRAINT = function() {
	return zpp_$nape_callbacks_ZPP_$CbType.ANY_CONSTRAINT;
};
nape_callbacks_CbType.get_ANY_SHAPE = function() {
	return zpp_$nape_callbacks_ZPP_$CbType.ANY_SHAPE;
};
nape_callbacks_CbType.get_ANY_COMPOUND = function() {
	return zpp_$nape_callbacks_ZPP_$CbType.ANY_COMPOUND;
};
nape_callbacks_CbType.prototype = {
	toString: function() {
		if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY) {
			return "ANY_BODY";
		} else if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_SHAPE) {
			return "ANY_SHAPE";
		} else if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_COMPOUND) {
			return "ANY_COMPOUND";
		} else if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_CONSTRAINT) {
			return "ANY_CONSTRAINT";
		} else {
			return "CbType#" + this.zpp_inner.id;
		}
	}
	,__class__: nape_callbacks_CbType
};
var nape_callbacks_CbTypeIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$CbTypeList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "CbType" + "Iterator derp!");
	}
};
nape_callbacks_CbTypeIterator.__name__ = true;
nape_callbacks_CbTypeIterator.get = function(list) {
	var ret;
	if(nape_callbacks_CbTypeIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$CbTypeList.internal = true;
		var ret1 = new nape_callbacks_CbTypeIterator();
		zpp_$nape_util_ZPP_$CbTypeList.internal = false;
		ret = ret1;
	} else {
		var r = nape_callbacks_CbTypeIterator.zpp_pool;
		nape_callbacks_CbTypeIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_callbacks_CbTypeIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_callbacks_CbTypeIterator.zpp_pool;
			nape_callbacks_CbTypeIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_callbacks_CbTypeIterator
};
var nape_callbacks_CbTypeList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$CbTypeList();
	this.zpp_inner.outer = this;
};
nape_callbacks_CbTypeList.__name__ = true;
nape_callbacks_CbTypeList.fromArray = function(array) {
	if(array == null) {
		throw new js__$Boot_HaxeError("Error: Cannot convert null Array to Nape list");
	}
	var ret = new nape_callbacks_CbTypeList();
	var _g = 0;
	while(_g < array.length) {
		var i = array[_g];
		++_g;
		ret.push(i);
	}
	return ret;
};
nape_callbacks_CbTypeList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) {
			throw new js__$Boot_HaxeError("Error: " + "CbType" + "List is immutable");
		}
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont = this.zpp_inner.adder != null ? this.zpp_inner.adder(obj) : true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				this.zpp_inner.inner.add(obj.zpp_inner);
			} else {
				if(this.zpp_inner.push_ite == null) {
					var tmp;
					if(this.zpp_inner.inner.head == null) {
						tmp = null;
					} else {
						var tmp1 = this.zpp_inner.inner;
						this.zpp_inner.valmod();
						if(this.zpp_inner.zip_length) {
							this.zpp_inner.zip_length = false;
							this.zpp_inner.user_length = this.zpp_inner.inner.length;
						}
						tmp = tmp1.iterator_at(this.zpp_inner.user_length - 1);
					}
					this.zpp_inner.push_ite = tmp;
				}
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) {
				this.zpp_inner.post_adder(obj);
			}
		}
		return cont;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_callbacks_CbTypeIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_callbacks_CbTypeIterator.zpp_pool;
				nape_callbacks_CbTypeIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_callbacks_CbTypeList
};
var nape_callbacks_ConstraintCallback = function() { };
nape_callbacks_ConstraintCallback.__name__ = true;
nape_callbacks_ConstraintCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_ConstraintCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:";
		ret += ["WAKE","SLEEP","BREAK"][this.zpp_inner.event - 2];
		ret += ":" + this.zpp_inner.constraint.outer.toString();
		ret += " : listener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_ConstraintCallback
});
var nape_callbacks_ConstraintListener = function() {
	this.zpp_inner_zn = null;
};
nape_callbacks_ConstraintListener.__name__ = true;
nape_callbacks_ConstraintListener.__super__ = nape_callbacks_Listener;
nape_callbacks_ConstraintListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	__class__: nape_callbacks_ConstraintListener
});
var nape_callbacks_InteractionCallback = function() { };
nape_callbacks_InteractionCallback.__name__ = true;
nape_callbacks_InteractionCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_InteractionCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:";
		ret += ["BEGIN","END","","","","","ONGOING"][this.zpp_inner.event];
		ret += ":" + this.zpp_inner.int1.outer_i.toString() + "/" + this.zpp_inner.int2.outer_i.toString();
		ret += " : " + this.zpp_inner.wrap_arbiters.toString();
		ret += " : listener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_InteractionCallback
});
var nape_callbacks_InteractionListener = function() {
	this.zpp_inner_zn = null;
};
nape_callbacks_InteractionListener.__name__ = true;
nape_callbacks_InteractionListener.__super__ = nape_callbacks_Listener;
nape_callbacks_InteractionListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	__class__: nape_callbacks_InteractionListener
});
var nape_callbacks_InteractionType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "InteractionType" + " derp!");
	}
};
nape_callbacks_InteractionType.__name__ = true;
nape_callbacks_InteractionType.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION) {
			return "COLLISION";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR) {
				return "SENSOR";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID = new nape_callbacks_InteractionType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID) {
					return "FLUID";
				} else {
					if(zpp_$nape_util_ZPP_$Flags.InteractionType_ANY == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.InteractionType_ANY = new nape_callbacks_InteractionType();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					if(this == zpp_$nape_util_ZPP_$Flags.InteractionType_ANY) {
						return "ANY";
					} else {
						return "";
					}
				}
			}
		}
	}
	,__class__: nape_callbacks_InteractionType
};
var nape_callbacks_ListenerIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ListenerList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Listener" + "Iterator derp!");
	}
};
nape_callbacks_ListenerIterator.__name__ = true;
nape_callbacks_ListenerIterator.get = function(list) {
	var ret;
	if(nape_callbacks_ListenerIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ListenerList.internal = true;
		var ret1 = new nape_callbacks_ListenerIterator();
		zpp_$nape_util_ZPP_$ListenerList.internal = false;
		ret = ret1;
	} else {
		var r = nape_callbacks_ListenerIterator.zpp_pool;
		nape_callbacks_ListenerIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_callbacks_ListenerIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_callbacks_ListenerIterator.zpp_pool;
			nape_callbacks_ListenerIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_callbacks_ListenerIterator
};
var nape_callbacks_ListenerList = function() {
	this.zpp_inner = null;
};
nape_callbacks_ListenerList.__name__ = true;
nape_callbacks_ListenerList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_callbacks_ListenerIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_callbacks_ListenerIterator.zpp_pool;
				nape_callbacks_ListenerIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_callbacks_ListenerList
};
var nape_callbacks_ListenerType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ListenerType" + " derp!");
	}
};
nape_callbacks_ListenerType.__name__ = true;
nape_callbacks_ListenerType.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.ListenerType_BODY == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.ListenerType_BODY = new nape_callbacks_ListenerType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.ListenerType_BODY) {
			return "BODY";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.ListenerType_CONSTRAINT == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ListenerType_CONSTRAINT = new nape_callbacks_ListenerType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.ListenerType_CONSTRAINT) {
				return "CONSTRAINT";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.ListenerType_INTERACTION == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.ListenerType_INTERACTION = new nape_callbacks_ListenerType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.ListenerType_INTERACTION) {
					return "INTERACTION";
				} else {
					if(zpp_$nape_util_ZPP_$Flags.ListenerType_PRE == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.ListenerType_PRE = new nape_callbacks_ListenerType();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					if(this == zpp_$nape_util_ZPP_$Flags.ListenerType_PRE) {
						return "PRE";
					} else {
						return "";
					}
				}
			}
		}
	}
	,__class__: nape_callbacks_ListenerType
};
var nape_callbacks_OptionType = function() {
	this.zpp_inner = null;
};
nape_callbacks_OptionType.__name__ = true;
nape_callbacks_OptionType.prototype = {
	toString: function() {
		if(this.zpp_inner.wrap_includes == null) {
			this.zpp_inner.setup_includes();
		}
		var inc = this.zpp_inner.wrap_includes.toString();
		if(this.zpp_inner.wrap_excludes == null) {
			this.zpp_inner.setup_excludes();
		}
		var exc = this.zpp_inner.wrap_excludes.toString();
		return "@{" + inc + " excluding " + exc + "}";
	}
	,__class__: nape_callbacks_OptionType
};
var nape_callbacks_PreCallback = function() { };
nape_callbacks_PreCallback.__name__ = true;
nape_callbacks_PreCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_PreCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:PRE:";
		ret += ":" + this.zpp_inner.int1.outer_i.toString() + "/" + this.zpp_inner.int2.outer_i.toString();
		ret += " : " + this.zpp_inner.pre_arbiter.wrapper().toString();
		ret += " : listnener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_PreCallback
});
var nape_callbacks_PreFlag = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "PreFlag" + " derp!");
	}
};
nape_callbacks_PreFlag.__name__ = true;
nape_callbacks_PreFlag.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT) {
			return "ACCEPT";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE) {
				return "IGNORE";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE = new nape_callbacks_PreFlag();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE) {
					return "ACCEPT_ONCE";
				} else {
					if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE = new nape_callbacks_PreFlag();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					if(this == zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE) {
						return "IGNORE_ONCE";
					} else {
						return "";
					}
				}
			}
		}
	}
	,__class__: nape_callbacks_PreFlag
};
var nape_callbacks_PreListener = function() {
	this.zpp_inner_zn = null;
};
nape_callbacks_PreListener.__name__ = true;
nape_callbacks_PreListener.__super__ = nape_callbacks_Listener;
nape_callbacks_PreListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	__class__: nape_callbacks_PreListener
});
var nape_constraint_Constraint = function() { };
nape_constraint_Constraint.__name__ = true;
nape_constraint_Constraint.prototype = {
	toString: function() {
		return "{Constraint}";
	}
	,__class__: nape_constraint_Constraint
};
var nape_constraint_ConstraintIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ConstraintList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Constraint" + "Iterator derp!");
	}
};
nape_constraint_ConstraintIterator.__name__ = true;
nape_constraint_ConstraintIterator.get = function(list) {
	var ret;
	if(nape_constraint_ConstraintIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ConstraintList.internal = true;
		var ret1 = new nape_constraint_ConstraintIterator();
		zpp_$nape_util_ZPP_$ConstraintList.internal = false;
		ret = ret1;
	} else {
		var r = nape_constraint_ConstraintIterator.zpp_pool;
		nape_constraint_ConstraintIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_constraint_ConstraintIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_constraint_ConstraintIterator.zpp_pool;
			nape_constraint_ConstraintIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_constraint_ConstraintIterator
};
var nape_constraint_ConstraintList = function() {
	this.zpp_inner = null;
};
nape_constraint_ConstraintList.__name__ = true;
nape_constraint_ConstraintList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_constraint_ConstraintIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_constraint_ConstraintIterator.zpp_pool;
				nape_constraint_ConstraintIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_constraint_ConstraintList
};
var nape_dynamics_Arbiter = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_dynamics_ZPP_$Arbiter.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate Arbiter derp!");
	}
};
nape_dynamics_Arbiter.__name__ = true;
nape_dynamics_Arbiter.prototype = {
	toString: function() {
		var ret = this.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL ? "CollisionArbiter" : this.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.FLUID ? "FluidArbiter" : "SensorArbiter";
		if(this.zpp_inner.cleared) {
			return ret + "(object-pooled)";
		} else {
			if(!this.zpp_inner.active) {
				throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			}
			var tmp = ret + "(" + (this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.ws2.outer : this.zpp_inner.ws1.outer).toString() + "|";
			if(!this.zpp_inner.active) {
				throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			}
			var tmp1 = tmp + (this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.ws1.outer : this.zpp_inner.ws2.outer).toString() + ")";
			var tmp2 = this.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL ? "[" + ["SD","DD"][this.zpp_inner.colarb.stat ? 0 : 1] + "]" : "";
			if(!this.zpp_inner.active) {
				throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			}
			var tmp3;
			var _g = this.zpp_inner.immState;
			var x = _g;
			if(x == 5) {
				if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				tmp3 = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT;
			} else if(_g == 1) {
				if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE = new nape_callbacks_PreFlag();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				tmp3 = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE;
			} else {
				var x1 = _g;
				if(x1 == 6) {
					if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					tmp3 = zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE;
				} else {
					if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE = new nape_callbacks_PreFlag();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					tmp3 = zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE;
				}
			}
			return tmp1 + tmp2 + "<-" + tmp3.toString();
		}
	}
	,__class__: nape_dynamics_Arbiter
};
var nape_dynamics_ArbiterIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ArbiterList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Arbiter" + "Iterator derp!");
	}
};
nape_dynamics_ArbiterIterator.__name__ = true;
nape_dynamics_ArbiterIterator.get = function(list) {
	var ret;
	if(nape_dynamics_ArbiterIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ArbiterList.internal = true;
		var ret1 = new nape_dynamics_ArbiterIterator();
		zpp_$nape_util_ZPP_$ArbiterList.internal = false;
		ret = ret1;
	} else {
		var r = nape_dynamics_ArbiterIterator.zpp_pool;
		nape_dynamics_ArbiterIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_dynamics_ArbiterIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.zpp_gl();
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_dynamics_ArbiterIterator.zpp_pool;
			nape_dynamics_ArbiterIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_dynamics_ArbiterIterator
};
var nape_dynamics_ArbiterList = function() {
	this.zpp_inner = null;
};
nape_dynamics_ArbiterList.__name__ = true;
nape_dynamics_ArbiterList.prototype = {
	zpp_gl: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = 0;
			var cx_ite = this.zpp_inner.inner.head;
			while(cx_ite != null) {
				var i = cx_ite.elt;
				if(i.active) {
					this.zpp_inner.user_length++;
				}
				cx_ite = cx_ite.next;
			}
		}
		return this.zpp_inner.user_length;
	}
	,zpp_vm: function() {
		this.zpp_inner.valmod();
	}
	,at: function(index) {
		this.zpp_vm();
		if(index < 0 || index >= this.zpp_gl()) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			index = this.zpp_gl() - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = 0;
			this.zpp_inner.at_ite = this.zpp_inner.inner.head;
			while(true) {
				var x = this.zpp_inner.at_ite.elt;
				if(x.active) {
					break;
				}
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			while(true) {
				var x1 = this.zpp_inner.at_ite.elt;
				if(x1.active) {
					break;
				}
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.wrapper();
	}
	,iterator: function() {
		this.zpp_vm();
		return nape_dynamics_ArbiterIterator.get(this);
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g = this.iterator();
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var length = _g.zpp_inner.zpp_gl();
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_dynamics_ArbiterIterator.zpp_pool;
				nape_dynamics_ArbiterIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_dynamics_ArbiterList
};
var nape_dynamics_ArbiterType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ArbiterType" + " derp!");
	}
};
nape_dynamics_ArbiterType.__name__ = true;
nape_dynamics_ArbiterType.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION = new nape_dynamics_ArbiterType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION) {
			return "COLLISION";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR = new nape_dynamics_ArbiterType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR) {
				return "SENSOR";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID = new nape_dynamics_ArbiterType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID) {
					return "FLUID";
				} else {
					return "";
				}
			}
		}
	}
	,__class__: nape_dynamics_ArbiterType
};
var nape_dynamics_CollisionArbiter = function() {
	if(!zpp_$nape_dynamics_ZPP_$Arbiter.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate CollisionArbiter derp!");
	}
	nape_dynamics_Arbiter.call(this);
};
nape_dynamics_CollisionArbiter.__name__ = true;
nape_dynamics_CollisionArbiter.__super__ = nape_dynamics_Arbiter;
nape_dynamics_CollisionArbiter.prototype = $extend(nape_dynamics_Arbiter.prototype,{
	__class__: nape_dynamics_CollisionArbiter
});
var nape_dynamics_Contact = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_dynamics_ZPP_$Contact.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate Contact derp!");
	}
};
nape_dynamics_Contact.__name__ = true;
nape_dynamics_Contact.prototype = {
	toString: function() {
		if(this.zpp_inner.arbiter == null || this.zpp_inner.arbiter.cleared) {
			return "{object-pooled}";
		} else {
			return "{Contact}";
		}
	}
	,__class__: nape_dynamics_Contact
};
var nape_dynamics_ContactIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ContactList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Contact" + "Iterator derp!");
	}
};
nape_dynamics_ContactIterator.__name__ = true;
nape_dynamics_ContactIterator.get = function(list) {
	var ret;
	if(nape_dynamics_ContactIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ContactList.internal = true;
		var ret1 = new nape_dynamics_ContactIterator();
		zpp_$nape_util_ZPP_$ContactList.internal = false;
		ret = ret1;
	} else {
		var r = nape_dynamics_ContactIterator.zpp_pool;
		nape_dynamics_ContactIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_dynamics_ContactIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = 0;
			var cx_ite = _this.zpp_inner.inner.next;
			while(cx_ite != null) {
				var i = cx_ite;
				if(i.active && i.arbiter.active) {
					_this.zpp_inner.user_length++;
				}
				cx_ite = cx_ite.next;
			}
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_dynamics_ContactIterator.zpp_pool;
			nape_dynamics_ContactIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_dynamics_ContactIterator
};
var nape_dynamics_ContactList = function() {
	this.zpp_inner = null;
};
nape_dynamics_ContactList.__name__ = true;
nape_dynamics_ContactList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = 0;
				var cx_ite = this.zpp_inner.inner.next;
				while(cx_ite != null) {
					var i = cx_ite;
					if(i.active && i.arbiter.active) {
						this.zpp_inner.user_length++;
					}
					cx_ite = cx_ite.next;
				}
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = 0;
				var cx_ite1 = this.zpp_inner.inner.next;
				while(cx_ite1 != null) {
					var i1 = cx_ite1;
					if(i1.active && i1.arbiter.active) {
						this.zpp_inner.user_length++;
					}
					cx_ite1 = cx_ite1.next;
				}
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = 0;
			this.zpp_inner.at_ite = this.zpp_inner.inner.next;
			while(true) {
				var x = this.zpp_inner.at_ite;
				if(x.active && x.arbiter.active) {
					break;
				}
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			while(true) {
				var x1 = this.zpp_inner.at_ite;
				if(x1.active && x1.arbiter.active) {
					break;
				}
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.wrapper();
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_dynamics_ContactIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = 0;
				var cx_ite = _this.zpp_inner.inner.next;
				while(cx_ite != null) {
					var i = cx_ite;
					if(i.active && i.arbiter.active) {
						_this.zpp_inner.user_length++;
					}
					cx_ite = cx_ite.next;
				}
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_dynamics_ContactIterator.zpp_pool;
				nape_dynamics_ContactIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i1 = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i1 == null ? "NULL" : i1.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_dynamics_ContactList
};
var nape_dynamics_FluidArbiter = function() {
	if(!zpp_$nape_dynamics_ZPP_$Arbiter.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate FluidArbiter derp!");
	}
	nape_dynamics_Arbiter.call(this);
};
nape_dynamics_FluidArbiter.__name__ = true;
nape_dynamics_FluidArbiter.__super__ = nape_dynamics_Arbiter;
nape_dynamics_FluidArbiter.prototype = $extend(nape_dynamics_Arbiter.prototype,{
	__class__: nape_dynamics_FluidArbiter
});
var nape_dynamics_InteractionFilter = function() { };
nape_dynamics_InteractionFilter.__name__ = true;
nape_dynamics_InteractionFilter.prototype = {
	__class__: nape_dynamics_InteractionFilter
};
var nape_dynamics_InteractionGroup = function() {
	this.zpp_inner = null;
};
nape_dynamics_InteractionGroup.__name__ = true;
nape_dynamics_InteractionGroup.prototype = {
	toString: function() {
		var ret = "InteractionGroup";
		if(this.zpp_inner.ignore) {
			ret += ":ignore";
		}
		return ret;
	}
	,__class__: nape_dynamics_InteractionGroup
};
var nape_dynamics_InteractionGroupIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$InteractionGroupList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "InteractionGroup" + "Iterator derp!");
	}
};
nape_dynamics_InteractionGroupIterator.__name__ = true;
nape_dynamics_InteractionGroupIterator.get = function(list) {
	var ret;
	if(nape_dynamics_InteractionGroupIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$InteractionGroupList.internal = true;
		var ret1 = new nape_dynamics_InteractionGroupIterator();
		zpp_$nape_util_ZPP_$InteractionGroupList.internal = false;
		ret = ret1;
	} else {
		var r = nape_dynamics_InteractionGroupIterator.zpp_pool;
		nape_dynamics_InteractionGroupIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_dynamics_InteractionGroupIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_dynamics_InteractionGroupIterator.zpp_pool;
			nape_dynamics_InteractionGroupIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_dynamics_InteractionGroupIterator
};
var nape_dynamics_InteractionGroupList = function() {
	this.zpp_inner = null;
};
nape_dynamics_InteractionGroupList.__name__ = true;
nape_dynamics_InteractionGroupList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_dynamics_InteractionGroupIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_dynamics_InteractionGroupIterator.zpp_pool;
				nape_dynamics_InteractionGroupIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_dynamics_InteractionGroupList
};
var nape_geom_AABB = function() {
	this.zpp_inner = null;
};
nape_geom_AABB.__name__ = true;
nape_geom_AABB.prototype = {
	toString: function() {
		var _this = this.zpp_inner;
		if(_this._validate != null) {
			_this._validate();
		}
		return this.zpp_inner.toString();
	}
	,__class__: nape_geom_AABB
};
var nape_geom_ConvexResult = function() {
	this.zpp_inner = null;
};
nape_geom_ConvexResult.__name__ = true;
nape_geom_ConvexResult.prototype = {
	toString: function() {
		if(this.zpp_inner.next != null) {
			throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		}
		if(this.zpp_inner.next != null) {
			throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		}
		if(this.zpp_inner.next != null) {
			throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		}
		return "{ shape: " + Std.string(this.zpp_inner.shape) + " toi: " + this.zpp_inner.toiDistance + " }";
	}
	,__class__: nape_geom_ConvexResult
};
var nape_geom_ConvexResultIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ConvexResultList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ConvexResult" + "Iterator derp!");
	}
};
nape_geom_ConvexResultIterator.__name__ = true;
nape_geom_ConvexResultIterator.get = function(list) {
	var ret;
	if(nape_geom_ConvexResultIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ConvexResultList.internal = true;
		var ret1 = new nape_geom_ConvexResultIterator();
		zpp_$nape_util_ZPP_$ConvexResultList.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_ConvexResultIterator.zpp_pool;
		nape_geom_ConvexResultIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_ConvexResultIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_geom_ConvexResultIterator.zpp_pool;
			nape_geom_ConvexResultIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_ConvexResultIterator
};
var nape_geom_ConvexResultList = function() {
	this.zpp_inner = null;
};
nape_geom_ConvexResultList.__name__ = true;
nape_geom_ConvexResultList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_geom_ConvexResultIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_geom_ConvexResultIterator.zpp_pool;
				nape_geom_ConvexResultIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_geom_ConvexResultList
};
var nape_geom_GeomPoly = function(vertices) {
	this.zpp_inner = null;
	this.zpp_pool = null;
	this.zpp_inner = new zpp_$nape_geom_ZPP_$GeomPoly(this);
	if(vertices != null) {
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv = vertices;
			var _g = 0;
			while(_g < lv.length) {
				var vite = lv[_g];
				++_g;
				if(vite == null) {
					throw new js__$Boot_HaxeError("Error: Array<Vec2> contains null objects");
				}
				if(!js_Boot.__instanceof(vite,nape_geom_Vec2)) {
					throw new js__$Boot_HaxeError("Error: Array<Vec2> contains non Vec2 objects");
				}
				var v = vite;
				if(v != null && v.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				if(v != null && v.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this = v.zpp_inner;
				if(_this._validate != null) {
					_this._validate();
				}
				var x = v.zpp_inner.x;
				if(v != null && v.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this1 = v.zpp_inner;
				if(_this1._validate != null) {
					_this1._validate();
				}
				var y = v.zpp_inner.y;
				var ret;
				if(zpp_$nape_geom_ZPP_$GeomVert.zpp_pool == null) {
					ret = new zpp_$nape_geom_ZPP_$GeomVert();
				} else {
					ret = zpp_$nape_geom_ZPP_$GeomVert.zpp_pool;
					zpp_$nape_geom_ZPP_$GeomVert.zpp_pool = ret.next;
					ret.next = null;
				}
				ret.forced = false;
				ret.x = x;
				ret.y = y;
				var obj = ret;
				if(this.zpp_inner.vertices == null) {
					this.zpp_inner.vertices = obj.prev = obj.next = obj;
				} else {
					obj.prev = this.zpp_inner.vertices;
					obj.next = this.zpp_inner.vertices.next;
					this.zpp_inner.vertices.next.prev = obj;
					this.zpp_inner.vertices.next = obj;
				}
				this.zpp_inner.vertices = obj;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv1 = vertices;
			var _g1 = lv1.iterator();
			while(true) {
				_g1.zpp_inner.zpp_inner.valmod();
				var length = _g1.zpp_inner.zpp_gl();
				_g1.zpp_critical = true;
				var tmp;
				if(_g1.zpp_i < length) {
					tmp = true;
				} else {
					_g1.zpp_next = nape_geom_Vec2Iterator.zpp_pool;
					nape_geom_Vec2Iterator.zpp_pool = _g1;
					_g1.zpp_inner = null;
					tmp = false;
				}
				if(!tmp) {
					break;
				}
				_g1.zpp_critical = false;
				var v1 = _g1.zpp_inner.at(_g1.zpp_i++);
				if(v1 == null) {
					throw new js__$Boot_HaxeError("Error: Vec2List contains null objects");
				}
				if(v1 != null && v1.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				if(v1 != null && v1.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this2 = v1.zpp_inner;
				if(_this2._validate != null) {
					_this2._validate();
				}
				var x1 = v1.zpp_inner.x;
				if(v1 != null && v1.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this3 = v1.zpp_inner;
				if(_this3._validate != null) {
					_this3._validate();
				}
				var y1 = v1.zpp_inner.y;
				var ret1;
				if(zpp_$nape_geom_ZPP_$GeomVert.zpp_pool == null) {
					ret1 = new zpp_$nape_geom_ZPP_$GeomVert();
				} else {
					ret1 = zpp_$nape_geom_ZPP_$GeomVert.zpp_pool;
					zpp_$nape_geom_ZPP_$GeomVert.zpp_pool = ret1.next;
					ret1.next = null;
				}
				ret1.forced = false;
				ret1.x = x1;
				ret1.y = y1;
				var obj1 = ret1;
				if(this.zpp_inner.vertices == null) {
					this.zpp_inner.vertices = obj1.prev = obj1.next = obj1;
				} else {
					obj1.prev = this.zpp_inner.vertices;
					obj1.next = this.zpp_inner.vertices.next;
					this.zpp_inner.vertices.next.prev = obj1;
					this.zpp_inner.vertices.next = obj1;
				}
				this.zpp_inner.vertices = obj1;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_GeomPoly)) {
			var lv2 = vertices;
			if(lv2 != null && lv2.zpp_disp) {
				throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
			}
			var verts = lv2.zpp_inner.vertices;
			if(verts != null) {
				var vite1 = verts;
				while(true) {
					var x2 = vite1.x;
					var y2 = vite1.y;
					if(x2 != x2 || y2 != y2) {
						throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
					}
					var ret2;
					if(zpp_$nape_util_ZPP_$PubPool.poolVec2 == null) {
						ret2 = new nape_geom_Vec2();
					} else {
						ret2 = zpp_$nape_util_ZPP_$PubPool.poolVec2;
						zpp_$nape_util_ZPP_$PubPool.poolVec2 = ret2.zpp_pool;
						ret2.zpp_pool = null;
						ret2.zpp_disp = false;
						if(ret2 == zpp_$nape_util_ZPP_$PubPool.nextVec2) {
							zpp_$nape_util_ZPP_$PubPool.nextVec2 = null;
						}
					}
					if(ret2.zpp_inner == null) {
						var ret3;
						if(zpp_$nape_geom_ZPP_$Vec2.zpp_pool == null) {
							ret3 = new zpp_$nape_geom_ZPP_$Vec2();
						} else {
							ret3 = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
							zpp_$nape_geom_ZPP_$Vec2.zpp_pool = ret3.next;
							ret3.next = null;
						}
						ret3.weak = false;
						ret3._immutable = false;
						ret3.x = x2;
						ret3.y = y2;
						ret2.zpp_inner = ret3;
						ret2.zpp_inner.outer = ret2;
					} else {
						if(ret2 != null && ret2.zpp_disp) {
							throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						}
						var _this4 = ret2.zpp_inner;
						if(_this4._immutable) {
							throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
						}
						if(_this4._isimmutable != null) {
							_this4._isimmutable();
						}
						if(x2 != x2 || y2 != y2) {
							throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
						}
						var tmp1;
						if(ret2 != null && ret2.zpp_disp) {
							throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						}
						var _this5 = ret2.zpp_inner;
						if(_this5._validate != null) {
							_this5._validate();
						}
						if(ret2.zpp_inner.x == x2) {
							if(ret2 != null && ret2.zpp_disp) {
								throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
							}
							var _this6 = ret2.zpp_inner;
							if(_this6._validate != null) {
								_this6._validate();
							}
							tmp1 = ret2.zpp_inner.y == y2;
						} else {
							tmp1 = false;
						}
						if(!tmp1) {
							ret2.zpp_inner.x = x2;
							ret2.zpp_inner.y = y2;
							var _this7 = ret2.zpp_inner;
							if(_this7._invalidate != null) {
								_this7._invalidate(_this7);
							}
						}
					}
					ret2.zpp_inner.weak = false;
					var v2 = ret2;
					vite1 = vite1.next;
					if(v2 != null && v2.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this8 = v2.zpp_inner;
					if(_this8._validate != null) {
						_this8._validate();
					}
					var x3 = v2.zpp_inner.x;
					if(v2 != null && v2.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this9 = v2.zpp_inner;
					if(_this9._validate != null) {
						_this9._validate();
					}
					var y3 = v2.zpp_inner.y;
					var ret4;
					if(zpp_$nape_geom_ZPP_$GeomVert.zpp_pool == null) {
						ret4 = new zpp_$nape_geom_ZPP_$GeomVert();
					} else {
						ret4 = zpp_$nape_geom_ZPP_$GeomVert.zpp_pool;
						zpp_$nape_geom_ZPP_$GeomVert.zpp_pool = ret4.next;
						ret4.next = null;
					}
					ret4.forced = false;
					ret4.x = x3;
					ret4.y = y3;
					var obj2 = ret4;
					if(this.zpp_inner.vertices == null) {
						this.zpp_inner.vertices = obj2.prev = obj2.next = obj2;
					} else {
						obj2.prev = this.zpp_inner.vertices;
						obj2.next = this.zpp_inner.vertices.next;
						this.zpp_inner.vertices.next.prev = obj2;
						this.zpp_inner.vertices.next = obj2;
					}
					this.zpp_inner.vertices = obj2;
					if(v2 != null && v2.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this10 = v2.zpp_inner;
					if(_this10._immutable) {
						throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
					}
					if(_this10._isimmutable != null) {
						_this10._isimmutable();
					}
					if(v2.zpp_inner._inuse) {
						throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
					}
					var inner = v2.zpp_inner;
					v2.zpp_inner.outer = null;
					v2.zpp_inner = null;
					var o = v2;
					o.zpp_pool = null;
					if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
						zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o;
					} else {
						zpp_$nape_util_ZPP_$PubPool.poolVec2 = o;
					}
					zpp_$nape_util_ZPP_$PubPool.nextVec2 = o;
					o.zpp_disp = true;
					var o1 = inner;
					if(o1.outer != null) {
						o1.outer.zpp_inner = null;
						o1.outer = null;
					}
					o1._isimmutable = null;
					o1._validate = null;
					o1._invalidate = null;
					o1.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
					zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o1;
					if(vite1 == verts) {
						break;
					}
				}
			}
		} else {
			throw new js__$Boot_HaxeError("Error: Invalid type for polygon object, should be Array<Vec2>, Vec2List, GeomPoly or for flash10+ flash.Vector<Vec2>");
		}
		this.skipForward(1);
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv3 = vertices;
			var i = 0;
			while(i < lv3.length) {
				var cur = lv3[i];
				var tmp2;
				if(cur.zpp_inner.weak) {
					if(cur != null && cur.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this11 = cur.zpp_inner;
					if(_this11._immutable) {
						throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
					}
					if(_this11._isimmutable != null) {
						_this11._isimmutable();
					}
					if(cur.zpp_inner._inuse) {
						throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
					}
					var inner1 = cur.zpp_inner;
					cur.zpp_inner.outer = null;
					cur.zpp_inner = null;
					var o2 = cur;
					o2.zpp_pool = null;
					if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
						zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o2;
					} else {
						zpp_$nape_util_ZPP_$PubPool.poolVec2 = o2;
					}
					zpp_$nape_util_ZPP_$PubPool.nextVec2 = o2;
					o2.zpp_disp = true;
					var o3 = inner1;
					if(o3.outer != null) {
						o3.outer.zpp_inner = null;
						o3.outer = null;
					}
					o3._isimmutable = null;
					o3._validate = null;
					o3._invalidate = null;
					o3.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
					zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o3;
					tmp2 = true;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					lv3.splice(i,1);
					continue;
				}
				++i;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv4 = vertices;
			if(lv4.zpp_inner._validate != null) {
				lv4.zpp_inner._validate();
			}
			var ins = lv4.zpp_inner.inner;
			var pre = null;
			var cur1 = ins.head;
			while(cur1 != null) {
				var x4 = cur1.elt;
				if(x4.outer.zpp_inner.weak) {
					cur1 = ins.erase(pre);
					if(x4.outer.zpp_inner.weak) {
						var _this12 = x4.outer;
						if(_this12 != null && _this12.zpp_disp) {
							throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						}
						var _this13 = _this12.zpp_inner;
						if(_this13._immutable) {
							throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
						}
						if(_this13._isimmutable != null) {
							_this13._isimmutable();
						}
						if(_this12.zpp_inner._inuse) {
							throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
						}
						var inner2 = _this12.zpp_inner;
						_this12.zpp_inner.outer = null;
						_this12.zpp_inner = null;
						var o4 = _this12;
						o4.zpp_pool = null;
						if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
							zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o4;
						} else {
							zpp_$nape_util_ZPP_$PubPool.poolVec2 = o4;
						}
						zpp_$nape_util_ZPP_$PubPool.nextVec2 = o4;
						o4.zpp_disp = true;
						var o5 = inner2;
						if(o5.outer != null) {
							o5.outer.zpp_inner = null;
							o5.outer = null;
						}
						o5._isimmutable = null;
						o5._validate = null;
						o5._invalidate = null;
						o5.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
						zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o5;
					}
				} else {
					pre = cur1;
					cur1 = cur1.next;
				}
			}
		}
	}
};
nape_geom_GeomPoly.__name__ = true;
nape_geom_GeomPoly.get = function(vertices) {
	var ret;
	if(zpp_$nape_util_ZPP_$PubPool.poolGeomPoly == null) {
		ret = new nape_geom_GeomPoly();
	} else {
		ret = zpp_$nape_util_ZPP_$PubPool.poolGeomPoly;
		zpp_$nape_util_ZPP_$PubPool.poolGeomPoly = ret.zpp_pool;
		ret.zpp_pool = null;
		ret.zpp_disp = false;
		if(ret == zpp_$nape_util_ZPP_$PubPool.nextGeomPoly) {
			zpp_$nape_util_ZPP_$PubPool.nextGeomPoly = null;
		}
	}
	if(vertices != null) {
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv = vertices;
			var _g = 0;
			while(_g < lv.length) {
				var vite = lv[_g];
				++_g;
				if(vite == null) {
					throw new js__$Boot_HaxeError("Error: Array<Vec2> contains null objects");
				}
				if(!js_Boot.__instanceof(vite,nape_geom_Vec2)) {
					throw new js__$Boot_HaxeError("Error: Array<Vec2> contains non Vec2 objects");
				}
				var v = vite;
				if(v != null && v.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				if(v != null && v.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this = v.zpp_inner;
				if(_this._validate != null) {
					_this._validate();
				}
				var x = v.zpp_inner.x;
				if(v != null && v.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this1 = v.zpp_inner;
				if(_this1._validate != null) {
					_this1._validate();
				}
				var y = v.zpp_inner.y;
				var ret1;
				if(zpp_$nape_geom_ZPP_$GeomVert.zpp_pool == null) {
					ret1 = new zpp_$nape_geom_ZPP_$GeomVert();
				} else {
					ret1 = zpp_$nape_geom_ZPP_$GeomVert.zpp_pool;
					zpp_$nape_geom_ZPP_$GeomVert.zpp_pool = ret1.next;
					ret1.next = null;
				}
				ret1.forced = false;
				ret1.x = x;
				ret1.y = y;
				var obj = ret1;
				if(ret.zpp_inner.vertices == null) {
					ret.zpp_inner.vertices = obj.prev = obj.next = obj;
				} else {
					obj.prev = ret.zpp_inner.vertices;
					obj.next = ret.zpp_inner.vertices.next;
					ret.zpp_inner.vertices.next.prev = obj;
					ret.zpp_inner.vertices.next = obj;
				}
				ret.zpp_inner.vertices = obj;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv1 = vertices;
			var _g1 = lv1.iterator();
			while(true) {
				_g1.zpp_inner.zpp_inner.valmod();
				var length = _g1.zpp_inner.zpp_gl();
				_g1.zpp_critical = true;
				var tmp;
				if(_g1.zpp_i < length) {
					tmp = true;
				} else {
					_g1.zpp_next = nape_geom_Vec2Iterator.zpp_pool;
					nape_geom_Vec2Iterator.zpp_pool = _g1;
					_g1.zpp_inner = null;
					tmp = false;
				}
				if(!tmp) {
					break;
				}
				_g1.zpp_critical = false;
				var v1 = _g1.zpp_inner.at(_g1.zpp_i++);
				if(v1 == null) {
					throw new js__$Boot_HaxeError("Error: Vec2List contains null objects");
				}
				if(v1 != null && v1.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				if(v1 != null && v1.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this2 = v1.zpp_inner;
				if(_this2._validate != null) {
					_this2._validate();
				}
				var x1 = v1.zpp_inner.x;
				if(v1 != null && v1.zpp_disp) {
					throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				}
				var _this3 = v1.zpp_inner;
				if(_this3._validate != null) {
					_this3._validate();
				}
				var y1 = v1.zpp_inner.y;
				var ret2;
				if(zpp_$nape_geom_ZPP_$GeomVert.zpp_pool == null) {
					ret2 = new zpp_$nape_geom_ZPP_$GeomVert();
				} else {
					ret2 = zpp_$nape_geom_ZPP_$GeomVert.zpp_pool;
					zpp_$nape_geom_ZPP_$GeomVert.zpp_pool = ret2.next;
					ret2.next = null;
				}
				ret2.forced = false;
				ret2.x = x1;
				ret2.y = y1;
				var obj1 = ret2;
				if(ret.zpp_inner.vertices == null) {
					ret.zpp_inner.vertices = obj1.prev = obj1.next = obj1;
				} else {
					obj1.prev = ret.zpp_inner.vertices;
					obj1.next = ret.zpp_inner.vertices.next;
					ret.zpp_inner.vertices.next.prev = obj1;
					ret.zpp_inner.vertices.next = obj1;
				}
				ret.zpp_inner.vertices = obj1;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_GeomPoly)) {
			var lv2 = vertices;
			if(lv2 != null && lv2.zpp_disp) {
				throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
			}
			var verts = lv2.zpp_inner.vertices;
			if(verts != null) {
				var vite1 = verts;
				while(true) {
					var x2 = vite1.x;
					var y2 = vite1.y;
					if(x2 != x2 || y2 != y2) {
						throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
					}
					var ret3;
					if(zpp_$nape_util_ZPP_$PubPool.poolVec2 == null) {
						ret3 = new nape_geom_Vec2();
					} else {
						ret3 = zpp_$nape_util_ZPP_$PubPool.poolVec2;
						zpp_$nape_util_ZPP_$PubPool.poolVec2 = ret3.zpp_pool;
						ret3.zpp_pool = null;
						ret3.zpp_disp = false;
						if(ret3 == zpp_$nape_util_ZPP_$PubPool.nextVec2) {
							zpp_$nape_util_ZPP_$PubPool.nextVec2 = null;
						}
					}
					if(ret3.zpp_inner == null) {
						var ret4;
						if(zpp_$nape_geom_ZPP_$Vec2.zpp_pool == null) {
							ret4 = new zpp_$nape_geom_ZPP_$Vec2();
						} else {
							ret4 = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
							zpp_$nape_geom_ZPP_$Vec2.zpp_pool = ret4.next;
							ret4.next = null;
						}
						ret4.weak = false;
						ret4._immutable = false;
						ret4.x = x2;
						ret4.y = y2;
						ret3.zpp_inner = ret4;
						ret3.zpp_inner.outer = ret3;
					} else {
						if(ret3 != null && ret3.zpp_disp) {
							throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						}
						var _this4 = ret3.zpp_inner;
						if(_this4._immutable) {
							throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
						}
						if(_this4._isimmutable != null) {
							_this4._isimmutable();
						}
						if(x2 != x2 || y2 != y2) {
							throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
						}
						var tmp1;
						if(ret3 != null && ret3.zpp_disp) {
							throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						}
						var _this5 = ret3.zpp_inner;
						if(_this5._validate != null) {
							_this5._validate();
						}
						if(ret3.zpp_inner.x == x2) {
							if(ret3 != null && ret3.zpp_disp) {
								throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
							}
							var _this6 = ret3.zpp_inner;
							if(_this6._validate != null) {
								_this6._validate();
							}
							tmp1 = ret3.zpp_inner.y == y2;
						} else {
							tmp1 = false;
						}
						if(!tmp1) {
							ret3.zpp_inner.x = x2;
							ret3.zpp_inner.y = y2;
							var _this7 = ret3.zpp_inner;
							if(_this7._invalidate != null) {
								_this7._invalidate(_this7);
							}
						}
					}
					ret3.zpp_inner.weak = false;
					var v2 = ret3;
					vite1 = vite1.next;
					if(v2 != null && v2.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this8 = v2.zpp_inner;
					if(_this8._validate != null) {
						_this8._validate();
					}
					var x3 = v2.zpp_inner.x;
					if(v2 != null && v2.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this9 = v2.zpp_inner;
					if(_this9._validate != null) {
						_this9._validate();
					}
					var y3 = v2.zpp_inner.y;
					var ret5;
					if(zpp_$nape_geom_ZPP_$GeomVert.zpp_pool == null) {
						ret5 = new zpp_$nape_geom_ZPP_$GeomVert();
					} else {
						ret5 = zpp_$nape_geom_ZPP_$GeomVert.zpp_pool;
						zpp_$nape_geom_ZPP_$GeomVert.zpp_pool = ret5.next;
						ret5.next = null;
					}
					ret5.forced = false;
					ret5.x = x3;
					ret5.y = y3;
					var obj2 = ret5;
					if(ret.zpp_inner.vertices == null) {
						ret.zpp_inner.vertices = obj2.prev = obj2.next = obj2;
					} else {
						obj2.prev = ret.zpp_inner.vertices;
						obj2.next = ret.zpp_inner.vertices.next;
						ret.zpp_inner.vertices.next.prev = obj2;
						ret.zpp_inner.vertices.next = obj2;
					}
					ret.zpp_inner.vertices = obj2;
					if(v2 != null && v2.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this10 = v2.zpp_inner;
					if(_this10._immutable) {
						throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
					}
					if(_this10._isimmutable != null) {
						_this10._isimmutable();
					}
					if(v2.zpp_inner._inuse) {
						throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
					}
					var inner = v2.zpp_inner;
					v2.zpp_inner.outer = null;
					v2.zpp_inner = null;
					var o = v2;
					o.zpp_pool = null;
					if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
						zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o;
					} else {
						zpp_$nape_util_ZPP_$PubPool.poolVec2 = o;
					}
					zpp_$nape_util_ZPP_$PubPool.nextVec2 = o;
					o.zpp_disp = true;
					var o1 = inner;
					if(o1.outer != null) {
						o1.outer.zpp_inner = null;
						o1.outer = null;
					}
					o1._isimmutable = null;
					o1._validate = null;
					o1._invalidate = null;
					o1.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
					zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o1;
					if(!(vite1 != verts)) {
						break;
					}
				}
			}
		} else {
			throw new js__$Boot_HaxeError("Error: Invalid type for polygon object, should be Array<Vec2>, Vec2List, GeomPoly or for flash10+ flash.Vector<Vec2>");
		}
		ret.skipForward(1);
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv3 = vertices;
			var i = 0;
			while(i < lv3.length) {
				var cur = lv3[i];
				var tmp2;
				if(cur.zpp_inner.weak) {
					if(cur != null && cur.zpp_disp) {
						throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					}
					var _this11 = cur.zpp_inner;
					if(_this11._immutable) {
						throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
					}
					if(_this11._isimmutable != null) {
						_this11._isimmutable();
					}
					if(cur.zpp_inner._inuse) {
						throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
					}
					var inner1 = cur.zpp_inner;
					cur.zpp_inner.outer = null;
					cur.zpp_inner = null;
					var o2 = cur;
					o2.zpp_pool = null;
					if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
						zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o2;
					} else {
						zpp_$nape_util_ZPP_$PubPool.poolVec2 = o2;
					}
					zpp_$nape_util_ZPP_$PubPool.nextVec2 = o2;
					o2.zpp_disp = true;
					var o3 = inner1;
					if(o3.outer != null) {
						o3.outer.zpp_inner = null;
						o3.outer = null;
					}
					o3._isimmutable = null;
					o3._validate = null;
					o3._invalidate = null;
					o3.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
					zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o3;
					tmp2 = true;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					lv3.splice(i,1);
					continue;
				}
				++i;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv4 = vertices;
			if(lv4.zpp_inner._validate != null) {
				lv4.zpp_inner._validate();
			}
			var ins = lv4.zpp_inner.inner;
			var pre = null;
			var cur1 = ins.head;
			while(cur1 != null) {
				var x4 = cur1.elt;
				if(x4.outer.zpp_inner.weak) {
					cur1 = ins.erase(pre);
					if(x4.outer.zpp_inner.weak) {
						var _this12 = x4.outer;
						if(_this12 != null && _this12.zpp_disp) {
							throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						}
						var _this13 = _this12.zpp_inner;
						if(_this13._immutable) {
							throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
						}
						if(_this13._isimmutable != null) {
							_this13._isimmutable();
						}
						if(_this12.zpp_inner._inuse) {
							throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
						}
						var inner2 = _this12.zpp_inner;
						_this12.zpp_inner.outer = null;
						_this12.zpp_inner = null;
						var o4 = _this12;
						o4.zpp_pool = null;
						if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
							zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o4;
						} else {
							zpp_$nape_util_ZPP_$PubPool.poolVec2 = o4;
						}
						zpp_$nape_util_ZPP_$PubPool.nextVec2 = o4;
						o4.zpp_disp = true;
						var o5 = inner2;
						if(o5.outer != null) {
							o5.outer.zpp_inner = null;
							o5.outer = null;
						}
						o5._isimmutable = null;
						o5._validate = null;
						o5._invalidate = null;
						o5.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
						zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o5;
					}
				} else {
					pre = cur1;
					cur1 = cur1.next;
				}
			}
		}
	}
	return ret;
};
nape_geom_GeomPoly.prototype = {
	skipForward: function(times) {
		if(this.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
		}
		if(this.zpp_inner.vertices != null) {
			if(times > 0) {
				while(times-- > 0) this.zpp_inner.vertices = this.zpp_inner.vertices.next;
			} else if(times < 0) {
				while(times++ < 0) this.zpp_inner.vertices = this.zpp_inner.vertices.prev;
			}
		}
		return this;
	}
	,toString: function() {
		var ret = "GeomPoly[";
		var F = this.zpp_inner.vertices;
		var L = this.zpp_inner.vertices;
		if(F != null) {
			var nite = F;
			while(true) {
				var v = nite;
				if(v != this.zpp_inner.vertices) {
					ret += ",";
				}
				ret += "{" + v.x + "," + v.y + "}";
				nite = nite.next;
				if(!(nite != L)) {
					break;
				}
			}
		}
		return ret + "]";
	}
	,__class__: nape_geom_GeomPoly
};
var nape_geom_GeomPolyIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$GeomPolyList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "GeomPoly" + "Iterator derp!");
	}
};
nape_geom_GeomPolyIterator.__name__ = true;
nape_geom_GeomPolyIterator.get = function(list) {
	var ret;
	if(nape_geom_GeomPolyIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$GeomPolyList.internal = true;
		var ret1 = new nape_geom_GeomPolyIterator();
		zpp_$nape_util_ZPP_$GeomPolyList.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_GeomPolyIterator.zpp_pool;
		nape_geom_GeomPolyIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_GeomPolyIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_geom_GeomPolyIterator.zpp_pool;
			nape_geom_GeomPolyIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_GeomPolyIterator
};
var nape_geom_GeomPolyList = function() {
	this.zpp_inner = null;
};
nape_geom_GeomPolyList.__name__ = true;
nape_geom_GeomPolyList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_geom_GeomPolyIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_geom_GeomPolyIterator.zpp_pool;
				nape_geom_GeomPolyIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_geom_GeomPolyList
};
var nape_geom_Mat23 = function() {
	this.zpp_inner = null;
};
nape_geom_Mat23.__name__ = true;
nape_geom_Mat23.prototype = {
	toString: function() {
		return "{ a: " + this.zpp_inner.a + " b: " + this.zpp_inner.b + " c: " + this.zpp_inner.c + " d: " + this.zpp_inner.d + " tx: " + this.zpp_inner.tx + " ty: " + this.zpp_inner.ty + " }";
	}
	,__class__: nape_geom_Mat23
};
var nape_geom_MatMN = function() {
	this.zpp_inner = null;
};
nape_geom_MatMN.__name__ = true;
nape_geom_MatMN.prototype = {
	toString: function() {
		var ret = "{ ";
		var fst = true;
		var _g1 = 0;
		var _g = this.zpp_inner.m;
		while(_g1 < _g) {
			var i = _g1++;
			if(!fst) {
				ret += "; ";
			}
			fst = false;
			var _g3 = 0;
			var _g2 = this.zpp_inner.n;
			while(_g3 < _g2) {
				var j = _g3++;
				if(i < 0 || j < 0 || i >= this.zpp_inner.m || j >= this.zpp_inner.n) {
					throw new js__$Boot_HaxeError("Error: MatMN indices out of range");
				}
				ret += this.zpp_inner.x[i * this.zpp_inner.n + j] + " ";
			}
		}
		ret += "}";
		return ret;
	}
	,__class__: nape_geom_MatMN
};
var nape_geom_RayResult = function() {
	this.zpp_inner = null;
};
nape_geom_RayResult.__name__ = true;
nape_geom_RayResult.prototype = {
	toString: function() {
		if(this.zpp_inner.next != null) {
			throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		}
		if(this.zpp_inner.next != null) {
			throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		}
		if(this.zpp_inner.next != null) {
			throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		}
		if(this.zpp_inner.next != null) {
			throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		}
		return "{ shape: " + Std.string(this.zpp_inner.shape) + " distance: " + this.zpp_inner.toiDistance + " ?inner: " + Std.string(this.zpp_inner.inner) + " }";
	}
	,__class__: nape_geom_RayResult
};
var nape_geom_RayResultIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$RayResultList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "RayResult" + "Iterator derp!");
	}
};
nape_geom_RayResultIterator.__name__ = true;
nape_geom_RayResultIterator.get = function(list) {
	var ret;
	if(nape_geom_RayResultIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$RayResultList.internal = true;
		var ret1 = new nape_geom_RayResultIterator();
		zpp_$nape_util_ZPP_$RayResultList.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_RayResultIterator.zpp_pool;
		nape_geom_RayResultIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_RayResultIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_geom_RayResultIterator.zpp_pool;
			nape_geom_RayResultIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_RayResultIterator
};
var nape_geom_RayResultList = function() {
	this.zpp_inner = null;
};
nape_geom_RayResultList.__name__ = true;
nape_geom_RayResultList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_geom_RayResultIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_geom_RayResultIterator.zpp_pool;
				nape_geom_RayResultIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_geom_RayResultList
};
var nape_geom_Vec2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.zpp_pool = null;
	this.zpp_inner = null;
	if(x != x || y != y) {
		throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
	}
	var ret;
	if(zpp_$nape_geom_ZPP_$Vec2.zpp_pool == null) {
		ret = new zpp_$nape_geom_ZPP_$Vec2();
	} else {
		ret = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = ret.next;
		ret.next = null;
	}
	ret.weak = false;
	ret._immutable = false;
	ret.x = x;
	ret.y = y;
	this.zpp_inner = ret;
	this.zpp_inner.outer = this;
};
nape_geom_Vec2.__name__ = true;
nape_geom_Vec2.weak = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	if(x != x || y != y) {
		throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
	}
	var ret;
	if(zpp_$nape_util_ZPP_$PubPool.poolVec2 == null) {
		ret = new nape_geom_Vec2();
	} else {
		ret = zpp_$nape_util_ZPP_$PubPool.poolVec2;
		zpp_$nape_util_ZPP_$PubPool.poolVec2 = ret.zpp_pool;
		ret.zpp_pool = null;
		ret.zpp_disp = false;
		if(ret == zpp_$nape_util_ZPP_$PubPool.nextVec2) {
			zpp_$nape_util_ZPP_$PubPool.nextVec2 = null;
		}
	}
	if(ret.zpp_inner == null) {
		var ret1;
		if(zpp_$nape_geom_ZPP_$Vec2.zpp_pool == null) {
			ret1 = new zpp_$nape_geom_ZPP_$Vec2();
		} else {
			ret1 = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
			zpp_$nape_geom_ZPP_$Vec2.zpp_pool = ret1.next;
			ret1.next = null;
		}
		ret1.weak = false;
		ret1._immutable = false;
		ret1.x = x;
		ret1.y = y;
		ret.zpp_inner = ret1;
		ret.zpp_inner.outer = ret;
	} else {
		if(ret != null && ret.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this = ret.zpp_inner;
		if(_this._immutable) {
			throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		}
		if(_this._isimmutable != null) {
			_this._isimmutable();
		}
		if(x != x || y != y) {
			throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
		}
		var tmp;
		if(ret != null && ret.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this1 = ret.zpp_inner;
		if(_this1._validate != null) {
			_this1._validate();
		}
		if(ret.zpp_inner.x == x) {
			if(ret != null && ret.zpp_disp) {
				throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			}
			var _this2 = ret.zpp_inner;
			if(_this2._validate != null) {
				_this2._validate();
			}
			tmp = ret.zpp_inner.y == y;
		} else {
			tmp = false;
		}
		if(!tmp) {
			ret.zpp_inner.x = x;
			ret.zpp_inner.y = y;
			var _this3 = ret.zpp_inner;
			if(_this3._invalidate != null) {
				_this3._invalidate(_this3);
			}
		}
	}
	ret.zpp_inner.weak = true;
	return ret;
};
nape_geom_Vec2.get = function(x,y,weak) {
	if(weak == null) {
		weak = false;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	if(x != x || y != y) {
		throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
	}
	var ret;
	if(zpp_$nape_util_ZPP_$PubPool.poolVec2 == null) {
		ret = new nape_geom_Vec2();
	} else {
		ret = zpp_$nape_util_ZPP_$PubPool.poolVec2;
		zpp_$nape_util_ZPP_$PubPool.poolVec2 = ret.zpp_pool;
		ret.zpp_pool = null;
		ret.zpp_disp = false;
		if(ret == zpp_$nape_util_ZPP_$PubPool.nextVec2) {
			zpp_$nape_util_ZPP_$PubPool.nextVec2 = null;
		}
	}
	if(ret.zpp_inner == null) {
		var ret1;
		if(zpp_$nape_geom_ZPP_$Vec2.zpp_pool == null) {
			ret1 = new zpp_$nape_geom_ZPP_$Vec2();
		} else {
			ret1 = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
			zpp_$nape_geom_ZPP_$Vec2.zpp_pool = ret1.next;
			ret1.next = null;
		}
		ret1.weak = false;
		ret1._immutable = false;
		ret1.x = x;
		ret1.y = y;
		ret.zpp_inner = ret1;
		ret.zpp_inner.outer = ret;
	} else {
		if(ret != null && ret.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this = ret.zpp_inner;
		if(_this._immutable) {
			throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		}
		if(_this._isimmutable != null) {
			_this._isimmutable();
		}
		if(x != x || y != y) {
			throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
		}
		var tmp;
		if(ret != null && ret.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this1 = ret.zpp_inner;
		if(_this1._validate != null) {
			_this1._validate();
		}
		if(ret.zpp_inner.x == x) {
			if(ret != null && ret.zpp_disp) {
				throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			}
			var _this2 = ret.zpp_inner;
			if(_this2._validate != null) {
				_this2._validate();
			}
			tmp = ret.zpp_inner.y == y;
		} else {
			tmp = false;
		}
		if(!tmp) {
			ret.zpp_inner.x = x;
			ret.zpp_inner.y = y;
			var _this3 = ret.zpp_inner;
			if(_this3._invalidate != null) {
				_this3._invalidate(_this3);
			}
		}
	}
	ret.zpp_inner.weak = weak;
	return ret;
};
nape_geom_Vec2.fromPolar = function(length,angle,weak) {
	if(weak == null) {
		weak = false;
	}
	if(length != length) {
		throw new js__$Boot_HaxeError("Error: Vec2::length cannot be NaN");
	}
	if(angle != angle) {
		throw new js__$Boot_HaxeError("Error: Vec2::angle cannot be NaN");
	}
	var x = length * Math.cos(angle);
	var y = length * Math.sin(angle);
	if(x != x || y != y) {
		throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
	}
	var ret;
	if(zpp_$nape_util_ZPP_$PubPool.poolVec2 == null) {
		ret = new nape_geom_Vec2();
	} else {
		ret = zpp_$nape_util_ZPP_$PubPool.poolVec2;
		zpp_$nape_util_ZPP_$PubPool.poolVec2 = ret.zpp_pool;
		ret.zpp_pool = null;
		ret.zpp_disp = false;
		if(ret == zpp_$nape_util_ZPP_$PubPool.nextVec2) {
			zpp_$nape_util_ZPP_$PubPool.nextVec2 = null;
		}
	}
	if(ret.zpp_inner == null) {
		var ret1;
		if(zpp_$nape_geom_ZPP_$Vec2.zpp_pool == null) {
			ret1 = new zpp_$nape_geom_ZPP_$Vec2();
		} else {
			ret1 = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
			zpp_$nape_geom_ZPP_$Vec2.zpp_pool = ret1.next;
			ret1.next = null;
		}
		ret1.weak = false;
		ret1._immutable = false;
		ret1.x = x;
		ret1.y = y;
		ret.zpp_inner = ret1;
		ret.zpp_inner.outer = ret;
	} else {
		if(ret != null && ret.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this = ret.zpp_inner;
		if(_this._immutable) {
			throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		}
		if(_this._isimmutable != null) {
			_this._isimmutable();
		}
		if(x != x || y != y) {
			throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
		}
		var tmp;
		if(ret != null && ret.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this1 = ret.zpp_inner;
		if(_this1._validate != null) {
			_this1._validate();
		}
		if(ret.zpp_inner.x == x) {
			if(ret != null && ret.zpp_disp) {
				throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			}
			var _this2 = ret.zpp_inner;
			if(_this2._validate != null) {
				_this2._validate();
			}
			tmp = ret.zpp_inner.y == y;
		} else {
			tmp = false;
		}
		if(!tmp) {
			ret.zpp_inner.x = x;
			ret.zpp_inner.y = y;
			var _this3 = ret.zpp_inner;
			if(_this3._invalidate != null) {
				_this3._invalidate(_this3);
			}
		}
	}
	ret.zpp_inner.weak = weak;
	return ret;
};
nape_geom_Vec2.dsq = function(a,b) {
	if(a != null && a.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	if(b != null && b.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	if(a == null || b == null) {
		throw new js__$Boot_HaxeError("Error: Cannot compute squared distance between null Vec2");
	}
	if(a != null && a.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this = a.zpp_inner;
	if(_this._validate != null) {
		_this._validate();
	}
	var ax = a.zpp_inner.x;
	if(a != null && a.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this1 = a.zpp_inner;
	if(_this1._validate != null) {
		_this1._validate();
	}
	var ay = a.zpp_inner.y;
	if(b != null && b.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this2 = b.zpp_inner;
	if(_this2._validate != null) {
		_this2._validate();
	}
	var bx = b.zpp_inner.x;
	if(b != null && b.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this3 = b.zpp_inner;
	if(_this3._validate != null) {
		_this3._validate();
	}
	var dx = 0.0;
	var dy = 0.0;
	dx = ax - bx;
	dy = ay - b.zpp_inner.y;
	var ret = dx * dx + dy * dy;
	if(a.zpp_inner.weak) {
		if(a != null && a.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this4 = a.zpp_inner;
		if(_this4._immutable) {
			throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		}
		if(_this4._isimmutable != null) {
			_this4._isimmutable();
		}
		if(a.zpp_inner._inuse) {
			throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
		}
		var inner = a.zpp_inner;
		a.zpp_inner.outer = null;
		a.zpp_inner = null;
		var o = a;
		o.zpp_pool = null;
		if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
			zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o;
		} else {
			zpp_$nape_util_ZPP_$PubPool.poolVec2 = o;
		}
		zpp_$nape_util_ZPP_$PubPool.nextVec2 = o;
		o.zpp_disp = true;
		var o1 = inner;
		if(o1.outer != null) {
			o1.outer.zpp_inner = null;
			o1.outer = null;
		}
		o1._isimmutable = null;
		o1._validate = null;
		o1._invalidate = null;
		o1.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o1;
	}
	if(b.zpp_inner.weak) {
		if(b != null && b.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this5 = b.zpp_inner;
		if(_this5._immutable) {
			throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		}
		if(_this5._isimmutable != null) {
			_this5._isimmutable();
		}
		if(b.zpp_inner._inuse) {
			throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
		}
		var inner1 = b.zpp_inner;
		b.zpp_inner.outer = null;
		b.zpp_inner = null;
		var o2 = b;
		o2.zpp_pool = null;
		if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
			zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o2;
		} else {
			zpp_$nape_util_ZPP_$PubPool.poolVec2 = o2;
		}
		zpp_$nape_util_ZPP_$PubPool.nextVec2 = o2;
		o2.zpp_disp = true;
		var o3 = inner1;
		if(o3.outer != null) {
			o3.outer.zpp_inner = null;
			o3.outer = null;
		}
		o3._isimmutable = null;
		o3._validate = null;
		o3._invalidate = null;
		o3.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o3;
	}
	return ret;
};
nape_geom_Vec2.distance = function(a,b) {
	if(a != null && a.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	if(b != null && b.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	if(a == null || b == null) {
		throw new js__$Boot_HaxeError("Error: Cannot compute squared distance between null Vec2");
	}
	if(a != null && a.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this = a.zpp_inner;
	if(_this._validate != null) {
		_this._validate();
	}
	var ax = a.zpp_inner.x;
	if(a != null && a.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this1 = a.zpp_inner;
	if(_this1._validate != null) {
		_this1._validate();
	}
	var ay = a.zpp_inner.y;
	if(b != null && b.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this2 = b.zpp_inner;
	if(_this2._validate != null) {
		_this2._validate();
	}
	var bx = b.zpp_inner.x;
	if(b != null && b.zpp_disp) {
		throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	}
	var _this3 = b.zpp_inner;
	if(_this3._validate != null) {
		_this3._validate();
	}
	var dx = 0.0;
	var dy = 0.0;
	dx = ax - bx;
	dy = ay - b.zpp_inner.y;
	var ret = Math.sqrt(dx * dx + dy * dy);
	if(a.zpp_inner.weak) {
		if(a != null && a.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this4 = a.zpp_inner;
		if(_this4._immutable) {
			throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		}
		if(_this4._isimmutable != null) {
			_this4._isimmutable();
		}
		if(a.zpp_inner._inuse) {
			throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
		}
		var inner = a.zpp_inner;
		a.zpp_inner.outer = null;
		a.zpp_inner = null;
		var o = a;
		o.zpp_pool = null;
		if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
			zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o;
		} else {
			zpp_$nape_util_ZPP_$PubPool.poolVec2 = o;
		}
		zpp_$nape_util_ZPP_$PubPool.nextVec2 = o;
		o.zpp_disp = true;
		var o1 = inner;
		if(o1.outer != null) {
			o1.outer.zpp_inner = null;
			o1.outer = null;
		}
		o1._isimmutable = null;
		o1._validate = null;
		o1._invalidate = null;
		o1.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o1;
	}
	if(b.zpp_inner.weak) {
		if(b != null && b.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this5 = b.zpp_inner;
		if(_this5._immutable) {
			throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		}
		if(_this5._isimmutable != null) {
			_this5._isimmutable();
		}
		if(b.zpp_inner._inuse) {
			throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
		}
		var inner1 = b.zpp_inner;
		b.zpp_inner.outer = null;
		b.zpp_inner = null;
		var o2 = b;
		o2.zpp_pool = null;
		if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) {
			zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o2;
		} else {
			zpp_$nape_util_ZPP_$PubPool.poolVec2 = o2;
		}
		zpp_$nape_util_ZPP_$PubPool.nextVec2 = o2;
		o2.zpp_disp = true;
		var o3 = inner1;
		if(o3.outer != null) {
			o3.outer.zpp_inner = null;
			o3.outer = null;
		}
		o3._isimmutable = null;
		o3._validate = null;
		o3._invalidate = null;
		o3.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o3;
	}
	return ret;
};
nape_geom_Vec2.prototype = {
	toString: function() {
		if(this.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		}
		var _this = this.zpp_inner;
		if(_this._validate != null) {
			_this._validate();
		}
		return this.zpp_inner.toString();
	}
	,__class__: nape_geom_Vec2
};
var nape_geom_Vec2Iterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$Vec2List.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Vec2" + "Iterator derp!");
	}
};
nape_geom_Vec2Iterator.__name__ = true;
nape_geom_Vec2Iterator.get = function(list) {
	var ret;
	if(nape_geom_Vec2Iterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$Vec2List.internal = true;
		var ret1 = new nape_geom_Vec2Iterator();
		zpp_$nape_util_ZPP_$Vec2List.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_Vec2Iterator.zpp_pool;
		nape_geom_Vec2Iterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_Vec2Iterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.zpp_gl();
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_geom_Vec2Iterator.zpp_pool;
			nape_geom_Vec2Iterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_Vec2Iterator
};
var nape_geom_Vec2List = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$Vec2List();
	this.zpp_inner.outer = this;
};
nape_geom_Vec2List.__name__ = true;
nape_geom_Vec2List.fromArray = function(array) {
	if(array == null) {
		throw new js__$Boot_HaxeError("Error: Cannot convert null Array to Nape list");
	}
	var ret = new nape_geom_Vec2List();
	var _g = 0;
	while(_g < array.length) {
		var i = array[_g];
		++_g;
		ret.push(i);
	}
	return ret;
};
nape_geom_Vec2List.prototype = {
	zpp_gl: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,zpp_vm: function() {
		this.zpp_inner.valmod();
	}
	,at: function(index) {
		this.zpp_vm();
		if(index < 0 || index >= this.zpp_gl()) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			index = this.zpp_gl() - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		var _this = this.zpp_inner.at_ite.elt;
		if(_this.outer == null) {
			_this.outer = new nape_geom_Vec2();
			var o = _this.outer.zpp_inner;
			if(o.outer != null) {
				o.outer.zpp_inner = null;
				o.outer = null;
			}
			o._isimmutable = null;
			o._validate = null;
			o._invalidate = null;
			o.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
			zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o;
			_this.outer.zpp_inner = _this;
		}
		return _this.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) {
			throw new js__$Boot_HaxeError("Error: " + "Vec2" + "List is immutable");
		}
		this.zpp_inner.modify_test();
		this.zpp_vm();
		var cont = this.zpp_inner.adder != null ? this.zpp_inner.adder(obj) : true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				this.zpp_inner.inner.add(obj.zpp_inner);
			} else {
				if(this.zpp_inner.push_ite == null) {
					var tmp = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 1);
					this.zpp_inner.push_ite = tmp;
				}
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) {
				this.zpp_inner.post_adder(obj);
			}
		}
		return cont;
	}
	,empty: function() {
		return this.zpp_gl() == 0;
	}
	,iterator: function() {
		this.zpp_vm();
		return nape_geom_Vec2Iterator.get(this);
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g = this.iterator();
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var length = _g.zpp_inner.zpp_gl();
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_geom_Vec2Iterator.zpp_pool;
				nape_geom_Vec2Iterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_geom_Vec2List
};
var nape_geom_Vec3 = function() {
	this.zpp_inner = null;
};
nape_geom_Vec3.__name__ = true;
nape_geom_Vec3.prototype = {
	toString: function() {
		if(this.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
		}
		if(this.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
		}
		var _this = this.zpp_inner;
		if(_this._validate != null) {
			_this._validate();
		}
		var tmp = "{ x: " + this.zpp_inner.x + " y: ";
		if(this.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
		}
		var _this1 = this.zpp_inner;
		if(_this1._validate != null) {
			_this1._validate();
		}
		var tmp1 = tmp + this.zpp_inner.y + " z: ";
		if(this.zpp_disp) {
			throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
		}
		var _this2 = this.zpp_inner;
		if(_this2._validate != null) {
			_this2._validate();
		}
		return tmp1 + this.zpp_inner.z + " }";
	}
	,__class__: nape_geom_Vec3
};
var nape_geom_Winding = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Winding" + " derp!");
	}
};
nape_geom_Winding.__name__ = true;
nape_geom_Winding.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.Winding_UNDEFINED == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.Winding_UNDEFINED = new nape_geom_Winding();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.Winding_UNDEFINED) {
			return "UNDEFINED";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.Winding_CLOCKWISE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.Winding_CLOCKWISE = new nape_geom_Winding();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.Winding_CLOCKWISE) {
				return "CLOCKWISE";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.Winding_ANTICLOCKWISE == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.Winding_ANTICLOCKWISE = new nape_geom_Winding();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.Winding_ANTICLOCKWISE) {
					return "ANTICLOCKWISE";
				} else {
					return "";
				}
			}
		}
	}
	,__class__: nape_geom_Winding
};
var nape_phys_Interactor = function() {
	this.zpp_inner_i = null;
};
nape_phys_Interactor.__name__ = true;
nape_phys_Interactor.prototype = {
	toString: function() {
		return "";
	}
	,__class__: nape_phys_Interactor
};
var nape_phys_Body = function() {
	this.zpp_inner = null;
};
nape_phys_Body.__name__ = true;
nape_phys_Body.__super__ = nape_phys_Interactor;
nape_phys_Body.prototype = $extend(nape_phys_Interactor.prototype,{
	toString: function() {
		return (this.zpp_inner.world ? "(space::world" : "(" + (this.zpp_inner.type == 2 ? "dynamic" : this.zpp_inner.type == 1 ? "static" : "kinematic")) + ")#" + this.zpp_inner_i.id;
	}
	,__class__: nape_phys_Body
});
var nape_phys_BodyIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$BodyList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Body" + "Iterator derp!");
	}
};
nape_phys_BodyIterator.__name__ = true;
nape_phys_BodyIterator.get = function(list) {
	var ret;
	if(nape_phys_BodyIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$BodyList.internal = true;
		var ret1 = new nape_phys_BodyIterator();
		zpp_$nape_util_ZPP_$BodyList.internal = false;
		ret = ret1;
	} else {
		var r = nape_phys_BodyIterator.zpp_pool;
		nape_phys_BodyIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_phys_BodyIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_phys_BodyIterator.zpp_pool;
			nape_phys_BodyIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_phys_BodyIterator
};
var nape_phys_BodyList = function() {
	this.zpp_inner = null;
};
nape_phys_BodyList.__name__ = true;
nape_phys_BodyList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_phys_BodyIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_phys_BodyIterator.zpp_pool;
				nape_phys_BodyIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_phys_BodyList
};
var nape_phys_BodyType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "BodyType" + " derp!");
	}
};
nape_phys_BodyType.__name__ = true;
nape_phys_BodyType.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.BodyType_STATIC) {
			return "STATIC";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC) {
				return "DYNAMIC";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC = new nape_phys_BodyType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC) {
					return "KINEMATIC";
				} else {
					return "";
				}
			}
		}
	}
	,__class__: nape_phys_BodyType
};
var nape_phys_Compound = function() { };
nape_phys_Compound.__name__ = true;
nape_phys_Compound.__super__ = nape_phys_Interactor;
nape_phys_Compound.prototype = $extend(nape_phys_Interactor.prototype,{
	toString: function() {
		return "Compound" + this.zpp_inner_i.id;
	}
	,__class__: nape_phys_Compound
});
var nape_phys_CompoundIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$CompoundList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Compound" + "Iterator derp!");
	}
};
nape_phys_CompoundIterator.__name__ = true;
nape_phys_CompoundIterator.get = function(list) {
	var ret;
	if(nape_phys_CompoundIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$CompoundList.internal = true;
		var ret1 = new nape_phys_CompoundIterator();
		zpp_$nape_util_ZPP_$CompoundList.internal = false;
		ret = ret1;
	} else {
		var r = nape_phys_CompoundIterator.zpp_pool;
		nape_phys_CompoundIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_phys_CompoundIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_phys_CompoundIterator.zpp_pool;
			nape_phys_CompoundIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_phys_CompoundIterator
};
var nape_phys_CompoundList = function() {
	this.zpp_inner = null;
};
nape_phys_CompoundList.__name__ = true;
nape_phys_CompoundList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_phys_CompoundIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_phys_CompoundIterator.zpp_pool;
				nape_phys_CompoundIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_phys_CompoundList
};
var nape_phys_FluidProperties = function() {
	this.zpp_inner = null;
};
nape_phys_FluidProperties.__name__ = true;
nape_phys_FluidProperties.prototype = {
	toString: function() {
		return "{ density: " + this.zpp_inner.density * 1000 + " viscosity: " + this.zpp_inner.viscosity + " gravity: " + Std.string(this.zpp_inner.wrap_gravity) + " }";
	}
	,__class__: nape_phys_FluidProperties
};
var nape_phys_GravMassMode = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "GravMassMode" + " derp!");
	}
};
nape_phys_GravMassMode.__name__ = true;
nape_phys_GravMassMode.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.GravMassMode_DEFAULT == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.GravMassMode_DEFAULT = new nape_phys_GravMassMode();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.GravMassMode_DEFAULT) {
			return "DEFAULT";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.GravMassMode_FIXED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.GravMassMode_FIXED = new nape_phys_GravMassMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.GravMassMode_FIXED) {
				return "FIXED";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.GravMassMode_SCALED == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.GravMassMode_SCALED = new nape_phys_GravMassMode();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.GravMassMode_SCALED) {
					return "SCALED";
				} else {
					return "";
				}
			}
		}
	}
	,__class__: nape_phys_GravMassMode
};
var nape_phys_InertiaMode = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "InertiaMode" + " derp!");
	}
};
nape_phys_InertiaMode.__name__ = true;
nape_phys_InertiaMode.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.InertiaMode_DEFAULT == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.InertiaMode_DEFAULT = new nape_phys_InertiaMode();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.InertiaMode_DEFAULT) {
			return "DEFAULT";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.InertiaMode_FIXED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InertiaMode_FIXED = new nape_phys_InertiaMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.InertiaMode_FIXED) {
				return "FIXED";
			} else {
				return "";
			}
		}
	}
	,__class__: nape_phys_InertiaMode
};
var nape_phys_InteractorIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$InteractorList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Interactor" + "Iterator derp!");
	}
};
nape_phys_InteractorIterator.__name__ = true;
nape_phys_InteractorIterator.get = function(list) {
	var ret;
	if(nape_phys_InteractorIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$InteractorList.internal = true;
		var ret1 = new nape_phys_InteractorIterator();
		zpp_$nape_util_ZPP_$InteractorList.internal = false;
		ret = ret1;
	} else {
		var r = nape_phys_InteractorIterator.zpp_pool;
		nape_phys_InteractorIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_phys_InteractorIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_phys_InteractorIterator.zpp_pool;
			nape_phys_InteractorIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_phys_InteractorIterator
};
var nape_phys_InteractorList = function() {
	this.zpp_inner = null;
};
nape_phys_InteractorList.__name__ = true;
nape_phys_InteractorList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer_i;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_phys_InteractorIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_phys_InteractorIterator.zpp_pool;
				nape_phys_InteractorIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_phys_InteractorList
};
var nape_phys_MassMode = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "MassMode" + " derp!");
	}
};
nape_phys_MassMode.__name__ = true;
nape_phys_MassMode.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.MassMode_DEFAULT == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.MassMode_DEFAULT = new nape_phys_MassMode();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.MassMode_DEFAULT) {
			return "DEFAULT";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.MassMode_FIXED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.MassMode_FIXED = new nape_phys_MassMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.MassMode_FIXED) {
				return "FIXED";
			} else {
				return "";
			}
		}
	}
	,__class__: nape_phys_MassMode
};
var nape_phys_Material = function() {
	this.zpp_inner = null;
};
nape_phys_Material.__name__ = true;
nape_phys_Material.prototype = {
	toString: function() {
		return "{ elasticity: " + this.zpp_inner.elasticity + " dynamicFriction: " + this.zpp_inner.dynamicFriction + " staticFriction: " + this.zpp_inner.staticFriction + " density: " + this.zpp_inner.density * 1000 + " rollingFriction: " + this.zpp_inner.rollingFriction + " }";
	}
	,__class__: nape_phys_Material
};
var nape_shape_Shape = function() {
	this.zpp_inner = null;
};
nape_shape_Shape.__name__ = true;
nape_shape_Shape.__super__ = nape_phys_Interactor;
nape_shape_Shape.prototype = $extend(nape_phys_Interactor.prototype,{
	toString: function() {
		var ret = this.zpp_inner.type == 0 ? "Circle" : "Polygon";
		return ret + "#" + this.zpp_inner_i.id;
	}
	,__class__: nape_shape_Shape
});
var nape_shape_Circle = function() { };
nape_shape_Circle.__name__ = true;
nape_shape_Circle.__super__ = nape_shape_Shape;
nape_shape_Circle.prototype = $extend(nape_shape_Shape.prototype,{
	__class__: nape_shape_Circle
});
var nape_shape_Edge = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_shape_ZPP_$Edge.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate an Edge derp!");
	}
};
nape_shape_Edge.__name__ = true;
nape_shape_Edge.prototype = {
	toString: function() {
		if(this.zpp_inner.polygon == null) {
			return "Edge(object-pooled)";
		} else if(this.zpp_inner.polygon.body == null) {
			this.zpp_inner.polygon.validate_laxi();
			return "{ localNormal : " + ("{ x: " + this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy + " }") + " }";
		} else {
			var _this = this.zpp_inner.polygon;
			if(_this.zip_gaxi) {
				if(_this.body != null) {
					_this.zip_gaxi = false;
					_this.validate_laxi();
					var _this1 = _this.body;
					if(_this1.zip_axis) {
						_this1.zip_axis = false;
						_this1.axisx = Math.sin(_this1.rot);
						_this1.axisy = Math.cos(_this1.rot);
					}
					if(_this.zip_gverts) {
						if(_this.body != null) {
							_this.zip_gverts = false;
							_this.validate_lverts();
							var _this2 = _this.body;
							if(_this2.zip_axis) {
								_this2.zip_axis = false;
								_this2.axisx = Math.sin(_this2.rot);
								_this2.axisy = Math.cos(_this2.rot);
							}
							var li = _this.lverts.next;
							var cx_ite = _this.gverts.next;
							while(cx_ite != null) {
								var g = cx_ite;
								var l = li;
								li = li.next;
								g.x = _this.body.posx + (_this.body.axisy * l.x - _this.body.axisx * l.y);
								g.y = _this.body.posy + (l.x * _this.body.axisx + l.y * _this.body.axisy);
								cx_ite = cx_ite.next;
							}
						}
					}
					var ite = _this.edges.head;
					var cx_ite1 = _this.gverts.next;
					var u = cx_ite1;
					cx_ite1 = cx_ite1.next;
					while(cx_ite1 != null) {
						var v = cx_ite1;
						var e = ite.elt;
						ite = ite.next;
						e.gp0 = u;
						e.gp1 = v;
						e.gnormx = _this.body.axisy * e.lnormx - _this.body.axisx * e.lnormy;
						e.gnormy = e.lnormx * _this.body.axisx + e.lnormy * _this.body.axisy;
						e.gprojection = _this.body.posx * e.gnormx + _this.body.posy * e.gnormy + e.lprojection;
						if(e.wrap_gnorm != null) {
							e.wrap_gnorm.zpp_inner.x = e.gnormx;
							e.wrap_gnorm.zpp_inner.y = e.gnormy;
						}
						e.tp0 = e.gp0.y * e.gnormx - e.gp0.x * e.gnormy;
						e.tp1 = e.gp1.y * e.gnormx - e.gp1.x * e.gnormy;
						u = v;
						cx_ite1 = cx_ite1.next;
					}
					var v1 = _this.gverts.next;
					var e1 = ite.elt;
					ite = ite.next;
					e1.gp0 = u;
					e1.gp1 = v1;
					e1.gnormx = _this.body.axisy * e1.lnormx - _this.body.axisx * e1.lnormy;
					e1.gnormy = e1.lnormx * _this.body.axisx + e1.lnormy * _this.body.axisy;
					e1.gprojection = _this.body.posx * e1.gnormx + _this.body.posy * e1.gnormy + e1.lprojection;
					if(e1.wrap_gnorm != null) {
						e1.wrap_gnorm.zpp_inner.x = e1.gnormx;
						e1.wrap_gnorm.zpp_inner.y = e1.gnormy;
					}
					e1.tp0 = e1.gp0.y * e1.gnormx - e1.gp0.x * e1.gnormy;
					e1.tp1 = e1.gp1.y * e1.gnormx - e1.gp1.x * e1.gnormy;
				}
			}
			return "{ localNormal : " + ("{ x: " + this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy + " }") + " worldNormal : " + ("{ x: " + this.zpp_inner.gnormx + " y: " + this.zpp_inner.gnormy + " }") + " }";
		}
	}
	,__class__: nape_shape_Edge
};
var nape_shape_EdgeIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$EdgeList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Edge" + "Iterator derp!");
	}
};
nape_shape_EdgeIterator.__name__ = true;
nape_shape_EdgeIterator.get = function(list) {
	var ret;
	if(nape_shape_EdgeIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$EdgeList.internal = true;
		var ret1 = new nape_shape_EdgeIterator();
		zpp_$nape_util_ZPP_$EdgeList.internal = false;
		ret = ret1;
	} else {
		var r = nape_shape_EdgeIterator.zpp_pool;
		nape_shape_EdgeIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_shape_EdgeIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_shape_EdgeIterator.zpp_pool;
			nape_shape_EdgeIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_shape_EdgeIterator
};
var nape_shape_EdgeList = function() {
	this.zpp_inner = null;
};
nape_shape_EdgeList.__name__ = true;
nape_shape_EdgeList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			if(index == this.zpp_inner.user_length - 1) {
				index = index;
			} else {
				this.zpp_inner.valmod();
				if(this.zpp_inner.zip_length) {
					this.zpp_inner.zip_length = false;
					this.zpp_inner.user_length = this.zpp_inner.inner.length;
				}
				index = this.zpp_inner.user_length - 2 - index;
			}
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.wrapper();
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_shape_EdgeIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_shape_EdgeIterator.zpp_pool;
				nape_shape_EdgeIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_shape_EdgeList
};
var nape_shape_Polygon = function() { };
nape_shape_Polygon.__name__ = true;
nape_shape_Polygon.__super__ = nape_shape_Shape;
nape_shape_Polygon.prototype = $extend(nape_shape_Shape.prototype,{
	__class__: nape_shape_Polygon
});
var nape_shape_ShapeIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ShapeList.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Shape" + "Iterator derp!");
	}
};
nape_shape_ShapeIterator.__name__ = true;
nape_shape_ShapeIterator.get = function(list) {
	var ret;
	if(nape_shape_ShapeIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ShapeList.internal = true;
		var ret1 = new nape_shape_ShapeIterator();
		zpp_$nape_util_ZPP_$ShapeList.internal = false;
		ret = ret1;
	} else {
		var r = nape_shape_ShapeIterator.zpp_pool;
		nape_shape_ShapeIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_shape_ShapeIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var _this = this.zpp_inner;
		_this.zpp_inner.valmod();
		if(_this.zpp_inner.zip_length) {
			_this.zpp_inner.zip_length = false;
			_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
		}
		var length = _this.zpp_inner.user_length;
		this.zpp_critical = true;
		if(this.zpp_i < length) {
			return true;
		} else {
			this.zpp_next = nape_shape_ShapeIterator.zpp_pool;
			nape_shape_ShapeIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_shape_ShapeIterator
};
var nape_shape_ShapeList = function() {
	this.zpp_inner = null;
};
nape_shape_ShapeList.__name__ = true;
nape_shape_ShapeList.prototype = {
	at: function(index) {
		this.zpp_inner.valmod();
		var tmp;
		if(index >= 0) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			tmp = index >= this.zpp_inner.user_length;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError("Error: Index out of bounds");
		}
		if(this.zpp_inner.reverse_flag) {
			this.zpp_inner.valmod();
			if(this.zpp_inner.zip_length) {
				this.zpp_inner.zip_length = false;
				this.zpp_inner.user_length = this.zpp_inner.inner.length;
			}
			index = this.zpp_inner.user_length - 1 - index;
		}
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else {
			while(this.zpp_inner.at_index != index) {
				this.zpp_inner.at_index++;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		this.zpp_inner.valmod();
		var _g = nape_shape_ShapeIterator.get(this);
		while(true) {
			_g.zpp_inner.zpp_inner.valmod();
			var _this = _g.zpp_inner;
			_this.zpp_inner.valmod();
			if(_this.zpp_inner.zip_length) {
				_this.zpp_inner.zip_length = false;
				_this.zpp_inner.user_length = _this.zpp_inner.inner.length;
			}
			var length = _this.zpp_inner.user_length;
			_g.zpp_critical = true;
			var tmp;
			if(_g.zpp_i < length) {
				tmp = true;
			} else {
				_g.zpp_next = nape_shape_ShapeIterator.zpp_pool;
				nape_shape_ShapeIterator.zpp_pool = _g;
				_g.zpp_inner = null;
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			_g.zpp_critical = false;
			var i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) {
				ret += ",";
			}
			ret += i == null ? "NULL" : i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_shape_ShapeList
};
var nape_shape_ShapeType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ShapeType" + " derp!");
	}
};
nape_shape_ShapeType.__name__ = true;
nape_shape_ShapeType.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.ShapeType_CIRCLE == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.ShapeType_CIRCLE = new nape_shape_ShapeType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.ShapeType_CIRCLE) {
			return "CIRCLE";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.ShapeType_POLYGON == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ShapeType_POLYGON = new nape_shape_ShapeType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.ShapeType_POLYGON) {
				return "POLYGON";
			} else {
				return "";
			}
		}
	}
	,__class__: nape_shape_ShapeType
};
var nape_shape_ValidationResult = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ValidationResult" + " derp!");
	}
};
nape_shape_ValidationResult.__name__ = true;
nape_shape_ValidationResult.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID = new nape_shape_ValidationResult();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID) {
			return "VALID";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE = new nape_shape_ValidationResult();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE) {
				return "DEGENERATE";
			} else {
				if(zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE = new nape_shape_ValidationResult();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				if(this == zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE) {
					return "CONCAVE";
				} else {
					if(zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING = new nape_shape_ValidationResult();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					if(this == zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING) {
						return "SELF_INTERSECTING";
					} else {
						return "";
					}
				}
			}
		}
	}
	,__class__: nape_shape_ValidationResult
};
var nape_space_Broadphase = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) {
		throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Broadphase" + " derp!");
	}
};
nape_space_Broadphase.__name__ = true;
nape_space_Broadphase.prototype = {
	toString: function() {
		if(zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE = new nape_space_Broadphase();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		if(this == zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE) {
			return "DYNAMIC_AABB_TREE";
		} else {
			if(zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE = new nape_space_Broadphase();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			if(this == zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE) {
				return "SWEEP_AND_PRUNE";
			} else {
				return "";
			}
		}
	}
	,__class__: nape_space_Broadphase
};
var nape_space_Space = function() { };
nape_space_Space.__name__ = true;
nape_space_Space.prototype = {
	__class__: nape_space_Space
};
var shaders_SkyShader = function() { };
shaders_SkyShader.__name__ = true;
var shaders_SkyEffectController = function(main) {
	this.mieKCoefficient = new THREE.Vector3();
	this.primaries = new THREE.Vector3();
	this.cameraPos = new THREE.Vector3();
	this.sunPosition = new THREE.Vector3();
	this.main = main;
	this.sunPosition.set(0,-700000,0);
	this.cameraPos.set(100000.0,-40000.0,0.0);
	this.turbidity = 2.0;
	this.rayleigh = 1.0;
	this.mieCoefficient = 0.005;
	this.mieDirectionalG = 0.8;
	this.luminance = 1.0;
	this.inclination = 0.49;
	this.azimuth = 0.25;
	this.refractiveIndex = 1.0003;
	this.numMolecules = 2.542e25;
	this.depolarizationFactor = 0.035;
	this.primaries.set(6.8e-7,5.5e-7,4.5e-7);
	this.mieKCoefficient.set(0.686,0.678,0.666);
	this.mieV = 4.0;
	this.rayleighZenithLength = 8.4e3;
	this.mieZenithLength = 1.25e3;
	this.sunIntensityFactor = 1000.0;
	this.sunIntensityFalloffSteepness = 1.5;
	this.sunAngularDiameterDegrees = 0.0;
	this.tonemapWeighting = 1000.0;
	this.updateUniforms();
	this.presetTransitionDuration = 5.0;
	this.set_preset("stellarDawn");
};
shaders_SkyEffectController.__name__ = true;
shaders_SkyEffectController.prototype = {
	updateUniforms: function() {
		shaders_SkyShader.uniforms.cameraPos.value = this.cameraPos;
		shaders_SkyShader.uniforms.turbidity.value = this.turbidity;
		shaders_SkyShader.uniforms.rayleigh.value = this.rayleigh;
		shaders_SkyShader.uniforms.mieCoefficient.value = this.mieCoefficient;
		shaders_SkyShader.uniforms.mieDirectionalG.value = this.mieDirectionalG;
		shaders_SkyShader.uniforms.luminance.value = this.luminance;
		var theta = Math.PI * (this.inclination - 0.5);
		var phi = 2 * Math.PI * (this.azimuth - 0.5);
		var distance = 400000;
		this.sunPosition.x = distance * Math.cos(phi);
		this.sunPosition.y = distance * Math.sin(phi) * Math.sin(theta);
		this.sunPosition.z = distance * Math.sin(phi) * Math.cos(theta);
		shaders_SkyShader.uniforms.sunPosition.value.copy(this.sunPosition);
		shaders_SkyShader.uniforms.refractiveIndex.value = this.refractiveIndex;
		shaders_SkyShader.uniforms.numMolecules.value = this.numMolecules;
		shaders_SkyShader.uniforms.depolarizationFactor.value = this.depolarizationFactor;
		shaders_SkyShader.uniforms.rayleighZenithLength.value = this.rayleighZenithLength;
		shaders_SkyShader.uniforms.primaries.value.copy(this.primaries);
		shaders_SkyShader.uniforms.mieKCoefficient.value.copy(this.mieKCoefficient);
		shaders_SkyShader.uniforms.mieV.value = this.mieV;
		shaders_SkyShader.uniforms.mieZenithLength.value = this.mieZenithLength;
		shaders_SkyShader.uniforms.sunIntensityFactor.value = this.sunIntensityFactor;
		shaders_SkyShader.uniforms.sunIntensityFalloffSteepness.value = this.sunIntensityFalloffSteepness;
		shaders_SkyShader.uniforms.sunAngularDiameterDegrees.value = this.sunAngularDiameterDegrees;
		shaders_SkyShader.uniforms.tonemapWeighting.value = this.tonemapWeighting;
	}
	,presetChanged: function(preset,duration) {
		if(duration == null) {
			duration = 3;
		}
		switch(preset) {
		case "alienDay":
			this.alienDay(duration);
			break;
		case "bloodSky":
			this.bloodSky(duration);
			break;
		case "blueDusk":
			this.blueDusk(duration);
			break;
		case "purpleDusk":
			this.purpleDusk(duration);
			break;
		case "redSunset":
			this.redSunset(duration);
			break;
		case "stellarDawn":
			this.stellarDawn(duration);
			break;
		default:
			console.log("Got bad preset, doing nothing...");
		}
	}
	,onPresetChanged: function(preset) {
		this.presetChanged(preset);
	}
	,stellarDawn: function(duration) {
		if(duration == null) {
			duration = 3;
		}
		var _gthis = this;
		motion_Actuate.tween(this,duration,{ turbidity : 1.25, rayleigh : 1.00, mieCoefficient : 0.00335, mieDirectionalG : 0.787, luminance : 1.0, inclination : 0.4945, azimuth : 0.2508, refractiveIndex : 1.000317, numMolecules : 2.542e25, depolarizationFactor : 0.067, rayleighZenithLength : 615, mieV : 4.012, mieZenithLength : 500, sunIntensityFactor : 1111, sunIntensityFalloffSteepness : 0.98, sunAngularDiameterDegrees : 0.00758, tonemapWeighting : 1000}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.primaries,duration,{ x : 6.8e-7, y : 5.5e-7, z : 4.5e-7}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.mieKCoefficient,duration,{ x : 0.686, y : 0.678, z : 0.666}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.cameraPos,duration,{ x : 100000, y : -40000, z : 0}).onUpdate(function() {
			_gthis.updateUniforms();
		});
	}
	,redSunset: function(duration) {
		if(duration == null) {
			duration = 3;
		}
		var _gthis = this;
		motion_Actuate.tween(this,duration,{ turbidity : 4.7, rayleigh : 2.28, mieCoefficient : 0.005, mieDirectionalG : 0.82, luminance : 1.00, inclination : 0.4983, azimuth : 0.1979, refractiveIndex : 1.00029, numMolecules : 2.542e25, depolarizationFactor : 0.02, rayleighZenithLength : 8400, mieV : 3.936, mieZenithLength : 34000, sunIntensityFactor : 1000, sunIntensityFalloffSteepness : 1.5, sunAngularDiameterDegrees : 0.00933, tonemapWeighting : 1000}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.primaries,duration,{ x : 6.8e-7, y : 5.5e-7, z : 4.5e-7}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.mieKCoefficient,duration,{ x : 0.686, y : 0.678, z : 0.666}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.cameraPos,duration,{ x : 100000, y : -40000, z : 0}).onUpdate(function() {
			_gthis.updateUniforms();
		});
	}
	,alienDay: function(duration) {
		if(duration == null) {
			duration = 3;
		}
		var _gthis = this;
		motion_Actuate.tween(this,duration,{ turbidity : 12.575, rayleigh : 5.75, mieCoefficient : 0.0074, mieDirectionalG : 0.468, luminance : 1.00, inclination : 0.4901, azimuth : 0.1866, refractiveIndex : 1.000128, numMolecules : 2.542e25, depolarizationFactor : 0.137, rayleighZenithLength : 3795, mieV : 4.007, mieZenithLength : 7100, sunIntensityFactor : 1024, sunIntensityFalloffSteepness : 1.4, sunAngularDiameterDegrees : 0.006, tonemapWeighting : 1000}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.primaries,duration,{ x : 6.8e-7, y : 5.5e-7, z : 4.5e-7}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.mieKCoefficient,duration,{ x : 0.686, y : 0.678, z : 0.666}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.cameraPos,duration,{ x : 100000, y : -40000, z : 0}).onUpdate(function() {
			_gthis.updateUniforms();
		});
	}
	,blueDusk: function(duration) {
		if(duration == null) {
			duration = 3;
		}
		var _gthis = this;
		motion_Actuate.tween(this,duration,{ turbidity : 2.5, rayleigh : 2.295, mieCoefficient : 0.011475, mieDirectionalG : 0.814, luminance : 1.00, inclination : 0.4987, azimuth : 0.2268, refractiveIndex : 1.000262, numMolecules : 2.542e25, depolarizationFactor : 0.095, rayleighZenithLength : 540, mieV : 3.979, mieZenithLength : 1000, sunIntensityFactor : 1151, sunIntensityFalloffSteepness : 1.22, sunAngularDiameterDegrees : 0.00639, tonemapWeighting : 1000}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.primaries,duration,{ x : 6.8e-7, y : 5.5e-7, z : 4.5e-7}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.mieKCoefficient,duration,{ x : 0.686, y : 0.678, z : 0.666}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.cameraPos,duration,{ x : 100000, y : -40000, z : 0}).onUpdate(function() {
			_gthis.updateUniforms();
		});
	}
	,purpleDusk: function(duration) {
		if(duration == null) {
			duration = 3;
		}
		var _gthis = this;
		motion_Actuate.tween(this,duration,{ turbidity : 3.6, rayleigh : 2.26, mieCoefficient : 0.005, mieDirectionalG : 0.822, luminance : 1.00, inclination : 0.502, azimuth : 0.2883, refractiveIndex : 1.000294, numMolecules : 2.542e25, depolarizationFactor : 0.068, rayleighZenithLength : 12045, mieV : 3.976, mieZenithLength : 34000, sunIntensityFactor : 1631, sunIntensityFalloffSteepness : 1.5, sunAngularDiameterDegrees : 0.00933, tonemapWeighting : 1000}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.primaries,duration,{ x : 7.5e-7, y : 4.5e-7, z : 5.1e-7}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.mieKCoefficient,duration,{ x : 0.686, y : 0.678, z : 0.666}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.cameraPos,duration,{ x : 100000, y : -40000, z : 0}).onUpdate(function() {
			_gthis.updateUniforms();
		});
	}
	,bloodSky: function(duration) {
		if(duration == null) {
			duration = 3;
		}
		var _gthis = this;
		motion_Actuate.tween(this,duration,{ turbidity : 4.75, rayleigh : 6.77, mieCoefficient : 0.0191, mieDirectionalG : 0.793, luminance : 1.1735, inclination : 0.4956, azimuth : 0.2174, refractiveIndex : 1.000633, numMolecules : 2.542e25, depolarizationFactor : 0.01, rayleighZenithLength : 1425, mieV : 4.042, mieZenithLength : 1600, sunIntensityFactor : 2069, sunIntensityFalloffSteepness : 2.26, sunAngularDiameterDegrees : 0.01487, tonemapWeighting : 1000}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.primaries,duration,{ x : 7.929e-7, y : 3.766e-7, z : 3.172e-7}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.mieKCoefficient,duration,{ x : 0.686, y : 0.678, z : 0.666}).onUpdate(function() {
			_gthis.updateUniforms();
		});
		motion_Actuate.tween(this.cameraPos,duration,{ x : 100000, y : -40000, z : 0}).onUpdate(function() {
			_gthis.updateUniforms();
		});
	}
	,addGUIItem: function(c,parentGui) {
		var controller = c;
		var updateValues = function(t) {
			controller.updateUniforms();
		};
		parentGui.add(controller,"preset",["stellarDawn","redSunset","bloodSky","alienDay","blueDusk","purpleDusk"]).listen().onChange($bind(this,this.onPresetChanged));
		var parametersFolder = parentGui.addFolder("parameters");
		parametersFolder.add(controller,"turbidity").step(0.025).listen().onChange(updateValues);
		parametersFolder.add(controller,"rayleigh").step(0.005).listen().onChange(updateValues);
		parametersFolder.add(controller,"mieCoefficient").step(0.000025).listen().onChange(updateValues);
		parametersFolder.add(controller,"mieDirectionalG").step(0.001).listen().onChange(updateValues);
		parametersFolder.add(controller,"luminance").step(0.0005).listen().onChange(updateValues);
		parametersFolder.add(controller,"inclination").step(0.0001).listen().onChange(updateValues);
		parametersFolder.add(controller,"azimuth").step(0.0001).listen().onChange(updateValues);
		parametersFolder.add(controller,"refractiveIndex").step(0.000001).listen().onChange(updateValues);
		parametersFolder.add(controller,"numMolecules",2.542e10,2.542e26,1e10).listen().onChange(updateValues);
		parametersFolder.add(controller,"depolarizationFactor").step(0.001).listen().onChange(updateValues);
		parametersFolder.add(controller,"rayleighZenithLength").step(15.0).listen().onChange(updateValues);
		parametersFolder.add(controller,"mieV").step(0.001).listen().onChange(updateValues);
		parametersFolder.add(controller,"mieZenithLength").step(100.0).listen().onChange(updateValues);
		parametersFolder.add(controller,"sunIntensityFactor").step(1.0).listen().onChange(updateValues);
		parametersFolder.add(controller,"sunIntensityFalloffSteepness").step(0.01).listen().onChange(updateValues);
		parametersFolder.add(controller,"sunAngularDiameterDegrees").step(0.00001).listen().onChange(updateValues);
		parametersFolder.add(controller,"tonemapWeighting").step(1).listen().onChange(updateValues);
		var primariesFolder = parentGui.addFolder("primaries");
		primariesFolder.add(controller.primaries,"x",5e-12,9e-7,5e-13).listen().onChange(updateValues);
		primariesFolder.add(controller.primaries,"y",5e-12,9e-7,5e-13).listen().onChange(updateValues);
		primariesFolder.add(controller.primaries,"z",5e-12,9e-7,5e-13).listen().onChange(updateValues);
		var mieFolder = parentGui.addFolder("mieCoefficient");
		mieFolder.add(controller.mieKCoefficient,"x").step(0.001).listen().onChange(updateValues);
		mieFolder.add(controller.mieKCoefficient,"y").step(0.001).listen().onChange(updateValues);
		mieFolder.add(controller.mieKCoefficient,"z").step(0.001).listen().onChange(updateValues);
		var camFolder = parentGui.addFolder("cameraPos");
		camFolder.add(controller.cameraPos,"x").step(250).listen().onChange(updateValues);
		camFolder.add(controller.cameraPos,"y").step(250).listen().onChange(updateValues);
		camFolder.add(controller.cameraPos,"z").step(250).listen().onChange(updateValues);
	}
	,set_preset: function(nextPreset) {
		this.preset = nextPreset;
		this.presetChanged(nextPreset,this.presetTransitionDuration);
		return this.preset;
	}
	,__class__: shaders_SkyEffectController
	,__properties__: {set_preset:"set_preset"}
};
var zpp_$nape_ZPP_$ID = function() { };
zpp_$nape_ZPP_$ID.__name__ = true;
zpp_$nape_ZPP_$ID.CbType = function() {
	return zpp_$nape_ZPP_$ID._CbType++;
};
var zpp_$nape_callbacks_ZPP_$Callback = function() {
	this.constraint = null;
	this.body = null;
	this.pre_arbiter = null;
	this.wrap_arbiters = null;
	this.int2 = null;
	this.int1 = null;
	this.listener = null;
	this.event = 0;
};
zpp_$nape_callbacks_ZPP_$Callback.__name__ = true;
zpp_$nape_callbacks_ZPP_$Callback.prototype = {
	__class__: zpp_$nape_callbacks_ZPP_$Callback
};
var zpp_$nape_util_ZNPList_$ZPP_$InteractionListener = function() {
};
zpp_$nape_util_ZNPList_$ZPP_$InteractionListener.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$InteractionListener.prototype = {
	__class__: zpp_$nape_util_ZNPList_$ZPP_$InteractionListener
};
var zpp_$nape_util_ZNPList_$ZPP_$BodyListener = function() {
};
zpp_$nape_util_ZNPList_$ZPP_$BodyListener.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$BodyListener.prototype = {
	__class__: zpp_$nape_util_ZNPList_$ZPP_$BodyListener
};
var zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener = function() {
};
zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener.prototype = {
	__class__: zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener
};
var zpp_$nape_util_ZNPList_$ZPP_$Constraint = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Constraint.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Constraint.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Constraint
};
var zpp_$nape_util_ZNPList_$ZPP_$Interactor = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Interactor.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Interactor.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Interactor
};
var zpp_$nape_util_ZNPList_$ZPP_$CbSet = function() {
};
zpp_$nape_util_ZNPList_$ZPP_$CbSet.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$CbSet.prototype = {
	__class__: zpp_$nape_util_ZNPList_$ZPP_$CbSet
};
var zpp_$nape_callbacks_ZPP_$CbType = function() {
	this.conlisteners = null;
	this.bodylisteners = null;
	this.listeners = null;
	this.cbsets = null;
	this.id = 0;
	this.outer = null;
	this.id = zpp_$nape_ZPP_$ID.CbType();
	this.listeners = new zpp_$nape_util_ZNPList_$ZPP_$InteractionListener();
	this.bodylisteners = new zpp_$nape_util_ZNPList_$ZPP_$BodyListener();
	this.conlisteners = new zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener();
	this.constraints = new zpp_$nape_util_ZNPList_$ZPP_$Constraint();
	this.interactors = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
	this.cbsets = new zpp_$nape_util_ZNPList_$ZPP_$CbSet();
};
zpp_$nape_callbacks_ZPP_$CbType.__name__ = true;
zpp_$nape_callbacks_ZPP_$CbType.prototype = {
	__class__: zpp_$nape_callbacks_ZPP_$CbType
};
var zpp_$nape_util_ZPP_$Flags = function() { };
zpp_$nape_util_ZPP_$Flags.__name__ = true;
var zpp_$nape_callbacks_ZPP_$Listener = function() {
	this.interaction = null;
	this.constraint = null;
	this.body = null;
	this.precedence = 0;
	this.event = 0;
	this.type = 0;
	this.outer = null;
};
zpp_$nape_callbacks_ZPP_$Listener.__name__ = true;
zpp_$nape_callbacks_ZPP_$Listener.prototype = {
	__class__: zpp_$nape_callbacks_ZPP_$Listener
};
var zpp_$nape_callbacks_ZPP_$BodyListener = function() {
	this.options = null;
	this.outer_zn = null;
};
zpp_$nape_callbacks_ZPP_$BodyListener.__name__ = true;
zpp_$nape_callbacks_ZPP_$BodyListener.__super__ = zpp_$nape_callbacks_ZPP_$Listener;
zpp_$nape_callbacks_ZPP_$BodyListener.prototype = $extend(zpp_$nape_callbacks_ZPP_$Listener.prototype,{
	__class__: zpp_$nape_callbacks_ZPP_$BodyListener
});
var zpp_$nape_callbacks_ZPP_$ConstraintListener = function() {
	this.options = null;
	this.outer_zn = null;
};
zpp_$nape_callbacks_ZPP_$ConstraintListener.__name__ = true;
zpp_$nape_callbacks_ZPP_$ConstraintListener.__super__ = zpp_$nape_callbacks_ZPP_$Listener;
zpp_$nape_callbacks_ZPP_$ConstraintListener.prototype = $extend(zpp_$nape_callbacks_ZPP_$Listener.prototype,{
	__class__: zpp_$nape_callbacks_ZPP_$ConstraintListener
});
var zpp_$nape_util_ZNPList_$ZPP_$CbType = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$CbType.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$CbType.prototype = {
	add: function(o) {
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool == null) {
			ret = new zpp_$nape_util_ZNPNode_$ZPP_$CbType();
		} else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool = ret.next;
			ret.next = null;
		}
		ret.elt = o;
		var temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool == null) {
			ret = new zpp_$nape_util_ZNPNode_$ZPP_$CbType();
		} else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool = ret.next;
			ret.next = null;
		}
		ret.elt = o;
		var temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$CbType
};
var zpp_$nape_callbacks_ZPP_$InteractionListener = function() {
	this.options2 = null;
	this.options1 = null;
	this.itype = 0;
	this.outer_znp = null;
	this.outer_zni = null;
};
zpp_$nape_callbacks_ZPP_$InteractionListener.__name__ = true;
zpp_$nape_callbacks_ZPP_$InteractionListener.__super__ = zpp_$nape_callbacks_ZPP_$Listener;
zpp_$nape_callbacks_ZPP_$InteractionListener.prototype = $extend(zpp_$nape_callbacks_ZPP_$Listener.prototype,{
	__class__: zpp_$nape_callbacks_ZPP_$InteractionListener
});
var zpp_$nape_callbacks_ZPP_$OptionType = function() {
	this.wrap_excludes = null;
	this.wrap_includes = null;
	this.excludes = null;
	this.includes = null;
	this.outer = null;
};
zpp_$nape_callbacks_ZPP_$OptionType.__name__ = true;
zpp_$nape_callbacks_ZPP_$OptionType.prototype = {
	setup_includes: function() {
		this.wrap_includes = zpp_$nape_util_ZPP_$CbTypeList.get(this.includes,true);
	}
	,setup_excludes: function() {
		this.wrap_excludes = zpp_$nape_util_ZPP_$CbTypeList.get(this.excludes,true);
	}
	,__class__: zpp_$nape_callbacks_ZPP_$OptionType
};
var zpp_$nape_constraint_ZPP_$Constraint = function() {
	this.outer = null;
};
zpp_$nape_constraint_ZPP_$Constraint.__name__ = true;
zpp_$nape_constraint_ZPP_$Constraint.prototype = {
	__class__: zpp_$nape_constraint_ZPP_$Constraint
};
var zpp_$nape_dynamics_ZPP_$Arbiter = function() {
	this.fluidarb = null;
	this.colarb = null;
	this.type = 0;
	this.ws2 = null;
	this.ws1 = null;
	this.immState = 0;
	this.cleared = false;
	this.active = false;
	this.outer = null;
};
zpp_$nape_dynamics_ZPP_$Arbiter.__name__ = true;
zpp_$nape_dynamics_ZPP_$Arbiter.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			zpp_$nape_dynamics_ZPP_$Arbiter.internal = true;
			if(this.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) {
				this.colarb.outer_zn = new nape_dynamics_CollisionArbiter();
				this.outer = this.colarb.outer_zn;
			} else if(this.type == zpp_$nape_dynamics_ZPP_$Arbiter.FLUID) {
				this.fluidarb.outer_zn = new nape_dynamics_FluidArbiter();
				this.outer = this.fluidarb.outer_zn;
			} else {
				this.outer = new nape_dynamics_Arbiter();
			}
			this.outer.zpp_inner = this;
			zpp_$nape_dynamics_ZPP_$Arbiter.internal = false;
		}
		return this.outer;
	}
	,__class__: zpp_$nape_dynamics_ZPP_$Arbiter
};
var zpp_$nape_dynamics_ZPP_$FluidArbiter = function() {
	this.outer_zn = null;
};
zpp_$nape_dynamics_ZPP_$FluidArbiter.__name__ = true;
zpp_$nape_dynamics_ZPP_$FluidArbiter.__super__ = zpp_$nape_dynamics_ZPP_$Arbiter;
zpp_$nape_dynamics_ZPP_$FluidArbiter.prototype = $extend(zpp_$nape_dynamics_ZPP_$Arbiter.prototype,{
	__class__: zpp_$nape_dynamics_ZPP_$FluidArbiter
});
var zpp_$nape_dynamics_ZPP_$ColArbiter = function() {
	this.stat = false;
	this.outer_zn = null;
};
zpp_$nape_dynamics_ZPP_$ColArbiter.__name__ = true;
zpp_$nape_dynamics_ZPP_$ColArbiter.__super__ = zpp_$nape_dynamics_ZPP_$Arbiter;
zpp_$nape_dynamics_ZPP_$ColArbiter.prototype = $extend(zpp_$nape_dynamics_ZPP_$Arbiter.prototype,{
	__class__: zpp_$nape_dynamics_ZPP_$ColArbiter
});
var zpp_$nape_dynamics_ZPP_$Contact = function() {
	this.pushmod = false;
	this.modified = false;
	this.next = null;
	this.active = false;
	this.arbiter = null;
	this.outer = null;
};
zpp_$nape_dynamics_ZPP_$Contact.__name__ = true;
zpp_$nape_dynamics_ZPP_$Contact.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			zpp_$nape_dynamics_ZPP_$Contact.internal = true;
			this.outer = new nape_dynamics_Contact();
			zpp_$nape_dynamics_ZPP_$Contact.internal = false;
			this.outer.zpp_inner = this;
		}
		return this.outer;
	}
	,__class__: zpp_$nape_dynamics_ZPP_$Contact
};
var zpp_$nape_dynamics_ZPP_$InteractionGroup = function() {
	this.ignore = false;
	this.outer = null;
};
zpp_$nape_dynamics_ZPP_$InteractionGroup.__name__ = true;
zpp_$nape_dynamics_ZPP_$InteractionGroup.prototype = {
	__class__: zpp_$nape_dynamics_ZPP_$InteractionGroup
};
var zpp_$nape_geom_ZPP_$AABB = function() {
	this.maxy = 0.0;
	this.maxx = 0.0;
	this.miny = 0.0;
	this.minx = 0.0;
	this._validate = null;
};
zpp_$nape_geom_ZPP_$AABB.__name__ = true;
zpp_$nape_geom_ZPP_$AABB.prototype = {
	toString: function() {
		return "{ x: " + this.minx + " y: " + this.miny + " w: " + (this.maxx - this.minx) + " h: " + (this.maxy - this.miny) + " }";
	}
	,__class__: zpp_$nape_geom_ZPP_$AABB
};
var zpp_$nape_util_ZNPList_$ZPP_$Vec2 = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Vec2.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Vec2.prototype = {
	add: function(o) {
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool == null) {
			ret = new zpp_$nape_util_ZNPNode_$ZPP_$Vec2();
		} else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool = ret.next;
			ret.next = null;
		}
		ret.elt = o;
		var temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool == null) {
			ret = new zpp_$nape_util_ZNPNode_$ZPP_$Vec2();
		} else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool = ret.next;
			ret.next = null;
		}
		ret.elt = o;
		var temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) {
				this.pushmod = true;
			}
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) {
				this.pushmod = true;
			}
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Vec2
};
var zpp_$nape_geom_ZPP_$ConvexRayResult = function() {
	this.toiDistance = 0.0;
	this.next = null;
	this.inner = false;
	this.shape = null;
};
zpp_$nape_geom_ZPP_$ConvexRayResult.__name__ = true;
zpp_$nape_geom_ZPP_$ConvexRayResult.prototype = {
	__class__: zpp_$nape_geom_ZPP_$ConvexRayResult
};
var zpp_$nape_geom_ZPP_$GeomVert = function() {
	this.forced = false;
	this.next = null;
	this.prev = null;
	this.y = 0.0;
	this.x = 0.0;
};
zpp_$nape_geom_ZPP_$GeomVert.__name__ = true;
zpp_$nape_geom_ZPP_$GeomVert.prototype = {
	__class__: zpp_$nape_geom_ZPP_$GeomVert
};
var zpp_$nape_geom_ZPP_$GeomPoly = function(outer) {
	this.vertices = null;
	this.outer = null;
	this.outer = outer;
};
zpp_$nape_geom_ZPP_$GeomPoly.__name__ = true;
zpp_$nape_geom_ZPP_$GeomPoly.prototype = {
	__class__: zpp_$nape_geom_ZPP_$GeomPoly
};
var zpp_$nape_geom_ZPP_$Mat23 = function() {
	this.ty = 0.0;
	this.tx = 0.0;
	this.d = 0.0;
	this.c = 0.0;
	this.b = 0.0;
	this.a = 0.0;
};
zpp_$nape_geom_ZPP_$Mat23.__name__ = true;
zpp_$nape_geom_ZPP_$Mat23.prototype = {
	__class__: zpp_$nape_geom_ZPP_$Mat23
};
var zpp_$nape_geom_ZPP_$MatMN = function() {
	this.x = null;
	this.n = 0;
	this.m = 0;
};
zpp_$nape_geom_ZPP_$MatMN.__name__ = true;
zpp_$nape_geom_ZPP_$MatMN.prototype = {
	__class__: zpp_$nape_geom_ZPP_$MatMN
};
var zpp_$nape_geom_ZPP_$Vec2 = function() {
	this.y = 0.0;
	this.x = 0.0;
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this._inuse = false;
	this.next = null;
	this.weak = false;
	this.outer = null;
	this._isimmutable = null;
	this._immutable = false;
	this._validate = null;
	this._invalidate = null;
};
zpp_$nape_geom_ZPP_$Vec2.__name__ = true;
zpp_$nape_geom_ZPP_$Vec2.prototype = {
	reverse: function() {
		var cur = this.next;
		var pre = null;
		while(cur != null) {
			var nx = cur.next;
			cur.next = pre;
			this.next = cur;
			pre = cur;
			cur = nx;
		}
		this.modified = true;
		this.pushmod = true;
	}
	,toString: function() {
		return "{ x: " + this.x + " y: " + this.y + " }";
	}
	,__class__: zpp_$nape_geom_ZPP_$Vec2
};
var zpp_$nape_geom_ZPP_$Vec3 = function() {
	this._validate = null;
	this.z = 0.0;
	this.y = 0.0;
	this.x = 0.0;
};
zpp_$nape_geom_ZPP_$Vec3.__name__ = true;
zpp_$nape_geom_ZPP_$Vec3.prototype = {
	__class__: zpp_$nape_geom_ZPP_$Vec3
};
var zpp_$nape_phys_ZPP_$Interactor = function() {
	this.id = 0;
	this.outer_i = null;
};
zpp_$nape_phys_ZPP_$Interactor.__name__ = true;
zpp_$nape_phys_ZPP_$Interactor.prototype = {
	__class__: zpp_$nape_phys_ZPP_$Interactor
};
var zpp_$nape_phys_ZPP_$Body = function() {
	this.zip_axis = false;
	this.axisy = 0.0;
	this.axisx = 0.0;
	this.rot = 0.0;
	this.posy = 0.0;
	this.posx = 0.0;
	this.type = 0;
	this.world = false;
	this.outer = null;
};
zpp_$nape_phys_ZPP_$Body.__name__ = true;
zpp_$nape_phys_ZPP_$Body.__super__ = zpp_$nape_phys_ZPP_$Interactor;
zpp_$nape_phys_ZPP_$Body.prototype = $extend(zpp_$nape_phys_ZPP_$Interactor.prototype,{
	__class__: zpp_$nape_phys_ZPP_$Body
});
var zpp_$nape_phys_ZPP_$Compound = function() {
	this.outer = null;
};
zpp_$nape_phys_ZPP_$Compound.__name__ = true;
zpp_$nape_phys_ZPP_$Compound.__super__ = zpp_$nape_phys_ZPP_$Interactor;
zpp_$nape_phys_ZPP_$Compound.prototype = $extend(zpp_$nape_phys_ZPP_$Interactor.prototype,{
	__class__: zpp_$nape_phys_ZPP_$Compound
});
var zpp_$nape_phys_ZPP_$FluidProperties = function() {
	this.wrap_gravity = null;
	this.density = 0.0;
	this.viscosity = 0.0;
};
zpp_$nape_phys_ZPP_$FluidProperties.__name__ = true;
zpp_$nape_phys_ZPP_$FluidProperties.prototype = {
	__class__: zpp_$nape_phys_ZPP_$FluidProperties
};
var zpp_$nape_phys_ZPP_$Material = function() {
	this.rollingFriction = 0.0;
	this.elasticity = 0.0;
	this.density = 0.0;
	this.staticFriction = 0.0;
	this.dynamicFriction = 0.0;
};
zpp_$nape_phys_ZPP_$Material.__name__ = true;
zpp_$nape_phys_ZPP_$Material.prototype = {
	__class__: zpp_$nape_phys_ZPP_$Material
};
var zpp_$nape_shape_ZPP_$Shape = function() {
	this.polygon = null;
	this.circle = null;
	this.localCOMy = 0.0;
	this.localCOMx = 0.0;
	this.inertia = 0.0;
	this.zip_area_inertia = false;
	this.area = 0.0;
	this.type = 0;
	this.body = null;
	this.outer = null;
};
zpp_$nape_shape_ZPP_$Shape.__name__ = true;
zpp_$nape_shape_ZPP_$Shape.__super__ = zpp_$nape_phys_ZPP_$Interactor;
zpp_$nape_shape_ZPP_$Shape.prototype = $extend(zpp_$nape_phys_ZPP_$Interactor.prototype,{
	validate_area_inertia: function() {
		if(this.zip_area_inertia) {
			this.zip_area_inertia = false;
			if(this.type == 0) {
				this.circle.__validate_area_inertia();
			} else {
				this.polygon.__validate_area_inertia();
			}
		}
	}
	,__class__: zpp_$nape_shape_ZPP_$Shape
});
var zpp_$nape_shape_ZPP_$Circle = function() {
	this.radius = 0.0;
};
zpp_$nape_shape_ZPP_$Circle.__name__ = true;
zpp_$nape_shape_ZPP_$Circle.__super__ = zpp_$nape_shape_ZPP_$Shape;
zpp_$nape_shape_ZPP_$Circle.prototype = $extend(zpp_$nape_shape_ZPP_$Shape.prototype,{
	__validate_area_inertia: function() {
		var r2 = this.radius * this.radius;
		this.area = r2 * Math.PI;
		this.inertia = r2 * 0.5 + (this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy);
	}
	,__class__: zpp_$nape_shape_ZPP_$Circle
});
var zpp_$nape_shape_ZPP_$Edge = function() {
	this.tp1 = 0.0;
	this.tp0 = 0.0;
	this.gp1 = null;
	this.lp1 = null;
	this.gp0 = null;
	this.lp0 = null;
	this.gprojection = 0.0;
	this.lprojection = 0.0;
	this.length = 0.0;
	this.wrap_gnorm = null;
	this.gnormy = 0.0;
	this.gnormx = 0.0;
	this.wrap_lnorm = null;
	this.lnormy = 0.0;
	this.lnormx = 0.0;
	this.outer = null;
	this.polygon = null;
};
zpp_$nape_shape_ZPP_$Edge.__name__ = true;
zpp_$nape_shape_ZPP_$Edge.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			zpp_$nape_shape_ZPP_$Edge.internal = true;
			this.outer = new nape_shape_Edge();
			zpp_$nape_shape_ZPP_$Edge.internal = false;
			this.outer.zpp_inner = this;
		}
		return this.outer;
	}
	,__class__: zpp_$nape_shape_ZPP_$Edge
};
var zpp_$nape_shape_ZPP_$Polygon = function() {
	this.zip_gaxi = false;
	this.zip_gverts = false;
	this.zip_laxi = false;
	this.zip_lverts = false;
	this.reverse_flag = false;
	this.edgeCnt = 0;
	this.wrap_edges = null;
	this.edges = null;
	this.wrap_gverts = null;
	this.gverts = null;
	this.wrap_lverts = null;
	this.lverts = null;
};
zpp_$nape_shape_ZPP_$Polygon.__name__ = true;
zpp_$nape_shape_ZPP_$Polygon.__super__ = zpp_$nape_shape_ZPP_$Shape;
zpp_$nape_shape_ZPP_$Polygon.prototype = $extend(zpp_$nape_shape_ZPP_$Shape.prototype,{
	validate_lverts: function() {
		if(this.zip_lverts) {
			this.zip_lverts = false;
			if(this.lverts.length > 2) {
				this.validate_area_inertia();
				if(this.area < 0) {
					this.reverse_vertices();
					this.area = -this.area;
				}
			}
		}
	}
	,reverse_vertices: function() {
		this.lverts.reverse();
		this.gverts.reverse();
		this.edges.reverse();
		var ite = this.edges.iterator_at(this.edgeCnt - 1);
		var elem = this.edges.pop_unsafe();
		this.edges.insert(ite,elem);
		this.reverse_flag = !this.reverse_flag;
		if(this.wrap_lverts != null) {
			this.wrap_lverts.zpp_inner.reverse_flag = this.reverse_flag;
		}
		if(this.wrap_gverts != null) {
			this.wrap_gverts.zpp_inner.reverse_flag = this.reverse_flag;
		}
		if(this.wrap_edges != null) {
			this.wrap_edges.zpp_inner.reverse_flag = this.reverse_flag;
		}
	}
	,validate_laxi: function() {
		if(this.zip_laxi) {
			this.zip_laxi = false;
			this.validate_lverts();
			var ite = this.edges.head;
			var cx_ite = this.lverts.next;
			var u = cx_ite;
			cx_ite = cx_ite.next;
			while(cx_ite != null) {
				var v = cx_ite;
				var edge = ite.elt;
				ite = ite.next;
				edge.lp0 = u;
				edge.lp1 = v;
				var dx = 0.0;
				var dy = 0.0;
				dx = u.x - v.x;
				dy = u.y - v.y;
				var l = Math.sqrt(dx * dx + dy * dy);
				edge.length = l;
				var t = 1.0 / l;
				dx *= t;
				dy *= t;
				var t1 = dx;
				dx = -dy;
				dy = t1;
				edge.lprojection = dx * u.x + dy * u.y;
				edge.lnormx = dx;
				edge.lnormy = dy;
				if(edge.wrap_lnorm != null) {
					edge.wrap_lnorm.zpp_inner.x = dx;
					edge.wrap_lnorm.zpp_inner.y = dy;
				}
				u = v;
				cx_ite = cx_ite.next;
			}
			var v1 = this.lverts.next;
			var edge1 = ite.elt;
			ite = ite.next;
			edge1.lp0 = u;
			edge1.lp1 = v1;
			var dx1 = 0.0;
			var dy1 = 0.0;
			dx1 = u.x - v1.x;
			dy1 = u.y - v1.y;
			var l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);
			edge1.length = l1;
			var t2 = 1.0 / l1;
			dx1 *= t2;
			dy1 *= t2;
			var t3 = dx1;
			dx1 = -dy1;
			dy1 = t3;
			edge1.lprojection = dx1 * u.x + dy1 * u.y;
			edge1.lnormx = dx1;
			edge1.lnormy = dy1;
			if(edge1.wrap_lnorm != null) {
				edge1.wrap_lnorm.zpp_inner.x = dx1;
				edge1.wrap_lnorm.zpp_inner.y = dy1;
			}
		}
	}
	,__validate_area_inertia: function() {
		if(this.lverts.next == null || this.lverts.next.next == null || this.lverts.next.next.next == null) {
			this.area = 0;
			this.inertia = 0;
		} else {
			this.area = 0.0;
			var s1 = 0.0;
			var s2 = 0.0;
			var cx_ite = this.lverts.next;
			var u = cx_ite;
			cx_ite = cx_ite.next;
			var v = cx_ite;
			cx_ite = cx_ite.next;
			while(cx_ite != null) {
				var w = cx_ite;
				var a = v.y * u.x - v.x * u.y;
				var b = v.x * v.x + v.y * v.y + (v.x * u.x + v.y * u.y) + (u.x * u.x + u.y * u.y);
				s1 += a * b;
				s2 += a;
				this.area += v.x * (w.y - u.y);
				u = v;
				v = w;
				cx_ite = cx_ite.next;
			}
			cx_ite = this.lverts.next;
			var w1 = cx_ite;
			var a1 = v.y * u.x - v.x * u.y;
			var b1 = v.x * v.x + v.y * v.y + (v.x * u.x + v.y * u.y) + (u.x * u.x + u.y * u.y);
			s1 += a1 * b1;
			s2 += a1;
			this.area += v.x * (w1.y - u.y);
			u = v;
			v = w1;
			cx_ite = cx_ite.next;
			var w2 = cx_ite;
			var a2 = v.y * u.x - v.x * u.y;
			var b2 = v.x * v.x + v.y * v.y + (v.x * u.x + v.y * u.y) + (u.x * u.x + u.y * u.y);
			s1 += a2 * b2;
			s2 += a2;
			this.area += v.x * (w2.y - u.y);
			this.inertia = s1 / (6 * s2);
			this.area *= 0.5;
			if(this.area < 0) {
				this.area = -this.area;
				this.reverse_vertices();
			}
		}
	}
	,__class__: zpp_$nape_shape_ZPP_$Polygon
});
var zpp_$nape_util_ZNPList_$ZPP_$Shape = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Shape.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Shape.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Shape
};
var zpp_$nape_util_ZNPList_$ZPP_$Body = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Body.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Body.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Body
};
var zpp_$nape_util_ZNPList_$ZPP_$Compound = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Compound.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Compound.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Compound
};
var zpp_$nape_util_ZNPList_$ZPP_$Arbiter = function() {
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Arbiter.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Arbiter.prototype = {
	__class__: zpp_$nape_util_ZNPList_$ZPP_$Arbiter
};
var zpp_$nape_util_ZNPList_$ZPP_$Edge = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Edge.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Edge.prototype = {
	insert: function(cur,o) {
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool == null) {
			ret = new zpp_$nape_util_ZNPNode_$ZPP_$Edge();
		} else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool = ret.next;
			ret.next = null;
		}
		ret.elt = o;
		var temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool = o;
		if(this.head == null) {
			this.pushmod = true;
		}
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,reverse: function() {
		var cur = this.head;
		var pre = null;
		while(cur != null) {
			var nx = cur.next;
			cur.next = pre;
			this.head = cur;
			pre = cur;
			cur = nx;
		}
		this.modified = true;
		this.pushmod = true;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Edge
};
var zpp_$nape_util_ZNPList_$ZPP_$Listener = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$Listener.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$Listener.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Listener
};
var zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup
};
var zpp_$nape_util_ZNPList_$ConvexResult = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ConvexResult.__name__ = true;
zpp_$nape_util_ZNPList_$ConvexResult.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ConvexResult
};
var zpp_$nape_util_ZNPList_$ZPP_$GeomPoly = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$ZPP_$GeomPoly.__name__ = true;
zpp_$nape_util_ZNPList_$ZPP_$GeomPoly.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$GeomPoly
};
var zpp_$nape_util_ZNPList_$RayResult = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
zpp_$nape_util_ZNPList_$RayResult.__name__ = true;
zpp_$nape_util_ZNPList_$RayResult.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$RayResult
};
var zpp_$nape_util_ZNPNode_$ZPP_$CbType = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$CbType.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$CbType.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$CbType
};
var zpp_$nape_util_ZNPNode_$ZPP_$Shape = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Shape.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Shape.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Shape
};
var zpp_$nape_util_ZNPNode_$ZPP_$Body = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Body.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Body.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Body
};
var zpp_$nape_util_ZNPNode_$ZPP_$Constraint = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Constraint.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Constraint.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Constraint
};
var zpp_$nape_util_ZNPNode_$ZPP_$Compound = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Compound.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Compound.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Compound
};
var zpp_$nape_util_ZNPNode_$ZPP_$Arbiter = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Arbiter
};
var zpp_$nape_util_ZNPNode_$ZPP_$Interactor = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Interactor.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Interactor.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Interactor
};
var zpp_$nape_util_ZNPNode_$ZPP_$Vec2 = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Vec2.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Vec2.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Vec2
};
var zpp_$nape_util_ZNPNode_$ZPP_$Edge = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Edge.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Edge.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Edge
};
var zpp_$nape_util_ZNPNode_$ZPP_$Listener = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$Listener.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$Listener.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Listener
};
var zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup
};
var zpp_$nape_util_ZNPNode_$ConvexResult = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ConvexResult.__name__ = true;
zpp_$nape_util_ZNPNode_$ConvexResult.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ConvexResult
};
var zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.__name__ = true;
zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly
};
var zpp_$nape_util_ZNPNode_$RayResult = function() {
	this.elt = null;
	this.next = null;
};
zpp_$nape_util_ZNPNode_$RayResult.__name__ = true;
zpp_$nape_util_ZNPNode_$RayResult.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$RayResult
};
var zpp_$nape_util_ZPP_$ConstraintList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$ConstraintList.__name__ = true;
zpp_$nape_util_ZPP_$ConstraintList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ConstraintList
};
var zpp_$nape_util_ZPP_$BodyList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$BodyList.__name__ = true;
zpp_$nape_util_ZPP_$BodyList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$BodyList
};
var zpp_$nape_util_ZPP_$InteractorList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$InteractorList.__name__ = true;
zpp_$nape_util_ZPP_$InteractorList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$InteractorList
};
var zpp_$nape_util_ZPP_$CompoundList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$CompoundList.__name__ = true;
zpp_$nape_util_ZPP_$CompoundList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$CompoundList
};
var zpp_$nape_util_ZPP_$ListenerList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$ListenerList.__name__ = true;
zpp_$nape_util_ZPP_$ListenerList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ListenerList
};
var zpp_$nape_util_ZPP_$CbTypeList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
	this._invalidated = true;
};
zpp_$nape_util_ZPP_$CbTypeList.__name__ = true;
zpp_$nape_util_ZPP_$CbTypeList.get = function(list,imm) {
	if(imm == null) {
		imm = false;
	}
	var ret = new nape_callbacks_CbTypeList();
	ret.zpp_inner.inner = list;
	if(imm) {
		ret.zpp_inner.immutable = true;
	}
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$CbTypeList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) {
			this._modifiable();
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) {
			this._invalidate(this);
		}
	}
	,__class__: zpp_$nape_util_ZPP_$CbTypeList
};
var zpp_$nape_util_ZPP_$Vec2List = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Vec2();
	this._invalidated = true;
};
zpp_$nape_util_ZPP_$Vec2List.__name__ = true;
zpp_$nape_util_ZPP_$Vec2List.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) {
			this._modifiable();
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) {
			this._invalidate(this);
		}
	}
	,__class__: zpp_$nape_util_ZPP_$Vec2List
};
var zpp_$nape_util_ZPP_$GeomPolyList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$GeomPolyList.__name__ = true;
zpp_$nape_util_ZPP_$GeomPolyList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$GeomPolyList
};
var zpp_$nape_util_ZPP_$RayResultList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$RayResultList.__name__ = true;
zpp_$nape_util_ZPP_$RayResultList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$RayResultList
};
var zpp_$nape_util_ZPP_$ConvexResultList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$ConvexResultList.__name__ = true;
zpp_$nape_util_ZPP_$ConvexResultList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ConvexResultList
};
var zpp_$nape_util_ZPP_$EdgeList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$EdgeList.__name__ = true;
zpp_$nape_util_ZPP_$EdgeList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$EdgeList
};
var zpp_$nape_util_ZPP_$ShapeList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$ShapeList.__name__ = true;
zpp_$nape_util_ZPP_$ShapeList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ShapeList
};
var zpp_$nape_util_ZPP_$InteractionGroupList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$InteractionGroupList.__name__ = true;
zpp_$nape_util_ZPP_$InteractionGroupList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$InteractionGroupList
};
var zpp_$nape_util_ZPP_$ArbiterList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$ArbiterList.__name__ = true;
zpp_$nape_util_ZPP_$ArbiterList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ArbiterList
};
var zpp_$nape_util_ZPP_$ContactList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
zpp_$nape_util_ZPP_$ContactList.__name__ = true;
zpp_$nape_util_ZPP_$ContactList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) {
				this.push_ite = null;
			}
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) {
				this._validate();
			}
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ContactList
};
var zpp_$nape_util_ZPP_$PubPool = function() { };
zpp_$nape_util_ZPP_$PubPool.__name__ = true;
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
msignal_SlotList.NIL = new msignal_SlotList(null,null);
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
motion_actuators_SimpleActuator.actuators = [];
motion_actuators_SimpleActuator.actuatorsLength = 0;
motion_actuators_SimpleActuator.addedEvent = false;
motion_Actuate.defaultActuator = motion_actuators_SimpleActuator;
motion_Actuate.defaultEase = motion_easing_Expo.get_easeOut();
motion_Actuate.targetLibraries = new haxe_ds_ObjectMap();
shaders_SkyShader.uniforms = (function($this) {
	var $r;
	var tmp = { type : "v3", value : new THREE.Vector3()};
	var tmp1 = { type : "v3", value : new THREE.Vector3()};
	var tmp2 = { type : "v3", value : new THREE.Vector3()};
	$r = { luminance : { type : "f", value : 1.0}, turbidity : { type : "f", value : 1.0}, rayleigh : { type : "f", value : 1.0}, mieCoefficient : { type : "f", value : 1.0}, mieDirectionalG : { type : "f", value : 1.0}, sunPosition : tmp, cameraPos : tmp1, refractiveIndex : { type : "f", value : 1.0}, numMolecules : { type : "f", value : 1.0}, depolarizationFactor : { type : "f", value : 1.0}, primaries : tmp2, mieKCoefficient : { type : "v3", value : new THREE.Vector3()}, mieV : { type : "f", value : 1.0}, rayleighZenithLength : { type : "f", value : 1.0}, mieZenithLength : { type : "f", value : 1.0}, sunIntensityFactor : { type : "f", value : 1.0}, sunIntensityFalloffSteepness : { type : "f", value : 1.0}, sunAngularDiameterDegrees : { type : "f", value : 1.0}, tonemapWeighting : { type : "f", value : 1000.0}};
	return $r;
}(this));
shaders_SkyShader.vertexShader = "varying vec3 vWorldPosition;\r\n\r\nvoid main()\r\n{\r\n\tvec4 worldPosition = modelMatrix * vec4(position, 1.0);\r\n\tvWorldPosition = worldPosition.xyz;\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}";
shaders_SkyShader.fragmentShader = "varying vec3 vWorldPosition;\r\n\r\nuniform vec3 sunPosition;\r\nuniform float luminance;\r\nuniform float turbidity;\r\nuniform float rayleigh;\r\nuniform float mieCoefficient;\r\nuniform float mieDirectionalG;\r\nuniform vec3 cameraPos;\r\nuniform float refractiveIndex;\r\nuniform float numMolecules;\r\nuniform float depolarizationFactor;\r\nuniform vec3 primaries;\r\nuniform vec3 mieKCoefficient;\r\nuniform float mieV;\r\nuniform float rayleighZenithLength;\r\nuniform float mieZenithLength;\r\nuniform float sunIntensityFactor;\r\nuniform float sunIntensityFalloffSteepness;\r\nuniform float sunAngularDiameterDegrees;\r\nuniform float tonemapWeighting;\r\n\r\nconst float pi = 3.141592653589793238462643383279502884197169;\r\nconst vec3 up = vec3(0.0, 1.0, 0.0);\r\n\r\nvec3 totalRayleigh(vec3 lambda)\r\n{\r\n\treturn (8.0 * pow(pi, 3.0) * pow(pow(refractiveIndex, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * depolarizationFactor)) / (3.0 * numMolecules * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * depolarizationFactor));\r\n}\r\n\r\nvec3 totalMie(vec3 lambda, vec3 K, float T)\r\n{\r\n\tfloat c = 0.2 * T * 10e-18;\r\n\treturn 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(mieV - 2.0)) * K;\r\n}\r\n\r\nfloat rayleighPhase(float cosTheta)\r\n{\r\n\treturn (3.0 / (16.0 * pi)) * (1.0 + pow(cosTheta, 2.0));\r\n}\r\n\r\nfloat henyeyGreensteinPhase(float cosTheta, float g)\r\n{\r\n\treturn (1.0 / (4.0 * pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0 * g * cosTheta + pow(g, 2.0), 1.5));\r\n}\r\n\r\nfloat sunIntensity(float zenithAngleCos)\r\n{\r\n\tfloat cutoffAngle = pi / 1.95; // Earth shadow hack\r\n\treturn sunIntensityFactor * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos)) / sunIntensityFalloffSteepness)));\r\n}\r\n\r\n// Whitescale tonemapping calculation, see http://filmicgames.com/archives/75\r\n// Also see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\r\nconst float A = 0.15; // Shoulder strength\r\nconst float B = 0.50; // Linear strength\r\nconst float C = 0.10; // Linear angle\r\nconst float D = 0.20; // Toe strength\r\nconst float E = 0.02; // Toe numerator\r\nconst float F = 0.30; // Toe denominator\r\nvec3 Uncharted2Tonemap(vec3 W)\r\n{\r\n\treturn ((W * (A * W + C * B) + D * E) / (W * (A * W + B) + D * F)) - E / F;\r\n}\r\n\r\nvoid main()\r\n{\r\n\t// Rayleigh coefficient\r\n\tfloat sunfade = 1.0 - clamp(1.0 - exp((sunPosition.y / 450000.0)), 0.0, 1.0);\r\n\tfloat rayleighCoefficient = rayleigh - (1.0 * (1.0 - sunfade));\r\n\tvec3 betaR = totalRayleigh(primaries) * rayleighCoefficient;\r\n\t\r\n\t// Mie coefficient\r\n\tvec3 betaM = totalMie(primaries, mieKCoefficient, turbidity) * mieCoefficient;\r\n\t\r\n\t// Optical length, cutoff angle at 90 to avoid singularity\r\n\tfloat zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\r\n\tfloat denom = cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253);\r\n\tfloat sR = rayleighZenithLength / denom;\r\n\tfloat sM = mieZenithLength / denom;\r\n\t\r\n\t// Combined extinction factor\r\n\tvec3 Fex = exp(-(betaR * sR + betaM * sM));\r\n\t\r\n\t// In-scattering\r\n\tvec3 sunDirection = normalize(sunPosition);\r\n\tfloat cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);\r\n\tvec3 betaRTheta = betaR * rayleighPhase(cosTheta * 0.5 + 0.5);\r\n\tvec3 betaMTheta = betaM * henyeyGreensteinPhase(cosTheta, mieDirectionalG);\r\n\tfloat sunE = sunIntensity(dot(sunDirection, up));\r\n\tvec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex), vec3(1.5));\r\n\tLin *= mix(vec3(1.0), pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex, vec3(0.5)), clamp(pow(1.0 - dot(up, sunDirection), 5.0), 0.0, 1.0));\r\n\t\r\n\t// Composition + solar disc\r\n\tfloat sunAngularDiameterCos = cos(sunAngularDiameterDegrees);\r\n\tfloat sundisk = smoothstep(sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta);\r\n\tvec3 L0 = vec3(0.1) * Fex;\r\n\tL0 += sunE * 19000.0 * Fex * sundisk;\r\n\tvec3 texColor = Lin + L0;\r\n\ttexColor *= 0.04;\r\n\ttexColor += vec3(0.0, 0.001, 0.0025) * 0.3;\r\n\t\r\n\t// Tonemapping\r\n\tvec3 whiteScale = 1.0 / Uncharted2Tonemap(vec3(tonemapWeighting)); \r\n\tvec3 curr = Uncharted2Tonemap((log2(2.0 / pow(luminance, 4.0))) * texColor);\r\n\tvec3 color = curr * whiteScale;\r\n\tvec3 retColor = pow(color, vec3(1.0 / (1.2 + (1.2 * sunfade))));\r\n\t\r\n\tgl_FragColor.xyz = retColor;\r\n\tgl_FragColor.w = 1.0;\r\n}";
zpp_$nape_ZPP_$ID._CbType = 0;
zpp_$nape_callbacks_ZPP_$CbType.ANY_SHAPE = new nape_callbacks_CbType();
zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY = new nape_callbacks_CbType();
zpp_$nape_callbacks_ZPP_$CbType.ANY_COMPOUND = new nape_callbacks_CbType();
zpp_$nape_callbacks_ZPP_$CbType.ANY_CONSTRAINT = new nape_callbacks_CbType();
zpp_$nape_util_ZPP_$Flags.internal = false;
zpp_$nape_dynamics_ZPP_$Arbiter.internal = false;
zpp_$nape_dynamics_ZPP_$Arbiter.COL = 1;
zpp_$nape_dynamics_ZPP_$Arbiter.FLUID = 4;
zpp_$nape_dynamics_ZPP_$Contact.internal = false;
zpp_$nape_shape_ZPP_$Edge.internal = false;
zpp_$nape_util_ZPP_$ConstraintList.internal = false;
zpp_$nape_util_ZPP_$BodyList.internal = false;
zpp_$nape_util_ZPP_$InteractorList.internal = false;
zpp_$nape_util_ZPP_$CompoundList.internal = false;
zpp_$nape_util_ZPP_$ListenerList.internal = false;
zpp_$nape_util_ZPP_$CbTypeList.internal = false;
zpp_$nape_util_ZPP_$Vec2List.internal = false;
zpp_$nape_util_ZPP_$GeomPolyList.internal = false;
zpp_$nape_util_ZPP_$RayResultList.internal = false;
zpp_$nape_util_ZPP_$ConvexResultList.internal = false;
zpp_$nape_util_ZPP_$EdgeList.internal = false;
zpp_$nape_util_ZPP_$ShapeList.internal = false;
zpp_$nape_util_ZPP_$InteractionGroupList.internal = false;
zpp_$nape_util_ZPP_$ArbiterList.internal = false;
zpp_$nape_util_ZPP_$ContactList.internal = false;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=game.js.map